{"ast":null,"code":"import _classCallCheck from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport Node from './Node.js';\nimport VaryNode from './VaryNode.js';\nvar AttributeNode = /*#__PURE__*/function (_Node) {\n  _inherits(AttributeNode, _Node);\n  var _super = _createSuper(AttributeNode);\n  function AttributeNode(attributeName, nodeType) {\n    var _this;\n    _classCallCheck(this, AttributeNode);\n    _this = _super.call(this, nodeType);\n    _this._attributeName = attributeName;\n    return _this;\n  }\n  _createClass(AttributeNode, [{\n    key: \"getHash\",\n    value: function getHash(builder) {\n      return this.getAttributeName(builder);\n    }\n  }, {\n    key: \"setAttributeName\",\n    value: function setAttributeName(attributeName) {\n      this._attributeName = attributeName;\n      return this;\n    }\n  }, {\n    key: \"getAttributeName\",\n    value: function getAttributeName() {\n      return this._attributeName;\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder) {\n      var attribute = builder.getAttribute(this.getAttributeName(builder), this.getNodeType(builder));\n      if (builder.isShaderStage('vertex')) {\n        return attribute.name;\n      } else {\n        var nodeVary = new VaryNode(this);\n        return nodeVary.build(builder, attribute.type);\n      }\n    }\n  }]);\n  return AttributeNode;\n}(Node);\nexport default AttributeNode;","map":null,"metadata":{},"sourceType":"module"}