{"ast":null,"code":"import _objectSpread from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"samples\"];\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\n\n// ðŸ‘‡ uncomment when TS version supports function overloads\n// export function useFBO(settings?: FBOSettings)\nfunction useFBO(width, height, settings) {\n  var _useThree = useThree(),\n    gl = _useThree.gl,\n    size = _useThree.size,\n    viewport = _useThree.viewport;\n  var _width = typeof width === 'number' ? width : size.width * viewport.dpr;\n  var _height = typeof height === 'number' ? height : size.height * viewport.dpr;\n  var _settings = (typeof width === 'number' ? settings : width) || {};\n  var samples = _settings.samples,\n    targetSettings = _objectWithoutProperties(_settings, _excluded);\n  var target = React.useMemo(function () {\n    var target;\n    target = new THREE.WebGLRenderTarget(_width, _height, _objectSpread({\n      minFilter: THREE.LinearFilter,\n      magFilter: THREE.LinearFilter,\n      encoding: gl.outputEncoding,\n      type: THREE.HalfFloatType\n    }, targetSettings));\n    target.samples = samples;\n    return target;\n  }, []);\n  React.useLayoutEffect(function () {\n    target.setSize(_width, _height);\n    if (samples) target.samples = samples;\n  }, [samples, target, _width, _height]);\n  React.useEffect(function () {\n    return function () {\n      return target.dispose();\n    };\n  }, []);\n  return target;\n}\nexport { useFBO };","map":null,"metadata":{},"sourceType":"module"}