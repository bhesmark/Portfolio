{"ast":null,"code":"import _objectWithoutProperties from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"envMap\", \"resolution\", \"frames\", \"children\", \"makeDefault\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport { useFBO } from './useFBO.js';\nvar isFunction = function isFunction(node) {\n  return typeof node === 'function';\n};\nvar OrthographicCamera = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var envMap = _ref.envMap,\n    _ref$resolution = _ref.resolution,\n    resolution = _ref$resolution === void 0 ? 256 : _ref$resolution,\n    _ref$frames = _ref.frames,\n    frames = _ref$frames === void 0 ? Infinity : _ref$frames,\n    children = _ref.children,\n    makeDefault = _ref.makeDefault,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var set = useThree(function (_ref2) {\n    var set = _ref2.set;\n    return set;\n  });\n  var camera = useThree(function (_ref3) {\n    var camera = _ref3.camera;\n    return camera;\n  });\n  var size = useThree(function (_ref4) {\n    var size = _ref4.size;\n    return size;\n  });\n  var cameraRef = React.useRef(null);\n  var groupRef = React.useRef(null);\n  var fbo = useFBO(resolution);\n  React.useLayoutEffect(function () {\n    if (!props.manual) {\n      cameraRef.current.updateProjectionMatrix();\n    }\n  }, [size, props]);\n  React.useLayoutEffect(function () {\n    cameraRef.current.updateProjectionMatrix();\n  });\n  React.useLayoutEffect(function () {\n    if (makeDefault) {\n      var oldCam = camera;\n      set(function () {\n        return {\n          camera: cameraRef.current\n        };\n      });\n      return function () {\n        return set(function () {\n          return {\n            camera: oldCam\n          };\n        });\n      };\n    } // The camera should not be part of the dependency list because this components camera is a stable reference\n    // that must exchange the default, and clean up after itself on unmount.\n  }, [cameraRef, makeDefault, set]);\n  var count = 0;\n  var oldEnvMap = null;\n  var functional = isFunction(children);\n  useFrame(function (state) {\n    if (functional && (frames === Infinity || count < frames)) {\n      groupRef.current.visible = false;\n      state.gl.setRenderTarget(fbo);\n      oldEnvMap = state.scene.background;\n      if (envMap) state.scene.background = envMap;\n      state.gl.render(state.scene, cameraRef.current);\n      state.scene.background = oldEnvMap;\n      state.gl.setRenderTarget(null);\n      groupRef.current.visible = true;\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"orthographicCamera\", _extends({\n    left: size.width / -2,\n    right: size.width / 2,\n    top: size.height / 2,\n    bottom: size.height / -2,\n    ref: mergeRefs([cameraRef, ref])\n  }, props), !functional && children), /*#__PURE__*/React.createElement(\"group\", {\n    ref: groupRef\n  }, functional && children(fbo.texture)));\n});\nexport { OrthographicCamera };","map":null,"metadata":{},"sourceType":"module"}