{"ast":null,"code":"import _toConsumableArray from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"opacity\", \"speed\", \"width\", \"depth\", \"segments\", \"texture\", \"color\", \"depthTest\"];\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { Billboard } from './Billboard.js';\nimport { Plane } from './shapes.js';\nimport { useTexture } from './useTexture.js';\nvar CLOUD_URL = 'https://rawcdn.githack.com/pmndrs/drei-assets/9225a9f1fbd449d9411125c2f419b843d0308c9f/cloud.png';\nfunction Cloud(_ref) {\n  var _ref$opacity = _ref.opacity,\n    opacity = _ref$opacity === void 0 ? 0.5 : _ref$opacity,\n    _ref$speed = _ref.speed,\n    speed = _ref$speed === void 0 ? 0.4 : _ref$speed,\n    _ref$width = _ref.width,\n    width = _ref$width === void 0 ? 10 : _ref$width,\n    _ref$depth = _ref.depth,\n    depth = _ref$depth === void 0 ? 1.5 : _ref$depth,\n    _ref$segments = _ref.segments,\n    segments = _ref$segments === void 0 ? 20 : _ref$segments,\n    _ref$texture = _ref.texture,\n    texture = _ref$texture === void 0 ? CLOUD_URL : _ref$texture,\n    _ref$color = _ref.color,\n    color = _ref$color === void 0 ? '#ffffff' : _ref$color,\n    _ref$depthTest = _ref.depthTest,\n    depthTest = _ref$depthTest === void 0 ? true : _ref$depthTest,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var gl = useThree(function (state) {\n    return state.gl;\n  });\n  var group = React.useRef();\n  var cloudTexture = useTexture(texture);\n  var clouds = React.useMemo(function () {\n    return _toConsumableArray(new Array(segments)).map(function (_, index) {\n      return {\n        x: width / 2 - Math.random() * width,\n        y: width / 2 - Math.random() * width,\n        scale: 0.4 + Math.sin((index + 1) / segments * Math.PI) * ((0.2 + Math.random()) * 10),\n        density: Math.max(0.2, Math.random()),\n        rotation: Math.max(0.002, 0.005 * Math.random()) * speed\n      };\n    });\n  }, [width, segments, speed]);\n  useFrame(function (state) {\n    var _group$current;\n    return (_group$current = group.current) == null ? void 0 : _group$current.children.forEach(function (cloud, index) {\n      cloud.children[0].rotation.z += clouds[index].rotation;\n      cloud.children[0].scale.setScalar(clouds[index].scale + (1 + Math.sin(state.clock.getElapsedTime() / 10)) / 2 * index / 10);\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"group\", {\n    position: [0, 0, segments / 2 * depth],\n    ref: group\n  }, clouds.map(function (_ref2, index) {\n    var x = _ref2.x,\n      y = _ref2.y,\n      scale = _ref2.scale,\n      density = _ref2.density;\n    return /*#__PURE__*/React.createElement(Billboard, {\n      key: index,\n      position: [x, y, -index * depth]\n    }, /*#__PURE__*/React.createElement(Plane, {\n      scale: scale,\n      rotation: [0, 0, 0]\n    }, /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n      map: cloudTexture,\n      \"map-encoding\": gl.outputEncoding,\n      transparent: true,\n      opacity: scale / 6 * density * opacity,\n      depthTest: depthTest,\n      color: color\n    })));\n  })));\n}\nexport { Cloud };","map":null,"metadata":{},"sourceType":"module"}