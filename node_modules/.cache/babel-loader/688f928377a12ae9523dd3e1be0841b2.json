{"ast":null,"code":"import _slicedToArray from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { createPortal } from '@react-three/fiber';\nimport { Flow } from 'three-stdlib';\nvar CurveModifier = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n    curve = _ref.curve;\n  var _React$useState = React.useState(function () {\n      return new THREE.Scene();\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 1),\n    scene = _React$useState2[0];\n  var _React$useState3 = React.useState(),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    obj = _React$useState4[0],\n    set = _React$useState4[1];\n  var modifier = React.useRef();\n  React.useEffect(function () {\n    modifier.current = new Flow(scene.children[0]);\n    set(modifier.current.object3D);\n  }, [children]);\n  React.useEffect(function () {\n    var _modifier$current;\n    if (curve) (_modifier$current = modifier.current) == null ? void 0 : _modifier$current.updateCurve(0, curve);\n  }, [curve]);\n  React.useImperativeHandle(ref, function () {\n    return {\n      moveAlongCurve: function moveAlongCurve(val) {\n        var _modifier$current2;\n        (_modifier$current2 = modifier.current) == null ? void 0 : _modifier$current2.moveAlongCurve(val);\n      }\n    };\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, createPortal(children, scene), obj && /*#__PURE__*/React.createElement(\"primitive\", {\n    object: obj\n  }));\n});\nexport { CurveModifier };","map":null,"metadata":{},"sourceType":"module"}