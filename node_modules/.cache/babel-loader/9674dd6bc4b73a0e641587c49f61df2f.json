{"ast":null,"code":"import _objectWithoutProperties from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"domElement\"],\n  _excluded2 = [\"onChange\", \"makeDefault\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { FlyControls as FlyControls$1 } from 'three-stdlib';\nvar FlyControls = /*#__PURE__*/React.forwardRef(function (_ref, fref) {\n  var domElement = _ref.domElement,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var onChange = props.onChange,\n    makeDefault = props.makeDefault,\n    rest = _objectWithoutProperties(props, _excluded2);\n  var invalidate = useThree(function (state) {\n    return state.invalidate;\n  });\n  var camera = useThree(function (state) {\n    return state.camera;\n  });\n  var gl = useThree(function (state) {\n    return state.gl;\n  });\n  var events = useThree(function (state) {\n    return state.events;\n  });\n  var get = useThree(function (state) {\n    return state.get;\n  });\n  var set = useThree(function (state) {\n    return state.set;\n  });\n  var explDomElement = domElement || events.connected || gl.domElement;\n  var controls = React.useMemo(function () {\n    return new FlyControls$1(camera);\n  }, [camera]);\n  React.useEffect(function () {\n    controls.connect(explDomElement);\n    return function () {\n      return void controls.dispose();\n    };\n  }, [explDomElement, controls, invalidate]);\n  React.useEffect(function () {\n    var callback = function callback(e) {\n      invalidate();\n      if (onChange) onChange(e);\n    };\n    controls.addEventListener == null ? void 0 : controls.addEventListener('change', callback);\n    return function () {\n      return controls.removeEventListener == null ? void 0 : controls.removeEventListener('change', callback);\n    };\n  }, [onChange, invalidate]);\n  React.useEffect(function () {\n    if (makeDefault) {\n      var old = get().controls;\n      set({\n        controls: controls\n      });\n      return function () {\n        return set({\n          controls: old\n        });\n      };\n    }\n  }, [makeDefault, controls]);\n  useFrame(function (_, delta) {\n    return controls.update(delta);\n  });\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: fref,\n    object: controls,\n    args: [camera, explDomElement]\n  }, rest));\n});\nexport { FlyControls };","map":null,"metadata":{},"sourceType":"module"}