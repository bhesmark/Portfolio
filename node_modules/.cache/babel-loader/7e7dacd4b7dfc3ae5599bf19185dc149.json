{"ast":null,"code":"import * as React from 'react';\nimport { addEffect, addAfterEffect } from '@react-three/fiber';\nfunction useIntersect(onChange) {\n  var ref = React.useRef(null);\n  var check = React.useRef(false);\n  var temp = React.useRef(false);\n  var callback = React.useRef(onChange);\n  React.useLayoutEffect(function () {\n    return void (callback.current = onChange);\n  }, [onChange]);\n  React.useEffect(function () {\n    var obj = ref.current;\n    if (obj) {\n      // Stamp out frustum check pre-emptively\n      var unsub1 = addEffect(function () {\n        check.current = false;\n        return true;\n      }); // If the object is inside the frustum three will call onRender\n\n      var oldOnRender = obj.onBeforeRender;\n      obj.onBeforeRender = function () {\n        return check.current = true;\n      }; // Compare the check value against the temp value, if it differs set state\n\n      var unsub2 = addAfterEffect(function () {\n        if (check.current !== temp.current) callback.current == null ? void 0 : callback.current(temp.current = check.current);\n        return true;\n      });\n      return function () {\n        obj.onBeforeRender = oldOnRender;\n        unsub1();\n        unsub2();\n      };\n    }\n  }, []);\n  return ref;\n}\nexport { useIntersect };","map":null,"metadata":{},"sourceType":"module"}