{"ast":null,"code":"import _toConsumableArray from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"box\", \"multiple\", \"children\", \"onChange\", \"border\", \"backgroundColor\", \"filter\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { SelectionBox } from 'three-stdlib';\nimport { useThree } from '@react-three/fiber';\nimport shallow from 'zustand/shallow';\nvar context = /*#__PURE__*/React.createContext([]);\nfunction Select(_ref) {\n  var box = _ref.box,\n    multiple = _ref.multiple,\n    children = _ref.children,\n    onChange = _ref.onChange,\n    _ref$border = _ref.border,\n    border = _ref$border === void 0 ? '1px solid #55aaff' : _ref$border,\n    _ref$backgroundColor = _ref.backgroundColor,\n    backgroundColor = _ref$backgroundColor === void 0 ? 'rgba(75, 160, 255, 0.1)' : _ref$backgroundColor,\n    _ref$filter = _ref.filter,\n    customFilter = _ref$filter === void 0 ? function (item) {\n      return item;\n    } : _ref$filter,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _useThree = useThree(),\n    setEvents = _useThree.setEvents,\n    camera = _useThree.camera,\n    raycaster = _useThree.raycaster,\n    gl = _useThree.gl,\n    controls = _useThree.controls,\n    size = _useThree.size,\n    get = _useThree.get;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    hovered = _React$useState2[0],\n    hover = _React$useState2[1];\n  var _React$useReducer = React.useReducer(function (state, _ref2) {\n      var object = _ref2.object,\n        shift = _ref2.shift;\n      if (object === undefined) return [];else if (Array.isArray(object)) return object;else if (!shift) return state[0] === object ? [] : [object];else if (state.includes(object)) return state.filter(function (o) {\n        return o !== object;\n      });else return [object].concat(_toConsumableArray(state));\n    }, []),\n    _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n    active = _React$useReducer2[0],\n    dispatch = _React$useReducer2[1];\n  React.useEffect(function () {\n    return void (onChange == null ? void 0 : onChange(active));\n  }, [active]);\n  var onClick = React.useCallback(function (e) {\n    e.stopPropagation();\n    dispatch({\n      object: customFilter([e.object])[0],\n      shift: multiple && e.shiftKey\n    });\n  }, []);\n  var onPointerMissed = React.useCallback(function (e) {\n    return !hovered && dispatch({});\n  }, [hovered]);\n  var ref = React.useRef(null);\n  React.useEffect(function () {\n    if (!box || !multiple) return;\n    var selBox = new SelectionBox(camera, ref.current);\n    var element = document.createElement('div');\n    element.style.pointerEvents = 'none';\n    element.style.border = border;\n    element.style.backgroundColor = backgroundColor;\n    element.style.position = 'fixed';\n    var startPoint = new THREE.Vector2();\n    var pointTopLeft = new THREE.Vector2();\n    var pointBottomRight = new THREE.Vector2();\n    var oldRaycasterEnabled = get().events.enabled;\n    var oldControlsEnabled = controls == null ? void 0 : controls.enabled;\n    var isDown = false;\n    function prepareRay(event, vec) {\n      var offsetX = event.offsetX,\n        offsetY = event.offsetY;\n      var width = size.width,\n        height = size.height;\n      vec.set(offsetX / width * 2 - 1, -(offsetY / height) * 2 + 1);\n    }\n    function onSelectStart(event) {\n      var _gl$domElement$parent;\n      if (controls) controls.enabled = false;\n      setEvents({\n        enabled: false\n      });\n      isDown = true;\n      (_gl$domElement$parent = gl.domElement.parentElement) == null ? void 0 : _gl$domElement$parent.appendChild(element);\n      element.style.left = \"\".concat(event.clientX, \"px\");\n      element.style.top = \"\".concat(event.clientY, \"px\");\n      element.style.width = '0px';\n      element.style.height = '0px';\n      startPoint.x = event.clientX;\n      startPoint.y = event.clientY;\n    }\n    function onSelectMove(event) {\n      pointBottomRight.x = Math.max(startPoint.x, event.clientX);\n      pointBottomRight.y = Math.max(startPoint.y, event.clientY);\n      pointTopLeft.x = Math.min(startPoint.x, event.clientX);\n      pointTopLeft.y = Math.min(startPoint.y, event.clientY);\n      element.style.left = \"\".concat(pointTopLeft.x, \"px\");\n      element.style.top = \"\".concat(pointTopLeft.y, \"px\");\n      element.style.width = \"\".concat(pointBottomRight.x - pointTopLeft.x, \"px\");\n      element.style.height = \"\".concat(pointBottomRight.y - pointTopLeft.y, \"px\");\n    }\n    function onSelectOver() {\n      if (isDown) {\n        var _element$parentElemen;\n        if (controls) controls.enabled = oldControlsEnabled;\n        setEvents({\n          enabled: oldRaycasterEnabled\n        });\n        isDown = false;\n        (_element$parentElemen = element.parentElement) == null ? void 0 : _element$parentElemen.removeChild(element);\n      }\n    }\n    function pointerDown(event) {\n      if (event.shiftKey) {\n        onSelectStart(event);\n        prepareRay(event, selBox.startPoint);\n      }\n    }\n    var previous = [];\n    function pointerMove(event) {\n      if (isDown) {\n        onSelectMove(event);\n        prepareRay(event, selBox.endPoint);\n        var allSelected = selBox.select().sort(function (o) {\n          return o.uuid;\n        }).filter(function (o) {\n          return o.isMesh;\n        });\n        if (!shallow(allSelected, previous)) {\n          previous = allSelected;\n          dispatch({\n            object: customFilter(allSelected)\n          });\n        }\n      }\n    }\n    function pointerUp(event) {\n      if (isDown) onSelectOver();\n    }\n    document.addEventListener('pointerdown', pointerDown, {\n      passive: true\n    });\n    document.addEventListener('pointermove', pointerMove, {\n      passive: true,\n      capture: true\n    });\n    document.addEventListener('pointerup', pointerUp, {\n      passive: true\n    });\n    return function () {\n      document.removeEventListener('pointerdown', pointerDown);\n      document.removeEventListener('pointermove', pointerMove);\n      document.removeEventListener('pointerup', pointerUp);\n    };\n  }, [size, raycaster, camera, controls, gl]);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref,\n    onClick: onClick,\n    onPointerOver: function onPointerOver() {\n      return hover(true);\n    },\n    onPointerOut: function onPointerOut() {\n      return hover(false);\n    },\n    onPointerMissed: onPointerMissed\n  }, props), /*#__PURE__*/React.createElement(context.Provider, {\n    value: active\n  }, children));\n}\nfunction useSelect() {\n  return React.useContext(context);\n}\nexport { Select, useSelect };","map":null,"metadata":{},"sourceType":"module"}