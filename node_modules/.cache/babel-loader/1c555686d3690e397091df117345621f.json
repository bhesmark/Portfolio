{"ast":null,"code":"import _slicedToArray from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _createClass from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nvar PointMaterialImpl = /*#__PURE__*/function (_THREE$PointsMaterial) {\n  _inherits(PointMaterialImpl, _THREE$PointsMaterial);\n  var _super = _createSuper(PointMaterialImpl);\n  function PointMaterialImpl(props) {\n    var _this;\n    _classCallCheck(this, PointMaterialImpl);\n    _this = _super.call(this, props);\n    _this.onBeforeCompile = function (shader, renderer) {\n      var isWebGL2 = renderer.capabilities.isWebGL2;\n      shader.fragmentShader = shader.fragmentShader.replace('#include <output_fragment>', \"\\n        \".concat(!isWebGL2 ? '#extension GL_OES_standard_derivatives : enable\\n#include <output_fragment>' : '#include <output_fragment>', \"\\n      vec2 cxy = 2.0 * gl_PointCoord - 1.0;\\n      float r = dot(cxy, cxy);\\n      float delta = fwidth(r);     \\n      float mask = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);\\n      gl_FragColor = vec4(gl_FragColor.rgb, mask * gl_FragColor.a );\\n      \"));\n    };\n    return _this;\n  }\n  return _createClass(PointMaterialImpl);\n}(THREE.PointsMaterial);\nvar PointMaterial = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _React$useState = React.useState(function () {\n      return new PointMaterialImpl(null);\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 1),\n    material = _React$useState2[0];\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({}, props, {\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }));\n});\nexport { PointMaterial, PointMaterialImpl };","map":null,"metadata":{},"sourceType":"module"}