{"ast":null,"code":"import _objectWithoutProperties from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"resolution\", \"maxPolyCount\", \"enableUvs\", \"enableColors\", \"children\"],\n  _excluded2 = [\"strength\", \"subtract\", \"color\"],\n  _excluded3 = [\"planeType\", \"strength\", \"subtract\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport mergeRefs from 'react-merge-refs';\nimport { MarchingCubes as MarchingCubes$1 } from 'three-stdlib';\nimport { useFrame } from '@react-three/fiber';\nvar globalContext = /*#__PURE__*/React.createContext(null);\nvar MarchingCubes = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$resolution = _ref.resolution,\n    resolution = _ref$resolution === void 0 ? 28 : _ref$resolution,\n    _ref$maxPolyCount = _ref.maxPolyCount,\n    maxPolyCount = _ref$maxPolyCount === void 0 ? 10000 : _ref$maxPolyCount,\n    _ref$enableUvs = _ref.enableUvs,\n    enableUvs = _ref$enableUvs === void 0 ? false : _ref$enableUvs,\n    _ref$enableColors = _ref.enableColors,\n    enableColors = _ref$enableColors === void 0 ? false : _ref$enableColors,\n    children = _ref.children,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var marchingCubesRef = React.useRef(null);\n  var marchingCubes = React.useMemo(function () {\n    return new MarchingCubes$1(resolution, null, enableUvs, enableColors, maxPolyCount);\n  }, [resolution, maxPolyCount, enableUvs, enableColors]);\n  var api = React.useMemo(function () {\n    return {\n      getParent: function getParent() {\n        return marchingCubesRef;\n      }\n    };\n  }, []);\n  useFrame(function () {\n    marchingCubes.reset();\n  }, -1); // To make sure the reset runs before the balls or planes are added\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: marchingCubes,\n    ref: mergeRefs([marchingCubesRef, ref])\n  }, props), /*#__PURE__*/React.createElement(globalContext.Provider, {\n    value: api\n  }, children)));\n});\nvar MarchingCube = /*#__PURE__*/React.forwardRef(function (_ref2, ref) {\n  var _ref2$strength = _ref2.strength,\n    strength = _ref2$strength === void 0 ? 0.5 : _ref2$strength,\n    _ref2$subtract = _ref2.subtract,\n    subtract = _ref2$subtract === void 0 ? 12 : _ref2$subtract,\n    color = _ref2.color,\n    props = _objectWithoutProperties(_ref2, _excluded2);\n  var _React$useContext = React.useContext(globalContext),\n    getParent = _React$useContext.getParent;\n  var parentRef = React.useMemo(function () {\n    return getParent();\n  }, [getParent]);\n  var cubeRef = React.useRef();\n  var vec = new THREE.Vector3();\n  useFrame(function (state) {\n    if (!parentRef.current || !cubeRef.current) return;\n    cubeRef.current.getWorldPosition(vec);\n    parentRef.current.addBall(0.5 + vec.x * 0.5, 0.5 + vec.y * 0.5, 0.5 + vec.z * 0.5, strength, subtract, color);\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: mergeRefs([ref, cubeRef])\n  }, props));\n});\nvar MarchingPlane = /*#__PURE__*/React.forwardRef(function (_ref3, ref) {\n  var _ref3$planeType = _ref3.planeType,\n    _planeType = _ref3$planeType === void 0 ? 'x' : _ref3$planeType,\n    _ref3$strength = _ref3.strength,\n    strength = _ref3$strength === void 0 ? 0.5 : _ref3$strength,\n    _ref3$subtract = _ref3.subtract,\n    subtract = _ref3$subtract === void 0 ? 12 : _ref3$subtract,\n    props = _objectWithoutProperties(_ref3, _excluded3);\n  var _React$useContext2 = React.useContext(globalContext),\n    getParent = _React$useContext2.getParent;\n  var parentRef = React.useMemo(function () {\n    return getParent();\n  }, [getParent]);\n  var wallRef = React.useRef();\n  var planeType = React.useMemo(function () {\n    return _planeType === 'x' ? 'addPlaneX' : _planeType === 'y' ? 'addPlaneY' : 'addPlaneZ';\n  }, [_planeType]);\n  useFrame(function () {\n    if (!parentRef.current || !wallRef.current) return;\n    parentRef.current[planeType](strength, subtract);\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: mergeRefs([ref, wallRef])\n  }, props));\n});\nexport { MarchingCube, MarchingCubes, MarchingPlane };","map":null,"metadata":{},"sourceType":"module"}