{"ast":null,"code":"import _objectWithoutProperties from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"noise\", \"count\", \"speed\", \"opacity\", \"scale\", \"size\", \"color\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport { shaderMaterial } from './shaderMaterial.js';\nimport fragShader from '../helpers/glsl/Sparkles.frag.glsl.js';\nimport vertShader from '../helpers/glsl/Sparkles.vert.glsl.js';\nvar SparklesMaterial = shaderMaterial({\n  time: 0,\n  pixelRatio: 1\n}, vertShader, fragShader);\nvar isFloat32Array = function isFloat32Array(def) {\n  return def && def.constructor === Float32Array;\n};\nvar expandColor = function expandColor(v) {\n  return [v.r, v.g, v.b];\n};\nvar isVector = function isVector(v) {\n  return v instanceof THREE.Vector2 || v instanceof THREE.Vector3 || v instanceof THREE.Vector4;\n};\nvar normalizeVector = function normalizeVector(v) {\n  if (Array.isArray(v)) return v;else if (isVector(v)) return v.toArray();\n  return [v, v, v];\n};\nfunction usePropAsIsOrAsAttribute(count, prop, setDefault) {\n  return React.useMemo(function () {\n    if (prop !== undefined) {\n      if (isFloat32Array(prop)) {\n        return prop;\n      } else {\n        if (prop instanceof THREE.Color) {\n          var a = Array.from({\n            length: count * 3\n          }, function () {\n            return expandColor(prop);\n          }).flat();\n          return Float32Array.from(a);\n        } else if (isVector(prop) || Array.isArray(prop)) {\n          var _a = Array.from({\n            length: count * 3\n          }, function () {\n            return normalizeVector(prop);\n          }).flat();\n          return Float32Array.from(_a);\n        }\n        return Float32Array.from({\n          length: count\n        }, function () {\n          return prop;\n        });\n      }\n    }\n    return Float32Array.from({\n      length: count\n    }, setDefault);\n  }, [prop]);\n}\nvar Sparkles = /*#__PURE__*/React.forwardRef(function (_ref, forwardRef) {\n  var _ref$noise = _ref.noise,\n    noise = _ref$noise === void 0 ? 1 : _ref$noise,\n    _ref$count = _ref.count,\n    count = _ref$count === void 0 ? 100 : _ref$count,\n    _ref$speed = _ref.speed,\n    speed = _ref$speed === void 0 ? 1 : _ref$speed,\n    _ref$opacity = _ref.opacity,\n    opacity = _ref$opacity === void 0 ? 1 : _ref$opacity,\n    _ref$scale = _ref.scale,\n    scale = _ref$scale === void 0 ? 1 : _ref$scale,\n    size = _ref.size,\n    color = _ref.color,\n    props = _objectWithoutProperties(_ref, _excluded);\n  React.useMemo(function () {\n    return extend({\n      SparklesMaterial: SparklesMaterial\n    });\n  }, []);\n  var matRef = React.useRef();\n  var dpr = useThree(function (state) {\n    return state.viewport.dpr;\n  });\n  var positions = React.useMemo(function () {\n    return Float32Array.from(Array.from({\n      length: count\n    }, function () {\n      return normalizeVector(scale).map(THREE.MathUtils.randFloatSpread);\n    }).flat());\n  }, [count, scale]);\n  var sizes = usePropAsIsOrAsAttribute(count, size, Math.random);\n  var opacities = usePropAsIsOrAsAttribute(count, opacity);\n  var speeds = usePropAsIsOrAsAttribute(count, speed);\n  var noises = usePropAsIsOrAsAttribute(count * 3, noise);\n  var colors = usePropAsIsOrAsAttribute(color === undefined ? count * 3 : count, !isFloat32Array(color) ? new THREE.Color(color) : color, function () {\n    return 1;\n  });\n  useFrame(function (state) {\n    return matRef.current.uniforms.time.value = state.clock.elapsedTime;\n  });\n  return /*#__PURE__*/React.createElement(\"points\", _extends({\n    key: \"particle-\".concat(count, \"-\").concat(JSON.stringify(scale))\n  }, props, {\n    ref: forwardRef\n  }), /*#__PURE__*/React.createElement(\"bufferGeometry\", null, /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-position\",\n    args: [positions, 3]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-size\",\n    args: [sizes, 1]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-opacity\",\n    args: [opacities, 1]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-speed\",\n    args: [speeds, 1]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-color\",\n    args: [colors, 3]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-noise\",\n    args: [noises, 3]\n  })), /*#__PURE__*/React.createElement(\"sparklesMaterial\", {\n    ref: matRef,\n    transparent: true,\n    pixelRatio: dpr,\n    depthWrite: false\n  }));\n});\nexport { Sparkles };","map":null,"metadata":{},"sourceType":"module"}