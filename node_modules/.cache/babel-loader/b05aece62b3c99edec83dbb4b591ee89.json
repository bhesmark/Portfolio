{"ast":null,"code":"import _objectSpread from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"children\", \"center\", \"adjustCamera\", \"intensity\", \"shadows\", \"environment\", \"preset\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Environment } from './Environment.js';\nimport { ContactShadows } from './ContactShadows.js';\nimport { Center } from './Center.js';\nimport { AccumulativeShadows, RandomizedLight } from './AccumulativeShadows.js';\nimport { Bounds, useBounds } from './Bounds.js';\nvar presets = {\n  rembrandt: {\n    main: [1, 2, 1],\n    fill: [-2, -0.5, -2]\n  },\n  portrait: {\n    main: [-1, 2, 0.5],\n    fill: [-1, 0.5, -1.5]\n  },\n  upfront: {\n    main: [0, 2, 1],\n    fill: [-1, 0.5, -1.5]\n  },\n  soft: {\n    main: [-2, 4, 4],\n    fill: [-1, 0.5, -1.5]\n  }\n};\nfunction Refit(_ref) {\n  var radius = _ref.radius,\n    adjustCamera = _ref.adjustCamera;\n  var api = useBounds();\n  React.useEffect(function () {\n    if (adjustCamera) api.refresh().clip().fit();\n  }, [radius, adjustCamera]);\n  return null;\n}\nfunction Stage(_ref2) {\n  var children = _ref2.children,\n    center = _ref2.center,\n    _ref2$adjustCamera = _ref2.adjustCamera,\n    adjustCamera = _ref2$adjustCamera === void 0 ? true : _ref2$adjustCamera,\n    _ref2$intensity = _ref2.intensity,\n    intensity = _ref2$intensity === void 0 ? 0.5 : _ref2$intensity,\n    _ref2$shadows = _ref2.shadows,\n    shadows = _ref2$shadows === void 0 ? 'contact' : _ref2$shadows,\n    _ref2$environment = _ref2.environment,\n    environment = _ref2$environment === void 0 ? 'city' : _ref2$environment,\n    _ref2$preset = _ref2.preset,\n    preset = _ref2$preset === void 0 ? 'rembrandt' : _ref2$preset,\n    props = _objectWithoutProperties(_ref2, _excluded);\n  var _bias, _normalBias, _size, _offset, _amount, _radius, _ambient, _intensity;\n  var config = typeof preset === 'string' ? presets[preset] : preset;\n  var _React$useState = React.useState({\n      radius: 0,\n      width: 0,\n      height: 0,\n      depth: 0\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    _React$useState2$ = _React$useState2[0],\n    radius = _React$useState2$.radius,\n    height = _React$useState2$.height,\n    set = _React$useState2[1];\n  var shadowBias = (_bias = shadows == null ? void 0 : shadows.bias) !== null && _bias !== void 0 ? _bias : -0.0001;\n  var normalBias = (_normalBias = shadows == null ? void 0 : shadows.normalBias) !== null && _normalBias !== void 0 ? _normalBias : 0;\n  var shadowSize = (_size = shadows == null ? void 0 : shadows.size) !== null && _size !== void 0 ? _size : 1024;\n  var shadowOffset = (_offset = shadows == null ? void 0 : shadows.offset) !== null && _offset !== void 0 ? _offset : 0;\n  var contactShadow = shadows === 'contact' || (shadows == null ? void 0 : shadows.type) === 'contact';\n  var accumulativeShadow = shadows === 'accumulative' || (shadows == null ? void 0 : shadows.type) === 'accumulative';\n  var shadowSpread = _objectSpread({}, typeof shadows === 'object' ? shadows : {});\n  var environmentProps = !environment ? null : typeof environment === 'string' ? {\n    preset: environment\n  } : environment;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ambientLight\", {\n    intensity: intensity / 3\n  }), /*#__PURE__*/React.createElement(\"spotLight\", {\n    penumbra: 1,\n    position: [config.main[0] * radius, config.main[1] * radius, config.main[2] * radius],\n    intensity: intensity * 2,\n    castShadow: !!shadows,\n    \"shadow-bias\": shadowBias,\n    \"shadow-normalBias\": normalBias,\n    \"shadow-mapSize\": shadowSize\n  }), /*#__PURE__*/React.createElement(\"pointLight\", {\n    position: [config.fill[0] * radius, config.fill[1] * radius, config.fill[2] * radius],\n    intensity: intensity\n  }), /*#__PURE__*/React.createElement(Bounds, _extends({\n    fit: !!adjustCamera,\n    clip: !!adjustCamera,\n    margin: Number(adjustCamera),\n    observe: true\n  }, props), /*#__PURE__*/React.createElement(Refit, {\n    radius: radius,\n    adjustCamera: adjustCamera\n  }), /*#__PURE__*/React.createElement(Center, _extends({}, center, {\n    position: [0, shadowOffset / 2, 0],\n    onCentered: function onCentered(props) {\n      var width = props.width,\n        height = props.height,\n        depth = props.depth,\n        boundingSphere = props.boundingSphere;\n      set({\n        radius: boundingSphere.radius,\n        width: width,\n        height: height,\n        depth: depth\n      });\n      if (center != null && center.onCentered) center.onCentered(props);\n    }\n  }), children)), /*#__PURE__*/React.createElement(\"group\", {\n    position: [0, -height / 2 - shadowOffset / 2, 0]\n  }, contactShadow && /*#__PURE__*/React.createElement(ContactShadows, _extends({\n    scale: radius * 4,\n    far: radius,\n    blur: 2\n  }, shadowSpread)), accumulativeShadow && /*#__PURE__*/React.createElement(AccumulativeShadows, _extends({\n    temporal: true,\n    frames: 100,\n    alphaTest: 0.9,\n    toneMapped: true,\n    scale: radius * 4\n  }, shadowSpread), /*#__PURE__*/React.createElement(RandomizedLight, {\n    amount: (_amount = shadowSpread.amount) !== null && _amount !== void 0 ? _amount : 8,\n    radius: (_radius = shadowSpread.radius) !== null && _radius !== void 0 ? _radius : radius,\n    ambient: (_ambient = shadowSpread.ambient) !== null && _ambient !== void 0 ? _ambient : 0.5,\n    intensity: (_intensity = shadowSpread.intensity) !== null && _intensity !== void 0 ? _intensity : 1,\n    position: [config.main[0] * radius, config.main[1] * radius, config.main[2] * radius],\n    size: radius * 4,\n    bias: -shadowBias,\n    mapSize: shadowSize\n  }))), environment && /*#__PURE__*/React.createElement(Environment, environmentProps));\n}\nexport { Stage };","map":null,"metadata":{},"sourceType":"module"}