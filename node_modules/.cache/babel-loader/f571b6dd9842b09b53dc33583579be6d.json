{"ast":null,"code":"import _classCallCheck from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport Node from '../core/Node.js';\nvar ConvertNode = /*#__PURE__*/function (_Node) {\n  _inherits(ConvertNode, _Node);\n  var _super = _createSuper(ConvertNode);\n  function ConvertNode(node, convertTo) {\n    var _this;\n    _classCallCheck(this, ConvertNode);\n    _this = _super.call(this);\n    _this.node = node;\n    _this.convertTo = convertTo;\n    return _this;\n  }\n  _createClass(ConvertNode, [{\n    key: \"getNodeType\",\n    value: function getNodeType() {\n      return this.convertTo;\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder) {\n      var convertTo = this.convertTo;\n      var node = this.node;\n      if (builder.isReference(convertTo) === false) {\n        var convertToSnippet = builder.getType(convertTo);\n        var nodeSnippet = node.build(builder, convertTo);\n        return \"\".concat(builder.getVectorType(convertToSnippet), \"( \").concat(nodeSnippet, \" )\");\n      } else {\n        return node.build(builder, convertTo);\n      }\n    }\n  }]);\n  return ConvertNode;\n}(Node);\nexport default ConvertNode;","map":null,"metadata":{},"sourceType":"module"}