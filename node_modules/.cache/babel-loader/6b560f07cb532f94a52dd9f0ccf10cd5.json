{"ast":null,"code":"import _toConsumableArray from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport { addEffect, addAfterEffect } from '@react-three/fiber';\nimport StatsImpl from 'stats.js';\nimport { useEffectfulState } from '../helpers/useEffectfulState.js';\nfunction Stats(_ref) {\n  var _ref$showPanel = _ref.showPanel,\n    showPanel = _ref$showPanel === void 0 ? 0 : _ref$showPanel,\n    className = _ref.className,\n    parent = _ref.parent;\n  var stats = useEffectfulState(function () {\n    return new StatsImpl();\n  }, []);\n  React.useEffect(function () {\n    if (stats) {\n      var _stats$dom$classList;\n      var node = parent && parent.current || document.body;\n      stats.showPanel(showPanel);\n      node == null ? void 0 : node.appendChild(stats.dom);\n      if (className) (_stats$dom$classList = stats.dom.classList).add.apply(_stats$dom$classList, _toConsumableArray(className.split(' ').filter(function (cls) {\n        return cls;\n      })));\n      var begin = addEffect(function () {\n        return stats.begin();\n      });\n      var end = addAfterEffect(function () {\n        return stats.end();\n      });\n      return function () {\n        node == null ? void 0 : node.removeChild(stats.dom);\n        begin();\n        end();\n      };\n    }\n  }, [parent, stats, className, showPanel]);\n  return null;\n}\nexport { Stats };","map":null,"metadata":{},"sourceType":"module"}