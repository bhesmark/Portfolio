{"ast":null,"code":"import _objectWithoutProperties from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"children\", \"speed\", \"rotationIntensity\", \"floatIntensity\", \"floatingRange\"];\nimport * as React from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport * as THREE from 'three';\nvar Float = /*#__PURE__*/React.forwardRef(function (_ref, forwardRef) {\n  var children = _ref.children,\n    _ref$speed = _ref.speed,\n    speed = _ref$speed === void 0 ? 1 : _ref$speed,\n    _ref$rotationIntensit = _ref.rotationIntensity,\n    rotationIntensity = _ref$rotationIntensit === void 0 ? 1 : _ref$rotationIntensit,\n    _ref$floatIntensity = _ref.floatIntensity,\n    floatIntensity = _ref$floatIntensity === void 0 ? 1 : _ref$floatIntensity,\n    _ref$floatingRange = _ref.floatingRange,\n    floatingRange = _ref$floatingRange === void 0 ? [-0.1, 0.1] : _ref$floatingRange,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var ref = React.useRef(null);\n  var offset = React.useRef(Math.random() * 10000);\n  useFrame(function (state) {\n    var _floatingRange$, _floatingRange$2;\n    var t = offset.current + state.clock.getElapsedTime();\n    ref.current.rotation.x = Math.cos(t / 4 * speed) / 8 * rotationIntensity;\n    ref.current.rotation.y = Math.sin(t / 4 * speed) / 8 * rotationIntensity;\n    ref.current.rotation.z = Math.sin(t / 4 * speed) / 20 * rotationIntensity;\n    var yPosition = Math.sin(t / 4 * speed) / 10;\n    yPosition = THREE.MathUtils.mapLinear(yPosition, -0.1, 0.1, (_floatingRange$ = floatingRange == null ? void 0 : floatingRange[0]) !== null && _floatingRange$ !== void 0 ? _floatingRange$ : -0.1, (_floatingRange$2 = floatingRange == null ? void 0 : floatingRange[1]) !== null && _floatingRange$2 !== void 0 ? _floatingRange$2 : 0.1);\n    ref.current.position.y = yPosition * floatIntensity;\n  });\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"group\", {\n    ref: mergeRefs([ref, forwardRef])\n  }, children));\n});\nexport { Float };","map":null,"metadata":{},"sourceType":"module"}