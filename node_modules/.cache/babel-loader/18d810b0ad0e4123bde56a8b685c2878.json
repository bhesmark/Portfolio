{"ast":null,"code":"import _slicedToArray from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as React from 'react';\nimport create from 'zustand';\nimport { subscribeWithSelector } from 'zustand/middleware';\nvar context = /*@__PURE__*/React.createContext(null);\nfunction KeyboardControls(_ref) {\n  var map = _ref.map,\n    children = _ref.children,\n    onChange = _ref.onChange,\n    domElement = _ref.domElement;\n  var key = map.map(function (item) {\n    return item.name + item.keys;\n  }).join('-');\n  var useControls = React.useMemo(function () {\n    return create(subscribeWithSelector(function () {\n      return map.reduce(function (prev, cur) {\n        return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, cur.name, false));\n      }, {});\n    }));\n  }, [key]);\n  var api = React.useMemo(function () {\n    return [useControls.subscribe, useControls.getState, useControls];\n  }, [key]);\n  var set = useControls.setState;\n  React.useEffect(function () {\n    var config = map.map(function (_ref2) {\n      var name = _ref2.name,\n        keys = _ref2.keys,\n        up = _ref2.up;\n      return {\n        keys: keys,\n        up: up,\n        fn: function fn(value) {\n          // Set zustand state\n          set(_defineProperty({}, name, value)); // Inform callback\n\n          if (onChange) onChange(name, value, api[2]());\n        }\n      };\n    });\n    var keyMap = config.reduce(function (out, _ref3) {\n      var keys = _ref3.keys,\n        fn = _ref3.fn,\n        _ref3$up = _ref3.up,\n        up = _ref3$up === void 0 ? true : _ref3$up;\n      keys.forEach(function (key) {\n        return out[key] = {\n          fn: fn,\n          pressed: false,\n          up: up\n        };\n      });\n      return out;\n    }, {});\n    var downHandler = function downHandler(_ref4) {\n      var key = _ref4.key,\n        code = _ref4.code;\n      var obj = keyMap[key] || keyMap[code];\n      if (!obj) return;\n      var fn = obj.fn,\n        pressed = obj.pressed,\n        up = obj.up;\n      obj.pressed = true;\n      if (up || !pressed) fn(true);\n    };\n    var upHandler = function upHandler(_ref5) {\n      var key = _ref5.key,\n        code = _ref5.code;\n      var obj = keyMap[key] || keyMap[code];\n      if (!obj) return;\n      var fn = obj.fn,\n        up = obj.up;\n      obj.pressed = false;\n      if (up) fn(false);\n    };\n    var source = domElement || window;\n    source.addEventListener('keydown', downHandler, {\n      passive: true\n    });\n    source.addEventListener('keyup', upHandler, {\n      passive: true\n    });\n    return function () {\n      source.removeEventListener('keydown', downHandler);\n      source.removeEventListener('keyup', upHandler);\n    };\n  }, [domElement, key]);\n  return /*#__PURE__*/React.createElement(context.Provider, {\n    value: api,\n    children: children\n  });\n}\nfunction useKeyboardControls(sel) {\n  var _React$useContext = React.useContext(context),\n    _React$useContext2 = _slicedToArray(_React$useContext, 3),\n    sub = _React$useContext2[0],\n    get = _React$useContext2[1],\n    store = _React$useContext2[2];\n  if (sel) return store(sel);else return [sub, get];\n}\nexport { KeyboardControls, useKeyboardControls };","map":null,"metadata":{},"sourceType":"module"}