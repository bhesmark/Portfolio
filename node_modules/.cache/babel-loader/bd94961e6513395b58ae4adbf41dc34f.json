{"ast":null,"code":"import _classCallCheck from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport TempNode from './TempNode.js';\nvar ExpressionNode = /*#__PURE__*/function (_TempNode) {\n  _inherits(ExpressionNode, _TempNode);\n  var _super = _createSuper(ExpressionNode);\n  function ExpressionNode() {\n    var _this;\n    var snipped = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var nodeType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'void';\n    _classCallCheck(this, ExpressionNode);\n    _this = _super.call(this, nodeType);\n    _this.snipped = snipped;\n    return _this;\n  }\n  _createClass(ExpressionNode, [{\n    key: \"generate\",\n    value: function generate(builder) {\n      var type = this.getNodeType(builder);\n      var snipped = this.snipped;\n      if (type === 'void') {\n        builder.addFlowCode(snipped);\n      } else {\n        return \"( \".concat(snipped, \" )\");\n      }\n    }\n  }]);\n  return ExpressionNode;\n}(TempNode);\nexport default ExpressionNode;","map":null,"metadata":{},"sourceType":"module"}