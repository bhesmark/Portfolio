{"ast":null,"code":"import _classCallCheck from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { useMemo, useCallback } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { Texture } from 'three';\n\n/**\n *  Adapted from https://github.com/brunoimbrizi/interactive-particles/blob/master/src/scripts/webgl/particles/TrailTexture.js\n *  Changes:\n *    * accepts config as constructor params\n *    * frame-rate independent aging\n *    * added option to interpolate between slow mouse events\n *    * added option for smoothing between values to avoid large jumps in force\n */\n\n// smooth new sample (measurement) based on previous sample (current)\nfunction smoothAverage(current, measurement) {\n  var smoothing = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.9;\n  return measurement * smoothing + current * (1.0 - smoothing);\n} // default ease\n\nvar easeCircleOut = function easeCircleOut(x) {\n  return Math.sqrt(1 - Math.pow(x - 1, 2));\n};\nvar TrailTexture = /*#__PURE__*/function () {\n  function TrailTexture() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 256 : _ref$size,\n      _ref$maxAge = _ref.maxAge,\n      maxAge = _ref$maxAge === void 0 ? 750 : _ref$maxAge,\n      _ref$radius = _ref.radius,\n      radius = _ref$radius === void 0 ? 0.3 : _ref$radius,\n      _ref$intensity = _ref.intensity,\n      intensity = _ref$intensity === void 0 ? 0.2 : _ref$intensity,\n      _ref$interpolate = _ref.interpolate,\n      interpolate = _ref$interpolate === void 0 ? 0 : _ref$interpolate,\n      _ref$smoothing = _ref.smoothing,\n      smoothing = _ref$smoothing === void 0 ? 0 : _ref$smoothing,\n      _ref$minForce = _ref.minForce,\n      minForce = _ref$minForce === void 0 ? 0.3 : _ref$minForce,\n      _ref$blend = _ref.blend,\n      blend = _ref$blend === void 0 ? 'screen' : _ref$blend,\n      _ref$ease = _ref.ease,\n      ease = _ref$ease === void 0 ? easeCircleOut : _ref$ease;\n    _classCallCheck(this, TrailTexture);\n    this.size = size;\n    this.maxAge = maxAge;\n    this.radius = radius;\n    this.intensity = intensity;\n    this.ease = ease;\n    this.interpolate = interpolate;\n    this.smoothing = smoothing;\n    this.minForce = minForce;\n    this.blend = blend;\n    this.trail = [];\n    this.force = 0;\n    this.initTexture();\n  }\n  _createClass(TrailTexture, [{\n    key: \"initTexture\",\n    value: function initTexture() {\n      this.canvas = document.createElement('canvas');\n      this.canvas.width = this.canvas.height = this.size;\n      this.ctx = this.canvas.getContext('2d');\n      this.ctx.fillStyle = 'black';\n      this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n      this.texture = new Texture(this.canvas);\n      this.canvas.id = 'touchTexture';\n      this.canvas.style.width = this.canvas.style.height = \"\".concat(this.canvas.width, \"px\");\n    }\n  }, {\n    key: \"update\",\n    value: function update(delta) {\n      var _this = this;\n      this.clear(); // age points\n\n      this.trail.forEach(function (point, i) {\n        point.age += delta * 1000; // remove old\n\n        if (point.age > _this.maxAge) {\n          _this.trail.splice(i, 1);\n        }\n      }); // reset force when empty (when smoothing)\n\n      if (!this.trail.length) this.force = 0;\n      this.trail.forEach(function (point) {\n        _this.drawTouch(point);\n      });\n      this.texture.needsUpdate = true;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.ctx.globalCompositeOperation = 'source-over';\n      this.ctx.fillStyle = 'black';\n      this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n  }, {\n    key: \"addTouch\",\n    value: function addTouch(point) {\n      var last = this.trail[this.trail.length - 1];\n      if (last) {\n        var dx = last.x - point.x;\n        var dy = last.y - point.y;\n        var dd = dx * dx + dy * dy;\n        var force = Math.max(this.minForce, Math.min(dd * 10000, 1));\n        this.force = smoothAverage(force, this.force, this.smoothing);\n        if (!!this.interpolate) {\n          var lines = Math.ceil(dd / Math.pow(this.radius * 0.5 / this.interpolate, 2));\n          if (lines > 1) {\n            for (var i = 1; i < lines; i++) {\n              this.trail.push({\n                x: last.x - dx / lines * i,\n                y: last.y - dy / lines * i,\n                age: 0,\n                force: force\n              });\n            }\n          }\n        }\n      }\n      this.trail.push({\n        x: point.x,\n        y: point.y,\n        age: 0,\n        force: this.force\n      });\n    }\n  }, {\n    key: \"drawTouch\",\n    value: function drawTouch(point) {\n      var pos = {\n        x: point.x * this.size,\n        y: (1 - point.y) * this.size\n      };\n      var intensity = 1;\n      if (point.age < this.maxAge * 0.3) {\n        intensity = this.ease(point.age / (this.maxAge * 0.3));\n      } else {\n        intensity = this.ease(1 - (point.age - this.maxAge * 0.3) / (this.maxAge * 0.7));\n      }\n      intensity *= point.force; // apply blending\n\n      this.ctx.globalCompositeOperation = this.blend;\n      var radius = this.size * this.radius * intensity;\n      var grd = this.ctx.createRadialGradient(pos.x, pos.y, Math.max(0, radius * 0.25), pos.x, pos.y, Math.max(0, radius));\n      grd.addColorStop(0, \"rgba(255, 255, 255, \".concat(this.intensity, \")\"));\n      grd.addColorStop(1, \"rgba(0, 0, 0, 0.0)\");\n      this.ctx.beginPath();\n      this.ctx.fillStyle = grd;\n      this.ctx.arc(pos.x, pos.y, Math.max(0, radius), 0, Math.PI * 2);\n      this.ctx.fill();\n    }\n  }]);\n  return TrailTexture;\n}();\nfunction useTrailTexture() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var size = config.size,\n    maxAge = config.maxAge,\n    radius = config.radius,\n    intensity = config.intensity,\n    interpolate = config.interpolate,\n    smoothing = config.smoothing,\n    minForce = config.minForce,\n    blend = config.blend,\n    ease = config.ease;\n  var trail = useMemo(function () {\n    return new TrailTexture(config);\n  }, [size, maxAge, radius, intensity, interpolate, smoothing, minForce, blend, ease]);\n  useFrame(function (_, delta) {\n    return void trail.update(delta);\n  });\n  var onMove = useCallback(function (e) {\n    return trail.addTouch(e.uv);\n  }, [trail]);\n  return [trail.texture, onMove];\n}\nexport { useTrailTexture };","map":null,"metadata":{},"sourceType":"module"}