{"ast":null,"code":"import _classCallCheck from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport Node from '../core/Node.js';\nimport UniformNode from '../core/UniformNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\nvar ReferenceNode = /*#__PURE__*/function (_Node) {\n  _inherits(ReferenceNode, _Node);\n  var _super = _createSuper(ReferenceNode);\n  function ReferenceNode(property, uniformType) {\n    var _this;\n    var object = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    _classCallCheck(this, ReferenceNode);\n    _this = _super.call(this);\n    _this.property = property;\n    _this.uniformType = uniformType;\n    _this.object = object;\n    _this.node = null;\n    _this.updateType = NodeUpdateType.Object;\n    _this.setNodeType(uniformType);\n    return _this;\n  }\n  _createClass(ReferenceNode, [{\n    key: \"setNodeType\",\n    value: function setNodeType(uniformType) {\n      this.node = new UniformNode(null, uniformType);\n      this.nodeType = uniformType;\n      if (uniformType === 'color') {\n        this.nodeType = 'vec3';\n      } else if (uniformType === 'texture') {\n        this.nodeType = 'vec4';\n      }\n    }\n  }, {\n    key: \"getNodeType\",\n    value: function getNodeType() {\n      return this.uniformType;\n    }\n  }, {\n    key: \"update\",\n    value: function update(frame) {\n      var object = this.object !== null ? this.object : frame.object;\n      var value = object[this.property];\n      this.node.value = value;\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder) {\n      return this.node.build(builder, this.getNodeType(builder));\n    }\n  }]);\n  return ReferenceNode;\n}(Node);\nexport default ReferenceNode;","map":null,"metadata":{},"sourceType":"module"}