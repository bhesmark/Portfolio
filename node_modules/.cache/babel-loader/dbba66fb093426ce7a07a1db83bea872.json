{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/baic/Documents/programm/gsrlic/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport Node from '../core/Node.js';\nimport LightNode from './LightNode.js';\nvar sortLights = function sortLights(lights) {\n  return lights.sort(function (a, b) {\n    return a.id - b.id;\n  });\n};\nvar LightsNode = /*#__PURE__*/function (_Node) {\n  _inherits(LightsNode, _Node);\n  var _super = _createSuper(LightsNode);\n  function LightsNode() {\n    var _this;\n    var lightNodes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    _classCallCheck(this, LightsNode);\n    _this = _super.call(this, 'vec3');\n    _this.lightNodes = lightNodes;\n    _this._hash = null;\n    return _this;\n  }\n  _createClass(LightsNode, [{\n    key: \"hasLight\",\n    get: function get() {\n      return this.lightNodes.length > 0;\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(builder) {\n      var lightNodes = this.lightNodes;\n      var _iterator = _createForOfIteratorHelper(lightNodes),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var lightNode = _step.value;\n          lightNode.build(builder);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return 'vec3( 0.0 )';\n    }\n  }, {\n    key: \"getHash\",\n    value: function getHash() {\n      if (this._hash === null) {\n        var hash = '';\n        var lightNodes = this.lightNodes;\n        var _iterator2 = _createForOfIteratorHelper(lightNodes),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var lightNode = _step2.value;\n            hash += lightNode.light.uuid + ' ';\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n        this._hash = hash;\n      }\n      return this._hash;\n    }\n  }, {\n    key: \"getLightNodeByHash\",\n    value: function getLightNodeByHash(hash) {\n      var lightNodes = this.lightNodes;\n      var _iterator3 = _createForOfIteratorHelper(lightNodes),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var lightNode = _step3.value;\n          if (lightNode.light.uuid === hash) {\n            return lightNode;\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      return null;\n    }\n  }, {\n    key: \"fromLights\",\n    value: function fromLights(lights) {\n      var lightNodes = [];\n      lights = sortLights(lights);\n      var _iterator4 = _createForOfIteratorHelper(lights),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var light = _step4.value;\n          var lightNode = this.getLightNodeByHash(light.uuid);\n          if (lightNode === null) {\n            lightNode = new LightNode(light);\n          }\n          lightNodes.push(lightNode);\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      this.lightNodes = lightNodes;\n      this._hash = null;\n      return this;\n    }\n  }]);\n  return LightsNode;\n}(Node);\nexport default LightsNode;","map":null,"metadata":{},"sourceType":"module"}