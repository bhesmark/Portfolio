{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{200:function(r,e,n){\"use strict\";n.r(e);var t=function(){var r=\"undefined\"!==typeof document&&document.currentScript?document.currentScript.src:void 0;return function(e){var n,t;(e=\"undefined\"!==typeof(e=e||{})?e:{}).ready=new Promise((function(r,e){n=r,t=e}));var o,i={};for(o in e)e.hasOwnProperty(o)&&(i[o]=e[o]);var a,u,s,c=[],f=\"./this.program\",l=\"\";\"undefined\"!==typeof document&&document.currentScript&&(l=document.currentScript.src),r&&(l=r),l=0!==l.indexOf(\"blob:\")?l.substr(0,l.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):\"\",a=function(r){var e=new XMLHttpRequest;return e.open(\"GET\",r,!1),e.send(null),e.responseText},u=function(r,e,n){var t=new XMLHttpRequest;t.open(\"GET\",r,!0),t.responseType=\"arraybuffer\",t.onload=function(){200==t.status||0==t.status&&t.response?e(t.response):n()},t.onerror=n,t.send(null)};var d=e.print||console.log.bind(console),m=e.printErr||console.warn.bind(console);for(o in i)i.hasOwnProperty(o)&&(e[o]=i[o]);i=null,e.arguments&&(c=e.arguments),e.thisProgram&&(f=e.thisProgram),e.quit&&e.quit;var p;e.wasmBinary&&(p=e.wasmBinary);var h;e.noExitRuntime;\"object\"!==typeof WebAssembly&&$(\"no native wasm support detected\");var v=!1;function w(r,e){r||$(\"Assertion failed: \"+e)}var y=\"undefined\"!==typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;function g(r,e,n){for(var t=e+n,o=e;r[o]&&!(o>=t);)++o;if(o-e>16&&r.subarray&&y)return y.decode(r.subarray(e,o));for(var i=\"\";e<o;){var a=r[e++];if(128&a){var u=63&r[e++];if(192!=(224&a)){var s=63&r[e++];if((a=224==(240&a)?(15&a)<<12|u<<6|s:(7&a)<<18|u<<12|s<<6|63&r[e++])<65536)i+=String.fromCharCode(a);else{var c=a-65536;i+=String.fromCharCode(55296|c>>10,56320|1023&c)}}else i+=String.fromCharCode((31&a)<<6|u)}else i+=String.fromCharCode(a)}return i}function E(r,e){return r?g(F,r,e):\"\"}function _(r,e,n,t){if(!(t>0))return 0;for(var o=n,i=n+t-1,a=0;a<r.length;++a){var u=r.charCodeAt(a);if(u>=55296&&u<=57343)u=65536+((1023&u)<<10)|1023&r.charCodeAt(++a);if(u<=127){if(n>=i)break;e[n++]=u}else if(u<=2047){if(n+1>=i)break;e[n++]=192|u>>6,e[n++]=128|63&u}else if(u<=65535){if(n+2>=i)break;e[n++]=224|u>>12,e[n++]=128|u>>6&63,e[n++]=128|63&u}else{if(n+3>=i)break;e[n++]=240|u>>18,e[n++]=128|u>>12&63,e[n++]=128|u>>6&63,e[n++]=128|63&u}}return e[n]=0,n-o}function k(r,e,n){return _(r,F,e,n)}function b(r){for(var e=0,n=0;n<r.length;++n){var t=r.charCodeAt(n);t>=55296&&t<=57343&&(t=65536+((1023&t)<<10)|1023&r.charCodeAt(++n)),t<=127?++e:e+=t<=2047?2:t<=65535?3:4}return e}var D,A,F,S,T,P,M,C,R,x=\"undefined\"!==typeof TextDecoder?new TextDecoder(\"utf-16le\"):void 0;function O(r,e){for(var n=r,t=n>>1,o=t+e/2;!(t>=o)&&T[t];)++t;if((n=t<<1)-r>32&&x)return x.decode(F.subarray(r,n));for(var i=\"\",a=0;!(a>=e/2);++a){var u=S[r+2*a>>1];if(0==u)break;i+=String.fromCharCode(u)}return i}function j(r,e,n){if(void 0===n&&(n=2147483647),n<2)return 0;for(var t=e,o=(n-=2)<2*r.length?n/2:r.length,i=0;i<o;++i){var a=r.charCodeAt(i);S[e>>1]=a,e+=2}return S[e>>1]=0,e-t}function B(r){return 2*r.length}function N(r,e){for(var n=0,t=\"\";!(n>=e/4);){var o=P[r+4*n>>2];if(0==o)break;if(++n,o>=65536){var i=o-65536;t+=String.fromCharCode(55296|i>>10,56320|1023&i)}else t+=String.fromCharCode(o)}return t}function z(r,e,n){if(void 0===n&&(n=2147483647),n<4)return 0;for(var t=e,o=t+n-4,i=0;i<r.length;++i){var a=r.charCodeAt(i);if(a>=55296&&a<=57343)a=65536+((1023&a)<<10)|1023&r.charCodeAt(++i);if(P[e>>2]=a,(e+=4)+4>o)break}return P[e>>2]=0,e-t}function W(r){for(var e=0,n=0;n<r.length;++n){var t=r.charCodeAt(n);t>=55296&&t<=57343&&++n,e+=4}return e}function I(r,e){A.set(r,e)}function U(r){D=r,e.HEAP8=A=new Int8Array(r),e.HEAP16=S=new Int16Array(r),e.HEAP32=P=new Int32Array(r),e.HEAPU8=F=new Uint8Array(r),e.HEAPU16=T=new Uint16Array(r),e.HEAPU32=M=new Uint32Array(r),e.HEAPF32=C=new Float32Array(r),e.HEAPF64=R=new Float64Array(r)}e.INITIAL_MEMORY;var L,H=[],Y=[],q=[];var V=0,X=null,G=null;function J(r){V++,e.monitorRunDependencies&&e.monitorRunDependencies(V)}function K(r){if(V--,e.monitorRunDependencies&&e.monitorRunDependencies(V),0==V&&(null!==X&&(clearInterval(X),X=null),G)){var n=G;G=null,n()}}function $(r){e.onAbort&&e.onAbort(r),m(r=\"Aborted(\"+r+\")\"),v=!0,1,r+=\". Build with -s ASSERTIONS=1 for more info.\";var n=new WebAssembly.RuntimeError(r);throw t(n),n}e.preloadedImages={},e.preloadedAudios={};var Z,Q,rr,er;function nr(r){return r.startsWith(\"data:application/octet-stream;base64,\")}function tr(r){try{if(r==Z&&p)return new Uint8Array(p);if(s)return s(r);throw\"both async and sync fetching of the wasm failed\"}catch(m){$(m)}}function or(r){for(;r.length>0;){var n=r.shift();if(\"function\"!=typeof n){var t=n.func;\"number\"===typeof t?void 0===n.arg?ar(t)():ar(t)(n.arg):t(void 0===n.arg?null:n.arg)}else n(e)}}nr(Z=\"boolean.wasm\")||(Q=Z,Z=e.locateFile?e.locateFile(Q,l):l+Q);var ir=[];function ar(r){var e=ir[r];return e||(r>=ir.length&&(ir.length=r+1),ir[r]=e=L.get(r)),e}function ur(r){this.excPtr=r,this.ptr=r-16,this.set_type=function(r){P[this.ptr+4>>2]=r},this.get_type=function(){return P[this.ptr+4>>2]},this.set_destructor=function(r){P[this.ptr+8>>2]=r},this.get_destructor=function(){return P[this.ptr+8>>2]},this.set_refcount=function(r){P[this.ptr>>2]=r},this.set_caught=function(r){r=r?1:0,A[this.ptr+12>>0]=r},this.get_caught=function(){return 0!=A[this.ptr+12>>0]},this.set_rethrown=function(r){r=r?1:0,A[this.ptr+13>>0]=r},this.get_rethrown=function(){return 0!=A[this.ptr+13>>0]},this.init=function(r,e){this.set_type(r),this.set_destructor(e),this.set_refcount(0),this.set_caught(!1),this.set_rethrown(!1)},this.add_ref=function(){var r=P[this.ptr>>2];P[this.ptr>>2]=r+1},this.release_ref=function(){var r=P[this.ptr>>2];return P[this.ptr>>2]=r-1,1===r}}var sr={};function cr(r){for(;r.length;){var e=r.pop();r.pop()(e)}}function fr(r){return this.fromWireType(M[r>>2])}var lr={},dr={},mr={};function pr(r){if(void 0===r)return\"_unknown\";var e=(r=r.replace(/[^a-zA-Z0-9_]/g,\"$\")).charCodeAt(0);return e>=48&&e<=57?\"_\"+r:r}function hr(r,e){return r=pr(r),new Function(\"body\",\"return function \"+r+'() {\\n    \"use strict\";    return body.apply(this, arguments);\\n};\\n')(e)}function vr(r,e){var n=hr(e,(function(r){this.name=e,this.message=r;var n=new Error(r).stack;void 0!==n&&(this.stack=this.toString()+\"\\n\"+n.replace(/^Error(:[^\\n]*)?\\n/,\"\"))}));return n.prototype=Object.create(r.prototype),n.prototype.constructor=n,n.prototype.toString=function(){return void 0===this.message?this.name:this.name+\": \"+this.message},n}var wr=void 0;function yr(r){throw new wr(r)}function gr(r,e,n){function t(e){var t=n(e);t.length!==r.length&&yr(\"Mismatched type converter count\");for(var o=0;o<r.length;++o)Ar(r[o],t[o])}r.forEach((function(r){mr[r]=e}));var o=new Array(e.length),i=[],a=0;e.forEach((function(r,e){dr.hasOwnProperty(r)?o[e]=dr[r]:(i.push(r),lr.hasOwnProperty(r)||(lr[r]=[]),lr[r].push((function(){o[e]=dr[r],++a===i.length&&t(o)})))})),0===i.length&&t(o)}function Er(r){switch(r){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+r)}}var _r=void 0;function kr(r){for(var e=\"\",n=r;F[n];)e+=_r[F[n++]];return e}var br=void 0;function Dr(r){throw new br(r)}function Ar(r,e,n){if(n=n||{},!(\"argPackAdvance\"in e))throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");var t=e.name;if(r||Dr('type \"'+t+'\" must have a positive integer typeid pointer'),dr.hasOwnProperty(r)){if(n.ignoreDuplicateRegistrations)return;Dr(\"Cannot register type '\"+t+\"' twice\")}if(dr[r]=e,delete mr[r],lr.hasOwnProperty(r)){var o=lr[r];delete lr[r],o.forEach((function(r){r()}))}}var Fr=[],Sr=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function Tr(){for(var r=0,e=5;e<Sr.length;++e)void 0!==Sr[e]&&++r;return r}function Pr(){for(var r=5;r<Sr.length;++r)if(void 0!==Sr[r])return Sr[r];return null}var Mr=function(r){return r||Dr(\"Cannot use deleted val. handle = \"+r),Sr[r].value},Cr=function(r){switch(r){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:var e=Fr.length?Fr.pop():Sr.length;return Sr[e]={refcount:1,value:r},e}};function Rr(r,n,t){e.hasOwnProperty(r)?((void 0===t||void 0!==e[r].overloadTable&&void 0!==e[r].overloadTable[t])&&Dr(\"Cannot register public name '\"+r+\"' twice\"),function(r,e,n){if(void 0===r[e].overloadTable){var t=r[e];r[e]=function(){return r[e].overloadTable.hasOwnProperty(arguments.length)||Dr(\"Function '\"+n+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+r[e].overloadTable+\")!\"),r[e].overloadTable[arguments.length].apply(this,arguments)},r[e].overloadTable=[],r[e].overloadTable[t.argCount]=t}}(e,r,r),e.hasOwnProperty(t)&&Dr(\"Cannot register multiple overloads of a function with the same number of arguments (\"+t+\")!\"),e[r].overloadTable[t]=n):(e[r]=n,void 0!==t&&(e[r].numArguments=t))}function xr(r,e,n){switch(e){case 0:return function(r){var e=n?A:F;return this.fromWireType(e[r])};case 1:return function(r){var e=n?S:T;return this.fromWireType(e[r>>1])};case 2:return function(r){var e=n?P:M;return this.fromWireType(e[r>>2])};default:throw new TypeError(\"Unknown integer type: \"+r)}}function Or(r){var e=se(r),n=kr(e);return me(e),n}function jr(r){if(null===r)return\"null\";var e=typeof r;return\"object\"===e||\"array\"===e||\"function\"===e?r.toString():\"\"+r}function Br(r,e){switch(e){case 2:return function(r){return this.fromWireType(C[r>>2])};case 3:return function(r){return this.fromWireType(R[r>>3])};default:throw new TypeError(\"Unknown float type: \"+r)}}function Nr(r,e,n,t,o){var i=e.length;i<2&&Dr(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");for(var a=null!==e[1]&&null!==n,u=!1,s=1;s<e.length;++s)if(null!==e[s]&&void 0===e[s].destructorFunction){u=!0;break}var c=\"void\"!==e[0].name,f=\"\",l=\"\";for(s=0;s<i-2;++s)f+=(0!==s?\", \":\"\")+\"arg\"+s,l+=(0!==s?\", \":\"\")+\"arg\"+s+\"Wired\";var d=\"return function \"+pr(r)+\"(\"+f+\") {\\nif (arguments.length !== \"+(i-2)+\") {\\nthrowBindingError('function \"+r+\" called with ' + arguments.length + ' arguments, expected \"+(i-2)+\" args!');\\n}\\n\";u&&(d+=\"var destructors = [];\\n\");var m=u?\"destructors\":\"null\",p=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"],h=[Dr,t,o,cr,e[0],e[1]];a&&(d+=\"var thisWired = classParam.toWireType(\"+m+\", this);\\n\");for(s=0;s<i-2;++s)d+=\"var arg\"+s+\"Wired = argType\"+s+\".toWireType(\"+m+\", arg\"+s+\"); // \"+e[s+2].name+\"\\n\",p.push(\"argType\"+s),h.push(e[s+2]);if(a&&(l=\"thisWired\"+(l.length>0?\", \":\"\")+l),d+=(c?\"var rv = \":\"\")+\"invoker(fn\"+(l.length>0?\", \":\"\")+l+\");\\n\",u)d+=\"runDestructors(destructors);\\n\";else for(s=a?1:2;s<e.length;++s){var v=1===s?\"thisWired\":\"arg\"+(s-2)+\"Wired\";null!==e[s].destructorFunction&&(d+=v+\"_dtor(\"+v+\"); // \"+e[s].name+\"\\n\",p.push(v+\"_dtor\"),h.push(e[s].destructorFunction))}return c&&(d+=\"var ret = retType.fromWireType(rv);\\nreturn ret;\\n\"),d+=\"}\\n\",p.push(d),function(r,e){if(!(r instanceof Function))throw new TypeError(\"new_ called with constructor type \"+typeof r+\" which is not a function\");var n=hr(r.name||\"unknownFunctionName\",(function(){}));n.prototype=r.prototype;var t=new n,o=r.apply(t,e);return o instanceof Object?o:t}(Function,p).apply(null,h)}function zr(r,n,t){return r.includes(\"j\")?function(r,n,t){var o=e[\"dynCall_\"+r];return t&&t.length?o.apply(null,[n].concat(t)):o.call(null,n)}(r,n,t):ar(n).apply(null,t)}function Wr(r,e){var n=(r=kr(r)).includes(\"j\")?function(r,e){var n=[];return function(){n.length=arguments.length;for(var t=0;t<arguments.length;t++)n[t]=arguments[t];return zr(r,e,n)}}(r,e):ar(e);return\"function\"!==typeof n&&Dr(\"unknown function pointer with signature \"+r+\": \"+e),n}var Ir=void 0;function Ur(r,e,n){switch(e){case 0:return n?function(r){return A[r]}:function(r){return F[r]};case 1:return n?function(r){return S[r>>1]}:function(r){return T[r>>1]};case 2:return n?function(r){return P[r>>2]}:function(r){return M[r>>2]};default:throw new TypeError(\"Unknown integer type: \"+r)}}function Lr(r){try{return h.grow(r-D.byteLength+65535>>>16),U(h.buffer),1}catch(e){}}var Hr={};function Yr(){if(!Yr.strings){var r={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"===typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:f||\"./this.program\"};for(var e in Hr)void 0===Hr[e]?delete r[e]:r[e]=Hr[e];var n=[];for(var e in r)n.push(e+\"=\"+r[e]);Yr.strings=n}return Yr.strings}var qr={splitPath:function(r){return/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/.exec(r).slice(1)},normalizeArray:function(r,e){for(var n=0,t=r.length-1;t>=0;t--){var o=r[t];\".\"===o?r.splice(t,1):\"..\"===o?(r.splice(t,1),n++):n&&(r.splice(t,1),n--)}if(e)for(;n;n--)r.unshift(\"..\");return r},normalize:function(r){var e=\"/\"===r.charAt(0),n=\"/\"===r.substr(-1);return(r=qr.normalizeArray(r.split(\"/\").filter((function(r){return!!r})),!e).join(\"/\"))||e||(r=\".\"),r&&n&&(r+=\"/\"),(e?\"/\":\"\")+r},dirname:function(r){var e=qr.splitPath(r),n=e[0],t=e[1];return n||t?(t&&(t=t.substr(0,t.length-1)),n+t):\".\"},basename:function(r){if(\"/\"===r)return\"/\";var e=(r=(r=qr.normalize(r)).replace(/\\/$/,\"\")).lastIndexOf(\"/\");return-1===e?r:r.substr(e+1)},extname:function(r){return qr.splitPath(r)[3]},join:function(){var r=Array.prototype.slice.call(arguments,0);return qr.normalize(r.join(\"/\"))},join2:function(r,e){return qr.normalize(r+\"/\"+e)}};var Vr={resolve:function(){for(var r=\"\",e=!1,n=arguments.length-1;n>=-1&&!e;n--){var t=n>=0?arguments[n]:Jr.cwd();if(\"string\"!==typeof t)throw new TypeError(\"Arguments to path.resolve must be strings\");if(!t)return\"\";r=t+\"/\"+r,e=\"/\"===t.charAt(0)}return(e?\"/\":\"\")+(r=qr.normalizeArray(r.split(\"/\").filter((function(r){return!!r})),!e).join(\"/\"))||\".\"},relative:function(r,e){function n(r){for(var e=0;e<r.length&&\"\"===r[e];e++);for(var n=r.length-1;n>=0&&\"\"===r[n];n--);return e>n?[]:r.slice(e,n-e+1)}r=Vr.resolve(r).substr(1),e=Vr.resolve(e).substr(1);for(var t=n(r.split(\"/\")),o=n(e.split(\"/\")),i=Math.min(t.length,o.length),a=i,u=0;u<i;u++)if(t[u]!==o[u]){a=u;break}var s=[];for(u=a;u<t.length;u++)s.push(\"..\");return(s=s.concat(o.slice(a))).join(\"/\")}},Xr={ttys:[],init:function(){},shutdown:function(){},register:function(r,e){Xr.ttys[r]={input:[],output:[],ops:e},Jr.registerDevice(r,Xr.stream_ops)},stream_ops:{open:function(r){var e=Xr.ttys[r.node.rdev];if(!e)throw new Jr.ErrnoError(43);r.tty=e,r.seekable=!1},close:function(r){r.tty.ops.flush(r.tty)},flush:function(r){r.tty.ops.flush(r.tty)},read:function(r,e,n,t,o){if(!r.tty||!r.tty.ops.get_char)throw new Jr.ErrnoError(60);for(var i=0,a=0;a<t;a++){var u;try{u=r.tty.ops.get_char(r.tty)}catch(s){throw new Jr.ErrnoError(29)}if(void 0===u&&0===i)throw new Jr.ErrnoError(6);if(null===u||void 0===u)break;i++,e[n+a]=u}return i&&(r.node.timestamp=Date.now()),i},write:function(r,e,n,t,o){if(!r.tty||!r.tty.ops.put_char)throw new Jr.ErrnoError(60);try{for(var i=0;i<t;i++)r.tty.ops.put_char(r.tty,e[n+i])}catch(a){throw new Jr.ErrnoError(29)}return t&&(r.node.timestamp=Date.now()),i}},default_tty_ops:{get_char:function(r){if(!r.input.length){var e=null;if(\"undefined\"!=typeof window&&\"function\"==typeof window.prompt?null!==(e=window.prompt(\"Input: \"))&&(e+=\"\\n\"):\"function\"==typeof readline&&null!==(e=readline())&&(e+=\"\\n\"),!e)return null;r.input=ie(e,!0)}return r.input.shift()},put_char:function(r,e){null===e||10===e?(d(g(r.output,0)),r.output=[]):0!=e&&r.output.push(e)},flush:function(r){r.output&&r.output.length>0&&(d(g(r.output,0)),r.output=[])}},default_tty1_ops:{put_char:function(r,e){null===e||10===e?(m(g(r.output,0)),r.output=[]):0!=e&&r.output.push(e)},flush:function(r){r.output&&r.output.length>0&&(m(g(r.output,0)),r.output=[])}}};var Gr={ops_table:null,mount:function(r){return Gr.createNode(null,\"/\",16895,0)},createNode:function(r,e,n,t){if(Jr.isBlkdev(n)||Jr.isFIFO(n))throw new Jr.ErrnoError(63);Gr.ops_table||(Gr.ops_table={dir:{node:{getattr:Gr.node_ops.getattr,setattr:Gr.node_ops.setattr,lookup:Gr.node_ops.lookup,mknod:Gr.node_ops.mknod,rename:Gr.node_ops.rename,unlink:Gr.node_ops.unlink,rmdir:Gr.node_ops.rmdir,readdir:Gr.node_ops.readdir,symlink:Gr.node_ops.symlink},stream:{llseek:Gr.stream_ops.llseek}},file:{node:{getattr:Gr.node_ops.getattr,setattr:Gr.node_ops.setattr},stream:{llseek:Gr.stream_ops.llseek,read:Gr.stream_ops.read,write:Gr.stream_ops.write,allocate:Gr.stream_ops.allocate,mmap:Gr.stream_ops.mmap,msync:Gr.stream_ops.msync}},link:{node:{getattr:Gr.node_ops.getattr,setattr:Gr.node_ops.setattr,readlink:Gr.node_ops.readlink},stream:{}},chrdev:{node:{getattr:Gr.node_ops.getattr,setattr:Gr.node_ops.setattr},stream:Jr.chrdev_stream_ops}});var o=Jr.createNode(r,e,n,t);return Jr.isDir(o.mode)?(o.node_ops=Gr.ops_table.dir.node,o.stream_ops=Gr.ops_table.dir.stream,o.contents={}):Jr.isFile(o.mode)?(o.node_ops=Gr.ops_table.file.node,o.stream_ops=Gr.ops_table.file.stream,o.usedBytes=0,o.contents=null):Jr.isLink(o.mode)?(o.node_ops=Gr.ops_table.link.node,o.stream_ops=Gr.ops_table.link.stream):Jr.isChrdev(o.mode)&&(o.node_ops=Gr.ops_table.chrdev.node,o.stream_ops=Gr.ops_table.chrdev.stream),o.timestamp=Date.now(),r&&(r.contents[e]=o,r.timestamp=o.timestamp),o},getFileDataAsTypedArray:function(r){return r.contents?r.contents.subarray?r.contents.subarray(0,r.usedBytes):new Uint8Array(r.contents):new Uint8Array(0)},expandFileStorage:function(r,e){var n=r.contents?r.contents.length:0;if(!(n>=e)){e=Math.max(e,n*(n<1048576?2:1.125)>>>0),0!=n&&(e=Math.max(e,256));var t=r.contents;r.contents=new Uint8Array(e),r.usedBytes>0&&r.contents.set(t.subarray(0,r.usedBytes),0)}},resizeFileStorage:function(r,e){if(r.usedBytes!=e)if(0==e)r.contents=null,r.usedBytes=0;else{var n=r.contents;r.contents=new Uint8Array(e),n&&r.contents.set(n.subarray(0,Math.min(e,r.usedBytes))),r.usedBytes=e}},node_ops:{getattr:function(r){var e={};return e.dev=Jr.isChrdev(r.mode)?r.id:1,e.ino=r.id,e.mode=r.mode,e.nlink=1,e.uid=0,e.gid=0,e.rdev=r.rdev,Jr.isDir(r.mode)?e.size=4096:Jr.isFile(r.mode)?e.size=r.usedBytes:Jr.isLink(r.mode)?e.size=r.link.length:e.size=0,e.atime=new Date(r.timestamp),e.mtime=new Date(r.timestamp),e.ctime=new Date(r.timestamp),e.blksize=4096,e.blocks=Math.ceil(e.size/e.blksize),e},setattr:function(r,e){void 0!==e.mode&&(r.mode=e.mode),void 0!==e.timestamp&&(r.timestamp=e.timestamp),void 0!==e.size&&Gr.resizeFileStorage(r,e.size)},lookup:function(r,e){throw Jr.genericErrors[44]},mknod:function(r,e,n,t){return Gr.createNode(r,e,n,t)},rename:function(r,e,n){if(Jr.isDir(r.mode)){var t;try{t=Jr.lookupNode(e,n)}catch(i){}if(t)for(var o in t.contents)throw new Jr.ErrnoError(55)}delete r.parent.contents[r.name],r.parent.timestamp=Date.now(),r.name=n,e.contents[n]=r,e.timestamp=r.parent.timestamp,r.parent=e},unlink:function(r,e){delete r.contents[e],r.timestamp=Date.now()},rmdir:function(r,e){var n=Jr.lookupNode(r,e);for(var t in n.contents)throw new Jr.ErrnoError(55);delete r.contents[e],r.timestamp=Date.now()},readdir:function(r){var e=[\".\",\"..\"];for(var n in r.contents)r.contents.hasOwnProperty(n)&&e.push(n);return e},symlink:function(r,e,n){var t=Gr.createNode(r,e,41471,0);return t.link=n,t},readlink:function(r){if(!Jr.isLink(r.mode))throw new Jr.ErrnoError(28);return r.link}},stream_ops:{read:function(r,e,n,t,o){var i=r.node.contents;if(o>=r.node.usedBytes)return 0;var a=Math.min(r.node.usedBytes-o,t);if(a>8&&i.subarray)e.set(i.subarray(o,o+a),n);else for(var u=0;u<a;u++)e[n+u]=i[o+u];return a},write:function(r,e,n,t,o,i){if(e.buffer===A.buffer&&(i=!1),!t)return 0;var a=r.node;if(a.timestamp=Date.now(),e.subarray&&(!a.contents||a.contents.subarray)){if(i)return a.contents=e.subarray(n,n+t),a.usedBytes=t,t;if(0===a.usedBytes&&0===o)return a.contents=e.slice(n,n+t),a.usedBytes=t,t;if(o+t<=a.usedBytes)return a.contents.set(e.subarray(n,n+t),o),t}if(Gr.expandFileStorage(a,o+t),a.contents.subarray&&e.subarray)a.contents.set(e.subarray(n,n+t),o);else for(var u=0;u<t;u++)a.contents[o+u]=e[n+u];return a.usedBytes=Math.max(a.usedBytes,o+t),t},llseek:function(r,e,n){var t=e;if(1===n?t+=r.position:2===n&&Jr.isFile(r.node.mode)&&(t+=r.node.usedBytes),t<0)throw new Jr.ErrnoError(28);return t},allocate:function(r,e,n){Gr.expandFileStorage(r.node,e+n),r.node.usedBytes=Math.max(r.node.usedBytes,e+n)},mmap:function(r,e,n,t,o,i){if(0!==e)throw new Jr.ErrnoError(28);if(!Jr.isFile(r.node.mode))throw new Jr.ErrnoError(43);var a,u,s=r.node.contents;if(2&i||s.buffer!==D){if((t>0||t+n<s.length)&&(s=s.subarray?s.subarray(t,t+n):Array.prototype.slice.call(s,t,t+n)),u=!0,!(a=void $()))throw new Jr.ErrnoError(48);A.set(s,a)}else u=!1,a=s.byteOffset;return{ptr:a,allocated:u}},msync:function(r,e,n,t,o){if(!Jr.isFile(r.node.mode))throw new Jr.ErrnoError(43);if(2&o)return 0;Gr.stream_ops.write(r,e,0,t,n,!1);return 0}}};var Jr={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:\"/\",initialized:!1,ignorePermissions:!0,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:function(r,e){if(e=e||{},!(r=Vr.resolve(Jr.cwd(),r)))return{path:\"\",node:null};var n={follow_mount:!0,recurse_count:0};for(var t in n)void 0===e[t]&&(e[t]=n[t]);if(e.recurse_count>8)throw new Jr.ErrnoError(32);for(var o=qr.normalizeArray(r.split(\"/\").filter((function(r){return!!r})),!1),i=Jr.root,a=\"/\",u=0;u<o.length;u++){var s=u===o.length-1;if(s&&e.parent)break;if(i=Jr.lookupNode(i,o[u]),a=qr.join2(a,o[u]),Jr.isMountpoint(i)&&(!s||s&&e.follow_mount)&&(i=i.mounted.root),!s||e.follow)for(var c=0;Jr.isLink(i.mode);){var f=Jr.readlink(a);if(a=Vr.resolve(qr.dirname(a),f),i=Jr.lookupPath(a,{recurse_count:e.recurse_count}).node,c++>40)throw new Jr.ErrnoError(32)}}return{path:a,node:i}},getPath:function(r){for(var e;;){if(Jr.isRoot(r)){var n=r.mount.mountpoint;return e?\"/\"!==n[n.length-1]?n+\"/\"+e:n+e:n}e=e?r.name+\"/\"+e:r.name,r=r.parent}},hashName:function(r,e){for(var n=0,t=0;t<e.length;t++)n=(n<<5)-n+e.charCodeAt(t)|0;return(r+n>>>0)%Jr.nameTable.length},hashAddNode:function(r){var e=Jr.hashName(r.parent.id,r.name);r.name_next=Jr.nameTable[e],Jr.nameTable[e]=r},hashRemoveNode:function(r){var e=Jr.hashName(r.parent.id,r.name);if(Jr.nameTable[e]===r)Jr.nameTable[e]=r.name_next;else for(var n=Jr.nameTable[e];n;){if(n.name_next===r){n.name_next=r.name_next;break}n=n.name_next}},lookupNode:function(r,e){var n=Jr.mayLookup(r);if(n)throw new Jr.ErrnoError(n,r);for(var t=Jr.hashName(r.id,e),o=Jr.nameTable[t];o;o=o.name_next){var i=o.name;if(o.parent.id===r.id&&i===e)return o}return Jr.lookup(r,e)},createNode:function(r,e,n,t){var o=new Jr.FSNode(r,e,n,t);return Jr.hashAddNode(o),o},destroyNode:function(r){Jr.hashRemoveNode(r)},isRoot:function(r){return r===r.parent},isMountpoint:function(r){return!!r.mounted},isFile:function(r){return 32768===(61440&r)},isDir:function(r){return 16384===(61440&r)},isLink:function(r){return 40960===(61440&r)},isChrdev:function(r){return 8192===(61440&r)},isBlkdev:function(r){return 24576===(61440&r)},isFIFO:function(r){return 4096===(61440&r)},isSocket:function(r){return 49152===(49152&r)},flagModes:{r:0,\"r+\":2,w:577,\"w+\":578,a:1089,\"a+\":1090},modeStringToFlags:function(r){var e=Jr.flagModes[r];if(\"undefined\"===typeof e)throw new Error(\"Unknown file open mode: \"+r);return e},flagsToPermissionString:function(r){var e=[\"r\",\"w\",\"rw\"][3&r];return 512&r&&(e+=\"w\"),e},nodePermissions:function(r,e){return Jr.ignorePermissions||(!e.includes(\"r\")||292&r.mode)&&(!e.includes(\"w\")||146&r.mode)&&(!e.includes(\"x\")||73&r.mode)?0:2},mayLookup:function(r){var e=Jr.nodePermissions(r,\"x\");return e||(r.node_ops.lookup?0:2)},mayCreate:function(r,e){try{Jr.lookupNode(r,e);return 20}catch(n){}return Jr.nodePermissions(r,\"wx\")},mayDelete:function(r,e,n){var t;try{t=Jr.lookupNode(r,e)}catch(i){return i.errno}var o=Jr.nodePermissions(r,\"wx\");if(o)return o;if(n){if(!Jr.isDir(t.mode))return 54;if(Jr.isRoot(t)||Jr.getPath(t)===Jr.cwd())return 10}else if(Jr.isDir(t.mode))return 31;return 0},mayOpen:function(r,e){return r?Jr.isLink(r.mode)?32:Jr.isDir(r.mode)&&(\"r\"!==Jr.flagsToPermissionString(e)||512&e)?31:Jr.nodePermissions(r,Jr.flagsToPermissionString(e)):44},MAX_OPEN_FDS:4096,nextfd:function(r,e){r=r||0,e=e||Jr.MAX_OPEN_FDS;for(var n=r;n<=e;n++)if(!Jr.streams[n])return n;throw new Jr.ErrnoError(33)},getStream:function(r){return Jr.streams[r]},createStream:function(r,e,n){Jr.FSStream||(Jr.FSStream=function(){},Jr.FSStream.prototype={object:{get:function(){return this.node},set:function(r){this.node=r}},isRead:{get:function(){return 1!==(2097155&this.flags)}},isWrite:{get:function(){return 0!==(2097155&this.flags)}},isAppend:{get:function(){return 1024&this.flags}}});var t=new Jr.FSStream;for(var o in r)t[o]=r[o];r=t;var i=Jr.nextfd(e,n);return r.fd=i,Jr.streams[i]=r,r},closeStream:function(r){Jr.streams[r]=null},chrdev_stream_ops:{open:function(r){var e=Jr.getDevice(r.node.rdev);r.stream_ops=e.stream_ops,r.stream_ops.open&&r.stream_ops.open(r)},llseek:function(){throw new Jr.ErrnoError(70)}},major:function(r){return r>>8},minor:function(r){return 255&r},makedev:function(r,e){return r<<8|e},registerDevice:function(r,e){Jr.devices[r]={stream_ops:e}},getDevice:function(r){return Jr.devices[r]},getMounts:function(r){for(var e=[],n=[r];n.length;){var t=n.pop();e.push(t),n.push.apply(n,t.mounts)}return e},syncfs:function(r,e){\"function\"===typeof r&&(e=r,r=!1),Jr.syncFSRequests++,Jr.syncFSRequests>1&&m(\"warning: \"+Jr.syncFSRequests+\" FS.syncfs operations in flight at once, probably just doing extra work\");var n=Jr.getMounts(Jr.root.mount),t=0;function o(r){return Jr.syncFSRequests--,e(r)}function i(r){if(r)return i.errored?void 0:(i.errored=!0,o(r));++t>=n.length&&o(null)}n.forEach((function(e){if(!e.type.syncfs)return i(null);e.type.syncfs(e,r,i)}))},mount:function(r,e,n){var t,o=\"/\"===n,i=!n;if(o&&Jr.root)throw new Jr.ErrnoError(10);if(!o&&!i){var a=Jr.lookupPath(n,{follow_mount:!1});if(n=a.path,t=a.node,Jr.isMountpoint(t))throw new Jr.ErrnoError(10);if(!Jr.isDir(t.mode))throw new Jr.ErrnoError(54)}var u={type:r,opts:e,mountpoint:n,mounts:[]},s=r.mount(u);return s.mount=u,u.root=s,o?Jr.root=s:t&&(t.mounted=u,t.mount&&t.mount.mounts.push(u)),s},unmount:function(r){var e=Jr.lookupPath(r,{follow_mount:!1});if(!Jr.isMountpoint(e.node))throw new Jr.ErrnoError(28);var n=e.node,t=n.mounted,o=Jr.getMounts(t);Object.keys(Jr.nameTable).forEach((function(r){for(var e=Jr.nameTable[r];e;){var n=e.name_next;o.includes(e.mount)&&Jr.destroyNode(e),e=n}})),n.mounted=null;var i=n.mount.mounts.indexOf(t);n.mount.mounts.splice(i,1)},lookup:function(r,e){return r.node_ops.lookup(r,e)},mknod:function(r,e,n){var t=Jr.lookupPath(r,{parent:!0}).node,o=qr.basename(r);if(!o||\".\"===o||\"..\"===o)throw new Jr.ErrnoError(28);var i=Jr.mayCreate(t,o);if(i)throw new Jr.ErrnoError(i);if(!t.node_ops.mknod)throw new Jr.ErrnoError(63);return t.node_ops.mknod(t,o,e,n)},create:function(r,e){return e=void 0!==e?e:438,e&=4095,e|=32768,Jr.mknod(r,e,0)},mkdir:function(r,e){return e=void 0!==e?e:511,e&=1023,e|=16384,Jr.mknod(r,e,0)},mkdirTree:function(r,e){for(var n=r.split(\"/\"),t=\"\",o=0;o<n.length;++o)if(n[o]){t+=\"/\"+n[o];try{Jr.mkdir(t,e)}catch(i){if(20!=i.errno)throw i}}},mkdev:function(r,e,n){return\"undefined\"===typeof n&&(n=e,e=438),e|=8192,Jr.mknod(r,e,n)},symlink:function(r,e){if(!Vr.resolve(r))throw new Jr.ErrnoError(44);var n=Jr.lookupPath(e,{parent:!0}).node;if(!n)throw new Jr.ErrnoError(44);var t=qr.basename(e),o=Jr.mayCreate(n,t);if(o)throw new Jr.ErrnoError(o);if(!n.node_ops.symlink)throw new Jr.ErrnoError(63);return n.node_ops.symlink(n,t,r)},rename:function(r,e){var n,t,o=qr.dirname(r),i=qr.dirname(e),a=qr.basename(r),u=qr.basename(e);if(n=Jr.lookupPath(r,{parent:!0}).node,t=Jr.lookupPath(e,{parent:!0}).node,!n||!t)throw new Jr.ErrnoError(44);if(n.mount!==t.mount)throw new Jr.ErrnoError(75);var s,c=Jr.lookupNode(n,a),f=Vr.relative(r,i);if(\".\"!==f.charAt(0))throw new Jr.ErrnoError(28);if(\".\"!==(f=Vr.relative(e,o)).charAt(0))throw new Jr.ErrnoError(55);try{s=Jr.lookupNode(t,u)}catch(m){}if(c!==s){var l=Jr.isDir(c.mode),d=Jr.mayDelete(n,a,l);if(d)throw new Jr.ErrnoError(d);if(d=s?Jr.mayDelete(t,u,l):Jr.mayCreate(t,u))throw new Jr.ErrnoError(d);if(!n.node_ops.rename)throw new Jr.ErrnoError(63);if(Jr.isMountpoint(c)||s&&Jr.isMountpoint(s))throw new Jr.ErrnoError(10);if(t!==n&&(d=Jr.nodePermissions(n,\"w\")))throw new Jr.ErrnoError(d);Jr.hashRemoveNode(c);try{n.node_ops.rename(c,t,u)}catch(m){throw m}finally{Jr.hashAddNode(c)}}},rmdir:function(r){var e=Jr.lookupPath(r,{parent:!0}).node,n=qr.basename(r),t=Jr.lookupNode(e,n),o=Jr.mayDelete(e,n,!0);if(o)throw new Jr.ErrnoError(o);if(!e.node_ops.rmdir)throw new Jr.ErrnoError(63);if(Jr.isMountpoint(t))throw new Jr.ErrnoError(10);e.node_ops.rmdir(e,n),Jr.destroyNode(t)},readdir:function(r){var e=Jr.lookupPath(r,{follow:!0}).node;if(!e.node_ops.readdir)throw new Jr.ErrnoError(54);return e.node_ops.readdir(e)},unlink:function(r){var e=Jr.lookupPath(r,{parent:!0}).node,n=qr.basename(r),t=Jr.lookupNode(e,n),o=Jr.mayDelete(e,n,!1);if(o)throw new Jr.ErrnoError(o);if(!e.node_ops.unlink)throw new Jr.ErrnoError(63);if(Jr.isMountpoint(t))throw new Jr.ErrnoError(10);e.node_ops.unlink(e,n),Jr.destroyNode(t)},readlink:function(r){var e=Jr.lookupPath(r).node;if(!e)throw new Jr.ErrnoError(44);if(!e.node_ops.readlink)throw new Jr.ErrnoError(28);return Vr.resolve(Jr.getPath(e.parent),e.node_ops.readlink(e))},stat:function(r,e){var n=Jr.lookupPath(r,{follow:!e}).node;if(!n)throw new Jr.ErrnoError(44);if(!n.node_ops.getattr)throw new Jr.ErrnoError(63);return n.node_ops.getattr(n)},lstat:function(r){return Jr.stat(r,!0)},chmod:function(r,e,n){var t;\"string\"===typeof r?t=Jr.lookupPath(r,{follow:!n}).node:t=r;if(!t.node_ops.setattr)throw new Jr.ErrnoError(63);t.node_ops.setattr(t,{mode:4095&e|-4096&t.mode,timestamp:Date.now()})},lchmod:function(r,e){Jr.chmod(r,e,!0)},fchmod:function(r,e){var n=Jr.getStream(r);if(!n)throw new Jr.ErrnoError(8);Jr.chmod(n.node,e)},chown:function(r,e,n,t){var o;\"string\"===typeof r?o=Jr.lookupPath(r,{follow:!t}).node:o=r;if(!o.node_ops.setattr)throw new Jr.ErrnoError(63);o.node_ops.setattr(o,{timestamp:Date.now()})},lchown:function(r,e,n){Jr.chown(r,e,n,!0)},fchown:function(r,e,n){var t=Jr.getStream(r);if(!t)throw new Jr.ErrnoError(8);Jr.chown(t.node,e,n)},truncate:function(r,e){if(e<0)throw new Jr.ErrnoError(28);var n;\"string\"===typeof r?n=Jr.lookupPath(r,{follow:!0}).node:n=r;if(!n.node_ops.setattr)throw new Jr.ErrnoError(63);if(Jr.isDir(n.mode))throw new Jr.ErrnoError(31);if(!Jr.isFile(n.mode))throw new Jr.ErrnoError(28);var t=Jr.nodePermissions(n,\"w\");if(t)throw new Jr.ErrnoError(t);n.node_ops.setattr(n,{size:e,timestamp:Date.now()})},ftruncate:function(r,e){var n=Jr.getStream(r);if(!n)throw new Jr.ErrnoError(8);if(0===(2097155&n.flags))throw new Jr.ErrnoError(28);Jr.truncate(n.node,e)},utime:function(r,e,n){var t=Jr.lookupPath(r,{follow:!0}).node;t.node_ops.setattr(t,{timestamp:Math.max(e,n)})},open:function(r,n,t,o,i){if(\"\"===r)throw new Jr.ErrnoError(44);var a;if(t=\"undefined\"===typeof t?438:t,t=64&(n=\"string\"===typeof n?Jr.modeStringToFlags(n):n)?4095&t|32768:0,\"object\"===typeof r)a=r;else{r=qr.normalize(r);try{a=Jr.lookupPath(r,{follow:!(131072&n)}).node}catch(f){}}var u=!1;if(64&n)if(a){if(128&n)throw new Jr.ErrnoError(20)}else a=Jr.mknod(r,t,0),u=!0;if(!a)throw new Jr.ErrnoError(44);if(Jr.isChrdev(a.mode)&&(n&=-513),65536&n&&!Jr.isDir(a.mode))throw new Jr.ErrnoError(54);if(!u){var s=Jr.mayOpen(a,n);if(s)throw new Jr.ErrnoError(s)}512&n&&Jr.truncate(a,0),n&=-131713;var c=Jr.createStream({node:a,path:Jr.getPath(a),id:a.id,flags:n,mode:a.mode,seekable:!0,position:0,stream_ops:a.stream_ops,node_ops:a.node_ops,ungotten:[],error:!1},o,i);return c.stream_ops.open&&c.stream_ops.open(c),!e.logReadFiles||1&n||(Jr.readFiles||(Jr.readFiles={}),r in Jr.readFiles||(Jr.readFiles[r]=1)),c},close:function(r){if(Jr.isClosed(r))throw new Jr.ErrnoError(8);r.getdents&&(r.getdents=null);try{r.stream_ops.close&&r.stream_ops.close(r)}catch(e){throw e}finally{Jr.closeStream(r.fd)}r.fd=null},isClosed:function(r){return null===r.fd},llseek:function(r,e,n){if(Jr.isClosed(r))throw new Jr.ErrnoError(8);if(!r.seekable||!r.stream_ops.llseek)throw new Jr.ErrnoError(70);if(0!=n&&1!=n&&2!=n)throw new Jr.ErrnoError(28);return r.position=r.stream_ops.llseek(r,e,n),r.ungotten=[],r.position},read:function(r,e,n,t,o){if(t<0||o<0)throw new Jr.ErrnoError(28);if(Jr.isClosed(r))throw new Jr.ErrnoError(8);if(1===(2097155&r.flags))throw new Jr.ErrnoError(8);if(Jr.isDir(r.node.mode))throw new Jr.ErrnoError(31);if(!r.stream_ops.read)throw new Jr.ErrnoError(28);var i=\"undefined\"!==typeof o;if(i){if(!r.seekable)throw new Jr.ErrnoError(70)}else o=r.position;var a=r.stream_ops.read(r,e,n,t,o);return i||(r.position+=a),a},write:function(r,e,n,t,o,i){if(t<0||o<0)throw new Jr.ErrnoError(28);if(Jr.isClosed(r))throw new Jr.ErrnoError(8);if(0===(2097155&r.flags))throw new Jr.ErrnoError(8);if(Jr.isDir(r.node.mode))throw new Jr.ErrnoError(31);if(!r.stream_ops.write)throw new Jr.ErrnoError(28);r.seekable&&1024&r.flags&&Jr.llseek(r,0,2);var a=\"undefined\"!==typeof o;if(a){if(!r.seekable)throw new Jr.ErrnoError(70)}else o=r.position;var u=r.stream_ops.write(r,e,n,t,o,i);return a||(r.position+=u),u},allocate:function(r,e,n){if(Jr.isClosed(r))throw new Jr.ErrnoError(8);if(e<0||n<=0)throw new Jr.ErrnoError(28);if(0===(2097155&r.flags))throw new Jr.ErrnoError(8);if(!Jr.isFile(r.node.mode)&&!Jr.isDir(r.node.mode))throw new Jr.ErrnoError(43);if(!r.stream_ops.allocate)throw new Jr.ErrnoError(138);r.stream_ops.allocate(r,e,n)},mmap:function(r,e,n,t,o,i){if(0!==(2&o)&&0===(2&i)&&2!==(2097155&r.flags))throw new Jr.ErrnoError(2);if(1===(2097155&r.flags))throw new Jr.ErrnoError(2);if(!r.stream_ops.mmap)throw new Jr.ErrnoError(43);return r.stream_ops.mmap(r,e,n,t,o,i)},msync:function(r,e,n,t,o){return r&&r.stream_ops.msync?r.stream_ops.msync(r,e,n,t,o):0},munmap:function(r){return 0},ioctl:function(r,e,n){if(!r.stream_ops.ioctl)throw new Jr.ErrnoError(59);return r.stream_ops.ioctl(r,e,n)},readFile:function(r,e){if((e=e||{}).flags=e.flags||0,e.encoding=e.encoding||\"binary\",\"utf8\"!==e.encoding&&\"binary\"!==e.encoding)throw new Error('Invalid encoding type \"'+e.encoding+'\"');var n,t=Jr.open(r,e.flags),o=Jr.stat(r).size,i=new Uint8Array(o);return Jr.read(t,i,0,o,0),\"utf8\"===e.encoding?n=g(i,0):\"binary\"===e.encoding&&(n=i),Jr.close(t),n},writeFile:function(r,e,n){(n=n||{}).flags=n.flags||577;var t=Jr.open(r,n.flags,n.mode);if(\"string\"===typeof e){var o=new Uint8Array(b(e)+1),i=_(e,o,0,o.length);Jr.write(t,o,0,i,void 0,n.canOwn)}else{if(!ArrayBuffer.isView(e))throw new Error(\"Unsupported data type\");Jr.write(t,e,0,e.byteLength,void 0,n.canOwn)}Jr.close(t)},cwd:function(){return Jr.currentPath},chdir:function(r){var e=Jr.lookupPath(r,{follow:!0});if(null===e.node)throw new Jr.ErrnoError(44);if(!Jr.isDir(e.node.mode))throw new Jr.ErrnoError(54);var n=Jr.nodePermissions(e.node,\"x\");if(n)throw new Jr.ErrnoError(n);Jr.currentPath=e.path},createDefaultDirectories:function(){Jr.mkdir(\"/tmp\"),Jr.mkdir(\"/home\"),Jr.mkdir(\"/home/web_user\")},createDefaultDevices:function(){Jr.mkdir(\"/dev\"),Jr.registerDevice(Jr.makedev(1,3),{read:function(){return 0},write:function(r,e,n,t,o){return t}}),Jr.mkdev(\"/dev/null\",Jr.makedev(1,3)),Xr.register(Jr.makedev(5,0),Xr.default_tty_ops),Xr.register(Jr.makedev(6,0),Xr.default_tty1_ops),Jr.mkdev(\"/dev/tty\",Jr.makedev(5,0)),Jr.mkdev(\"/dev/tty1\",Jr.makedev(6,0));var r=function(){if(\"object\"===typeof crypto&&\"function\"===typeof crypto.getRandomValues){var r=new Uint8Array(1);return function(){return crypto.getRandomValues(r),r[0]}}return function(){$(\"randomDevice\")}}();Jr.createDevice(\"/dev\",\"random\",r),Jr.createDevice(\"/dev\",\"urandom\",r),Jr.mkdir(\"/dev/shm\"),Jr.mkdir(\"/dev/shm/tmp\")},createSpecialDirectories:function(){Jr.mkdir(\"/proc\");var r=Jr.mkdir(\"/proc/self\");Jr.mkdir(\"/proc/self/fd\"),Jr.mount({mount:function(){var e=Jr.createNode(r,\"fd\",16895,73);return e.node_ops={lookup:function(r,e){var n=+e,t=Jr.getStream(n);if(!t)throw new Jr.ErrnoError(8);var o={parent:null,mount:{mountpoint:\"fake\"},node_ops:{readlink:function(){return t.path}}};return o.parent=o,o}},e}},{},\"/proc/self/fd\")},createStandardStreams:function(){e.stdin?Jr.createDevice(\"/dev\",\"stdin\",e.stdin):Jr.symlink(\"/dev/tty\",\"/dev/stdin\"),e.stdout?Jr.createDevice(\"/dev\",\"stdout\",null,e.stdout):Jr.symlink(\"/dev/tty\",\"/dev/stdout\"),e.stderr?Jr.createDevice(\"/dev\",\"stderr\",null,e.stderr):Jr.symlink(\"/dev/tty1\",\"/dev/stderr\");Jr.open(\"/dev/stdin\",0),Jr.open(\"/dev/stdout\",1),Jr.open(\"/dev/stderr\",1)},ensureErrnoError:function(){Jr.ErrnoError||(Jr.ErrnoError=function(r,e){this.node=e,this.setErrno=function(r){this.errno=r},this.setErrno(r),this.message=\"FS error\"},Jr.ErrnoError.prototype=new Error,Jr.ErrnoError.prototype.constructor=Jr.ErrnoError,[44].forEach((function(r){Jr.genericErrors[r]=new Jr.ErrnoError(r),Jr.genericErrors[r].stack=\"<generic error, no stack>\"})))},staticInit:function(){Jr.ensureErrnoError(),Jr.nameTable=new Array(4096),Jr.mount(Gr,{},\"/\"),Jr.createDefaultDirectories(),Jr.createDefaultDevices(),Jr.createSpecialDirectories(),Jr.filesystems={MEMFS:Gr}},init:function(r,n,t){Jr.init.initialized=!0,Jr.ensureErrnoError(),e.stdin=r||e.stdin,e.stdout=n||e.stdout,e.stderr=t||e.stderr,Jr.createStandardStreams()},quit:function(){Jr.init.initialized=!1;var r=e._fflush;r&&r(0);for(var n=0;n<Jr.streams.length;n++){var t=Jr.streams[n];t&&Jr.close(t)}},getMode:function(r,e){var n=0;return r&&(n|=365),e&&(n|=146),n},findObject:function(r,e){var n=Jr.analyzePath(r,e);return n.exists?n.object:null},analyzePath:function(r,e){try{r=(t=Jr.lookupPath(r,{follow:!e})).path}catch(o){}var n={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null};try{var t=Jr.lookupPath(r,{parent:!0});n.parentExists=!0,n.parentPath=t.path,n.parentObject=t.node,n.name=qr.basename(r),t=Jr.lookupPath(r,{follow:!e}),n.exists=!0,n.path=t.path,n.object=t.node,n.name=t.node.name,n.isRoot=\"/\"===t.path}catch(o){n.error=o.errno}return n},createPath:function(r,e,n,t){r=\"string\"===typeof r?r:Jr.getPath(r);for(var o=e.split(\"/\").reverse();o.length;){var i=o.pop();if(i){var a=qr.join2(r,i);try{Jr.mkdir(a)}catch(u){}r=a}}return a},createFile:function(r,e,n,t,o){var i=qr.join2(\"string\"===typeof r?r:Jr.getPath(r),e),a=Jr.getMode(t,o);return Jr.create(i,a)},createDataFile:function(r,e,n,t,o,i){var a=e?qr.join2(\"string\"===typeof r?r:Jr.getPath(r),e):r,u=Jr.getMode(t,o),s=Jr.create(a,u);if(n){if(\"string\"===typeof n){for(var c=new Array(n.length),f=0,l=n.length;f<l;++f)c[f]=n.charCodeAt(f);n=c}Jr.chmod(s,146|u);var d=Jr.open(s,577);Jr.write(d,n,0,n.length,0,i),Jr.close(d),Jr.chmod(s,u)}return s},createDevice:function(r,e,n,t){var o=qr.join2(\"string\"===typeof r?r:Jr.getPath(r),e),i=Jr.getMode(!!n,!!t);Jr.createDevice.major||(Jr.createDevice.major=64);var a=Jr.makedev(Jr.createDevice.major++,0);return Jr.registerDevice(a,{open:function(r){r.seekable=!1},close:function(r){t&&t.buffer&&t.buffer.length&&t(10)},read:function(r,e,t,o,i){for(var a=0,u=0;u<o;u++){var s;try{s=n()}catch(c){throw new Jr.ErrnoError(29)}if(void 0===s&&0===a)throw new Jr.ErrnoError(6);if(null===s||void 0===s)break;a++,e[t+u]=s}return a&&(r.node.timestamp=Date.now()),a},write:function(r,e,n,o,i){for(var a=0;a<o;a++)try{t(e[n+a])}catch(u){throw new Jr.ErrnoError(29)}return o&&(r.node.timestamp=Date.now()),a}}),Jr.mkdev(o,i,a)},forceLoadFile:function(r){if(r.isDevice||r.isFolder||r.link||r.contents)return!0;if(\"undefined\"!==typeof XMLHttpRequest)throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");if(!a)throw new Error(\"Cannot load without read() or XMLHttpRequest.\");try{r.contents=ie(a(r.url),!0),r.usedBytes=r.contents.length}catch(e){throw new Jr.ErrnoError(29)}},createLazyFile:function(r,e,n,t,o){function i(){this.lengthKnown=!1,this.chunks=[]}if(i.prototype.get=function(r){if(!(r>this.length-1||r<0)){var e=r%this.chunkSize,n=r/this.chunkSize|0;return this.getter(n)[e]}},i.prototype.setDataGetter=function(r){this.getter=r},i.prototype.cacheLength=function(){var r=new XMLHttpRequest;if(r.open(\"HEAD\",n,!1),r.send(null),!(r.status>=200&&r.status<300||304===r.status))throw new Error(\"Couldn't load \"+n+\". Status: \"+r.status);var e,t=Number(r.getResponseHeader(\"Content-length\")),o=(e=r.getResponseHeader(\"Accept-Ranges\"))&&\"bytes\"===e,i=(e=r.getResponseHeader(\"Content-Encoding\"))&&\"gzip\"===e,a=1048576;o||(a=t);var u=this;u.setDataGetter((function(r){var e=r*a,o=(r+1)*a-1;if(o=Math.min(o,t-1),\"undefined\"===typeof u.chunks[r]&&(u.chunks[r]=function(r,e){if(r>e)throw new Error(\"invalid range (\"+r+\", \"+e+\") or no bytes requested!\");if(e>t-1)throw new Error(\"only \"+t+\" bytes available! programmer error!\");var o=new XMLHttpRequest;if(o.open(\"GET\",n,!1),t!==a&&o.setRequestHeader(\"Range\",\"bytes=\"+r+\"-\"+e),\"undefined\"!=typeof Uint8Array&&(o.responseType=\"arraybuffer\"),o.overrideMimeType&&o.overrideMimeType(\"text/plain; charset=x-user-defined\"),o.send(null),!(o.status>=200&&o.status<300||304===o.status))throw new Error(\"Couldn't load \"+n+\". Status: \"+o.status);return void 0!==o.response?new Uint8Array(o.response||[]):ie(o.responseText||\"\",!0)}(e,o)),\"undefined\"===typeof u.chunks[r])throw new Error(\"doXHR failed!\");return u.chunks[r]})),!i&&t||(a=t=1,t=this.getter(0).length,a=t,d(\"LazyFiles on gzip forces download of the whole file when length is accessed\")),this._length=t,this._chunkSize=a,this.lengthKnown=!0},\"undefined\"!==typeof XMLHttpRequest)throw\"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";var a={isDevice:!1,url:n},u=Jr.createFile(r,e,a,t,o);a.contents?u.contents=a.contents:a.url&&(u.contents=null,u.url=a.url),Object.defineProperties(u,{usedBytes:{get:function(){return this.contents.length}}});var s={};return Object.keys(u.stream_ops).forEach((function(r){var e=u.stream_ops[r];s[r]=function(){return Jr.forceLoadFile(u),e.apply(null,arguments)}})),s.read=function(r,e,n,t,o){Jr.forceLoadFile(u);var i=r.node.contents;if(o>=i.length)return 0;var a=Math.min(i.length-o,t);if(i.slice)for(var s=0;s<a;s++)e[n+s]=i[o+s];else for(s=0;s<a;s++)e[n+s]=i.get(o+s);return a},u.stream_ops=s,u},createPreloadedFile:function(r,n,t,o,i,a,s,c,f,l){Browser.init();var d=n?Vr.resolve(qr.join2(r,n)):r;function m(t){function u(e){l&&l(),c||Jr.createDataFile(r,n,e,o,i,f),a&&a(),K()}var m=!1;e.preloadPlugins.forEach((function(r){m||r.canHandle(d)&&(r.handle(t,d,u,(function(){s&&s(),K()})),m=!0)})),m||u(t)}J(),\"string\"==typeof t?function(r,e,n,t){var o=t?\"\":\"al \"+r;u(r,(function(n){w(n,'Loading data file \"'+r+'\" failed (no arrayBuffer).'),e(new Uint8Array(n)),o&&K()}),(function(e){if(!n)throw'Loading data file \"'+r+'\" failed.';n()})),o&&J()}(t,(function(r){m(r)}),s):m(t)},indexedDB:function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB},DB_NAME:function(){return\"EM_FS_\"+window.location.pathname},DB_VERSION:20,DB_STORE_NAME:\"FILE_DATA\",saveFilesToDB:function(r,e,n){e=e||function(){},n=n||function(){};var t=Jr.indexedDB();try{var o=t.open(Jr.DB_NAME(),Jr.DB_VERSION)}catch(i){return n(i)}o.onupgradeneeded=function(){d(\"creating db\"),o.result.createObjectStore(Jr.DB_STORE_NAME)},o.onsuccess=function(){var t=o.result.transaction([Jr.DB_STORE_NAME],\"readwrite\"),i=t.objectStore(Jr.DB_STORE_NAME),a=0,u=0,s=r.length;function c(){0==u?e():n()}r.forEach((function(r){var e=i.put(Jr.analyzePath(r).object.contents,r);e.onsuccess=function(){++a+u==s&&c()},e.onerror=function(){u++,a+u==s&&c()}})),t.onerror=n},o.onerror=n},loadFilesFromDB:function(r,e,n){e=e||function(){},n=n||function(){};var t=Jr.indexedDB();try{var o=t.open(Jr.DB_NAME(),Jr.DB_VERSION)}catch(i){return n(i)}o.onupgradeneeded=n,o.onsuccess=function(){var t=o.result;try{var a=t.transaction([Jr.DB_STORE_NAME],\"readonly\")}catch(i){return void n(i)}var u=a.objectStore(Jr.DB_STORE_NAME),s=0,c=0,f=r.length;function l(){0==c?e():n()}r.forEach((function(r){var e=u.get(r);e.onsuccess=function(){Jr.analyzePath(r).exists&&Jr.unlink(r),Jr.createDataFile(qr.dirname(r),qr.basename(r),e.result,!0,!0,!0),++s+c==f&&l()},e.onerror=function(){c++,s+c==f&&l()}})),a.onerror=n},o.onerror=n}},Kr={mappings:{},DEFAULT_POLLMASK:5,calculateAt:function(r,e,n){if(\"/\"===e[0])return e;var t;if(-100===r)t=Jr.cwd();else{var o=Jr.getStream(r);if(!o)throw new Jr.ErrnoError(8);t=o.path}if(0==e.length){if(!n)throw new Jr.ErrnoError(44);return t}return qr.join2(t,e)},doStat:function(r,e,n){try{var t=r(e)}catch(o){if(o&&o.node&&qr.normalize(e)!==qr.normalize(Jr.getPath(o.node)))return-54;throw o}return P[n>>2]=t.dev,P[n+4>>2]=0,P[n+8>>2]=t.ino,P[n+12>>2]=t.mode,P[n+16>>2]=t.nlink,P[n+20>>2]=t.uid,P[n+24>>2]=t.gid,P[n+28>>2]=t.rdev,P[n+32>>2]=0,er=[t.size>>>0,(rr=t.size,+Math.abs(rr)>=1?rr>0?(0|Math.min(+Math.floor(rr/4294967296),4294967295))>>>0:~~+Math.ceil((rr-+(~~rr>>>0))/4294967296)>>>0:0)],P[n+40>>2]=er[0],P[n+44>>2]=er[1],P[n+48>>2]=4096,P[n+52>>2]=t.blocks,P[n+56>>2]=t.atime.getTime()/1e3|0,P[n+60>>2]=0,P[n+64>>2]=t.mtime.getTime()/1e3|0,P[n+68>>2]=0,P[n+72>>2]=t.ctime.getTime()/1e3|0,P[n+76>>2]=0,er=[t.ino>>>0,(rr=t.ino,+Math.abs(rr)>=1?rr>0?(0|Math.min(+Math.floor(rr/4294967296),4294967295))>>>0:~~+Math.ceil((rr-+(~~rr>>>0))/4294967296)>>>0:0)],P[n+80>>2]=er[0],P[n+84>>2]=er[1],0},doMsync:function(r,e,n,t,o){var i=F.slice(r,r+n);Jr.msync(e,i,o,n,t)},doMkdir:function(r,e){return\"/\"===(r=qr.normalize(r))[r.length-1]&&(r=r.substr(0,r.length-1)),Jr.mkdir(r,e,0),0},doMknod:function(r,e,n){switch(61440&e){case 32768:case 8192:case 24576:case 4096:case 49152:break;default:return-28}return Jr.mknod(r,e,n),0},doReadlink:function(r,e,n){if(n<=0)return-28;var t=Jr.readlink(r),o=Math.min(n,b(t)),i=A[e+o];return k(t,e,n+1),A[e+o]=i,o},doAccess:function(r,e){if(-8&e)return-28;var n;if(!(n=Jr.lookupPath(r,{follow:!0}).node))return-44;var t=\"\";return 4&e&&(t+=\"r\"),2&e&&(t+=\"w\"),1&e&&(t+=\"x\"),t&&Jr.nodePermissions(n,t)?-2:0},doDup:function(r,e,n){var t=Jr.getStream(n);return t&&Jr.close(t),Jr.open(r,e,0,n,n).fd},doReadv:function(r,e,n,t){for(var o=0,i=0;i<n;i++){var a=P[e+8*i>>2],u=P[e+(8*i+4)>>2],s=Jr.read(r,A,a,u,t);if(s<0)return-1;if(o+=s,s<u)break}return o},doWritev:function(r,e,n,t){for(var o=0,i=0;i<n;i++){var a=P[e+8*i>>2],u=P[e+(8*i+4)>>2],s=Jr.write(r,A,a,u,t);if(s<0)return-1;o+=s}return o},varargs:void 0,get:function(){return Kr.varargs+=4,P[Kr.varargs-4>>2]},getStr:function(r){return E(r)},getStreamFromFD:function(r){var e=Jr.getStream(r);if(!e)throw new Jr.ErrnoError(8);return e},get64:function(r,e){return r}};function $r(r){return r%4===0&&(r%100!==0||r%400===0)}function Zr(r,e){for(var n=0,t=0;t<=e;n+=r[t++]);return n}var Qr=[31,29,31,30,31,30,31,31,30,31,30,31],re=[31,28,31,30,31,30,31,31,30,31,30,31];function ee(r,e){for(var n=new Date(r.getTime());e>0;){var t=$r(n.getFullYear()),o=n.getMonth(),i=(t?Qr:re)[o];if(!(e>i-n.getDate()))return n.setDate(n.getDate()+e),n;e-=i-n.getDate()+1,n.setDate(1),o<11?n.setMonth(o+1):(n.setMonth(0),n.setFullYear(n.getFullYear()+1))}return n}wr=e.InternalError=vr(Error,\"InternalError\"),function(){for(var r=new Array(256),e=0;e<256;++e)r[e]=String.fromCharCode(e);_r=r}(),br=e.BindingError=vr(Error,\"BindingError\"),e.count_emval_handles=Tr,e.get_first_emval=Pr,Ir=e.UnboundTypeError=vr(Error,\"UnboundTypeError\");var ne=function(r,e,n,t){r||(r=this),this.parent=r,this.mount=r.mount,this.mounted=null,this.id=Jr.nextInode++,this.name=e,this.mode=n,this.node_ops={},this.stream_ops={},this.rdev=t},te=365,oe=146;function ie(r,e,n){var t=n>0?n:b(r)+1,o=new Array(t),i=_(r,o,0,o.length);return e&&(o.length=i),o}Object.defineProperties(ne.prototype,{read:{get:function(){return(this.mode&te)===te},set:function(r){r?this.mode|=te:this.mode&=-366}},write:{get:function(){return(this.mode&oe)===oe},set:function(r){r?this.mode|=oe:this.mode&=-147}},isFolder:{get:function(){return Jr.isDir(this.mode)}},isDevice:{get:function(){return Jr.isChrdev(this.mode)}}}),Jr.FSNode=ne,Jr.staticInit();var ae,ue={a:function(r){return ce(r+16)+16},b:function(r,e,n){throw new ur(r).init(e,n),r,r},o:function(r){var e=sr[r];delete sr[r];var n=e.elements,t=n.length,o=n.map((function(r){return r.getterReturnType})).concat(n.map((function(r){return r.setterArgumentType}))),i=e.rawConstructor,a=e.rawDestructor;gr([r],o,(function(r){return n.forEach((function(e,n){var o=r[n],i=e.getter,a=e.getterContext,u=r[n+t],s=e.setter,c=e.setterContext;e.read=function(r){return o.fromWireType(i(a,r))},e.write=function(r,e){var n=[];s(c,r,u.toWireType(n,e)),cr(n)}})),[{name:e.name,fromWireType:function(r){for(var e=new Array(t),o=0;o<t;++o)e[o]=n[o].read(r);return a(r),e},toWireType:function(r,o){if(t!==o.length)throw new TypeError(\"Incorrect number of tuple elements for \"+e.name+\": expected=\"+t+\", actual=\"+o.length);for(var u=i(),s=0;s<t;++s)n[s].write(u,o[s]);return null!==r&&r.push(a,u),u},argPackAdvance:8,readValueFromPointer:fr,destructorFunction:a}]}))},r:function(r,e,n,t,o){},m:function(r,e,n,t,o){var i=Er(n);Ar(r,{name:e=kr(e),fromWireType:function(r){return!!r},toWireType:function(r,e){return e?t:o},argPackAdvance:8,readValueFromPointer:function(r){var t;if(1===n)t=A;else if(2===n)t=S;else{if(4!==n)throw new TypeError(\"Unknown boolean type size: \"+e);t=P}return this.fromWireType(t[r>>i])},destructorFunction:null})},B:function(r,e){Ar(r,{name:e=kr(e),fromWireType:function(r){var e=Mr(r);return function(r){r>4&&0===--Sr[r].refcount&&(Sr[r]=void 0,Fr.push(r))}(r),e},toWireType:function(r,e){return Cr(e)},argPackAdvance:8,readValueFromPointer:fr,destructorFunction:null})},w:function(r,e,n,t){var o=Er(n);function i(){}e=kr(e),i.values={},Ar(r,{name:e,constructor:i,fromWireType:function(r){return this.constructor.values[r]},toWireType:function(r,e){return e.value},argPackAdvance:8,readValueFromPointer:xr(e,o,t),destructorFunction:null}),Rr(e,i)},g:function(r,e,n){var t=function(r,e){var n=dr[r];return void 0===n&&Dr(e+\" has unknown type \"+Or(r)),n}(r,\"enum\");e=kr(e);var o=t.constructor,i=Object.create(t.constructor.prototype,{value:{value:n},constructor:{value:hr(t.name+\"_\"+e,(function(){}))}});o.values[n]=i,o[e]=i},k:function(r,e,n){var t=Er(n);Ar(r,{name:e=kr(e),fromWireType:function(r){return r},toWireType:function(r,e){if(\"number\"!==typeof e&&\"boolean\"!==typeof e)throw new TypeError('Cannot convert \"'+jr(e)+'\" to '+this.name);return e},argPackAdvance:8,readValueFromPointer:Br(e,t),destructorFunction:null})},f:function(r,n,t,o,i,a){var u=function(r,e){for(var n=[],t=0;t<r;t++)n.push(P[(e>>2)+t]);return n}(n,t);r=kr(r),i=Wr(o,i),Rr(r,(function(){!function(r,e){var n=[],t={};throw e.forEach((function r(e){t[e]||dr[e]||(mr[e]?mr[e].forEach(r):(n.push(e),t[e]=!0))})),new Ir(r+\": \"+n.map(Or).join([\", \"]))}(\"Cannot call \"+r+\" due to unbound types\",u)}),n-1),gr([],u,(function(t){var o=[t[0],null].concat(t.slice(1));return function(r,n,t){e.hasOwnProperty(r)||yr(\"Replacing nonexistant public symbol\"),void 0!==e[r].overloadTable&&void 0!==t?e[r].overloadTable[t]=n:(e[r]=n,e[r].argCount=t)}(r,Nr(r,o,null,i,a),n-1),[]}))},e:function(r,e,n,t,o){e=kr(e),-1===o&&(o=4294967295);var i=Er(n),a=function(r){return r};if(0===t){var u=32-8*n;a=function(r){return r<<u>>>u}}var s=e.includes(\"unsigned\");Ar(r,{name:e,fromWireType:a,toWireType:function(r,n){if(\"number\"!==typeof n&&\"boolean\"!==typeof n)throw new TypeError('Cannot convert \"'+jr(n)+'\" to '+this.name);if(n<t||n>o)throw new TypeError('Passing a number \"'+jr(n)+'\" from JS side to C/C++ side to an argument of type \"'+e+'\", which is outside the valid range ['+t+\", \"+o+\"]!\");return s?n>>>0:0|n},argPackAdvance:8,readValueFromPointer:Ur(e,i,0!==t),destructorFunction:null})},d:function(r,e,n){var t=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][e];function o(r){var e=M,n=e[r>>=2],o=e[r+1];return new t(D,o,n)}Ar(r,{name:n=kr(n),fromWireType:o,argPackAdvance:8,readValueFromPointer:o},{ignoreDuplicateRegistrations:!0})},l:function(r,e){var n=\"std::string\"===(e=kr(e));Ar(r,{name:e,fromWireType:function(r){var e,t=M[r>>2];if(n)for(var o=r+4,i=0;i<=t;++i){var a=r+4+i;if(i==t||0==F[a]){var u=E(o,a-o);void 0===e?e=u:(e+=String.fromCharCode(0),e+=u),o=a+1}}else{var s=new Array(t);for(i=0;i<t;++i)s[i]=String.fromCharCode(F[r+4+i]);e=s.join(\"\")}return me(r),e},toWireType:function(r,e){e instanceof ArrayBuffer&&(e=new Uint8Array(e));var t=\"string\"===typeof e;t||e instanceof Uint8Array||e instanceof Uint8ClampedArray||e instanceof Int8Array||Dr(\"Cannot pass non-string to std::string\");var o=(n&&t?function(){return b(e)}:function(){return e.length})(),i=ce(4+o+1);if(M[i>>2]=o,n&&t)k(e,i+4,o+1);else if(t)for(var a=0;a<o;++a){var u=e.charCodeAt(a);u>255&&(me(i),Dr(\"String has UTF-16 code units that do not fit in 8 bits\")),F[i+4+a]=u}else for(a=0;a<o;++a)F[i+4+a]=e[a];return null!==r&&r.push(me,i),i},argPackAdvance:8,readValueFromPointer:fr,destructorFunction:function(r){me(r)}})},i:function(r,e,n){var t,o,i,a,u;n=kr(n),2===e?(t=O,o=j,a=B,i=function(){return T},u=1):4===e&&(t=N,o=z,a=W,i=function(){return M},u=2),Ar(r,{name:n,fromWireType:function(r){for(var n,o=M[r>>2],a=i(),s=r+4,c=0;c<=o;++c){var f=r+4+c*e;if(c==o||0==a[f>>u]){var l=t(s,f-s);void 0===n?n=l:(n+=String.fromCharCode(0),n+=l),s=f+e}}return me(r),n},toWireType:function(r,t){\"string\"!==typeof t&&Dr(\"Cannot pass non-string to C++ string type \"+n);var i=a(t),s=ce(4+i+e);return M[s>>2]=i>>u,o(t,s+4,i+e),null!==r&&r.push(me,s),s},argPackAdvance:8,readValueFromPointer:fr,destructorFunction:function(r){me(r)}})},p:function(r,e,n,t,o,i){sr[r]={name:kr(e),rawConstructor:Wr(n,t),rawDestructor:Wr(o,i),elements:[]}},c:function(r,e,n,t,o,i,a,u,s){sr[r].elements.push({getterReturnType:e,getter:Wr(n,t),getterContext:o,setterArgumentType:i,setter:Wr(a,u),setterContext:s})},n:function(r,e){Ar(r,{isVoid:!0,name:e=kr(e),argPackAdvance:0,fromWireType:function(){},toWireType:function(r,e){}})},j:function(){$(\"\")},t:function(r,e,n){F.copyWithin(r,e,e+n)},h:function(r){var e,n,t=F.length,o=2147483648;if((r>>>=0)>o)return!1;for(var i=1;i<=4;i*=2){var a=t*(1+.2/i);if(a=Math.min(a,r+100663296),Lr(Math.min(o,((e=Math.max(r,a))%(n=65536)>0&&(e+=n-e%n),e))))return!0}return!1},x:function(r,e){var n=0;return Yr().forEach((function(t,o){var i=e+n;P[r+4*o>>2]=i,function(r,e,n){for(var t=0;t<r.length;++t)A[e++>>0]=r.charCodeAt(t);n||(A[e>>0]=0)}(t,i),n+=t.length+1})),0},y:function(r,e){var n=Yr();P[r>>2]=n.length;var t=0;return n.forEach((function(r){t+=r.length+1})),P[e>>2]=t,0},A:function(r){try{var e=Kr.getStreamFromFD(r);return Jr.close(e),0}catch(n){return\"undefined\"!==typeof Jr&&n instanceof Jr.ErrnoError||$(n),n.errno}},u:function(r,e,n,t){try{var o=Kr.getStreamFromFD(r),i=Kr.doReadv(o,e,n);return P[t>>2]=i,0}catch(a){return\"undefined\"!==typeof Jr&&a instanceof Jr.ErrnoError||$(a),a.errno}},q:function(r,e,n,t,o){try{var i=Kr.getStreamFromFD(r),a=4294967296*n+(e>>>0),u=9007199254740992;return a<=-u||a>=u?-61:(Jr.llseek(i,a,t),er=[i.position>>>0,(rr=i.position,+Math.abs(rr)>=1?rr>0?(0|Math.min(+Math.floor(rr/4294967296),4294967295))>>>0:~~+Math.ceil((rr-+(~~rr>>>0))/4294967296)>>>0:0)],P[o>>2]=er[0],P[o+4>>2]=er[1],i.getdents&&0===a&&0===t&&(i.getdents=null),0)}catch(s){return\"undefined\"!==typeof Jr&&s instanceof Jr.ErrnoError||$(s),s.errno}},z:function(r,e,n,t){try{var o=Kr.getStreamFromFD(r),i=Kr.doWritev(o,e,n);return P[t>>2]=i,0}catch(a){return\"undefined\"!==typeof Jr&&a instanceof Jr.ErrnoError||$(a),a.errno}},s:function(r){r},v:function(r,e,n,t){return function(r,e,n,t){var o=P[t+40>>2],i={tm_sec:P[t>>2],tm_min:P[t+4>>2],tm_hour:P[t+8>>2],tm_mday:P[t+12>>2],tm_mon:P[t+16>>2],tm_year:P[t+20>>2],tm_wday:P[t+24>>2],tm_yday:P[t+28>>2],tm_isdst:P[t+32>>2],tm_gmtoff:P[t+36>>2],tm_zone:o?E(o):\"\"},a=E(n),u={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var s in u)a=a.replace(new RegExp(s,\"g\"),u[s]);var c=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],f=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];function l(r,e,n){for(var t=\"number\"===typeof r?r.toString():r||\"\";t.length<e;)t=n[0]+t;return t}function d(r,e){return l(r,e,\"0\")}function m(r,e){function n(r){return r<0?-1:r>0?1:0}var t;return 0===(t=n(r.getFullYear()-e.getFullYear()))&&0===(t=n(r.getMonth()-e.getMonth()))&&(t=n(r.getDate()-e.getDate())),t}function p(r){switch(r.getDay()){case 0:return new Date(r.getFullYear()-1,11,29);case 1:return r;case 2:return new Date(r.getFullYear(),0,3);case 3:return new Date(r.getFullYear(),0,2);case 4:return new Date(r.getFullYear(),0,1);case 5:return new Date(r.getFullYear()-1,11,31);case 6:return new Date(r.getFullYear()-1,11,30)}}function h(r){var e=ee(new Date(r.tm_year+1900,0,1),r.tm_yday),n=new Date(e.getFullYear(),0,4),t=new Date(e.getFullYear()+1,0,4),o=p(n),i=p(t);return m(o,e)<=0?m(i,e)<=0?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var v={\"%a\":function(r){return c[r.tm_wday].substring(0,3)},\"%A\":function(r){return c[r.tm_wday]},\"%b\":function(r){return f[r.tm_mon].substring(0,3)},\"%B\":function(r){return f[r.tm_mon]},\"%C\":function(r){return d((r.tm_year+1900)/100|0,2)},\"%d\":function(r){return d(r.tm_mday,2)},\"%e\":function(r){return l(r.tm_mday,2,\" \")},\"%g\":function(r){return h(r).toString().substring(2)},\"%G\":function(r){return h(r)},\"%H\":function(r){return d(r.tm_hour,2)},\"%I\":function(r){var e=r.tm_hour;return 0==e?e=12:e>12&&(e-=12),d(e,2)},\"%j\":function(r){return d(r.tm_mday+Zr($r(r.tm_year+1900)?Qr:re,r.tm_mon-1),3)},\"%m\":function(r){return d(r.tm_mon+1,2)},\"%M\":function(r){return d(r.tm_min,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(r){return r.tm_hour>=0&&r.tm_hour<12?\"AM\":\"PM\"},\"%S\":function(r){return d(r.tm_sec,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(r){return r.tm_wday||7},\"%U\":function(r){var e=new Date(r.tm_year+1900,0,1),n=0===e.getDay()?e:ee(e,7-e.getDay()),t=new Date(r.tm_year+1900,r.tm_mon,r.tm_mday);if(m(n,t)<0){var o=Zr($r(t.getFullYear())?Qr:re,t.getMonth()-1)-31,i=31-n.getDate()+o+t.getDate();return d(Math.ceil(i/7),2)}return 0===m(n,e)?\"01\":\"00\"},\"%V\":function(r){var e,n=new Date(r.tm_year+1900,0,4),t=new Date(r.tm_year+1901,0,4),o=p(n),i=p(t),a=ee(new Date(r.tm_year+1900,0,1),r.tm_yday);return m(a,o)<0?\"53\":m(i,a)<=0?\"01\":(e=o.getFullYear()<r.tm_year+1900?r.tm_yday+32-o.getDate():r.tm_yday+1-o.getDate(),d(Math.ceil(e/7),2))},\"%w\":function(r){return r.tm_wday},\"%W\":function(r){var e=new Date(r.tm_year,0,1),n=1===e.getDay()?e:ee(e,0===e.getDay()?1:7-e.getDay()+1),t=new Date(r.tm_year+1900,r.tm_mon,r.tm_mday);if(m(n,t)<0){var o=Zr($r(t.getFullYear())?Qr:re,t.getMonth()-1)-31,i=31-n.getDate()+o+t.getDate();return d(Math.ceil(i/7),2)}return 0===m(n,e)?\"01\":\"00\"},\"%y\":function(r){return(r.tm_year+1900).toString().substring(2)},\"%Y\":function(r){return r.tm_year+1900},\"%z\":function(r){var e=r.tm_gmtoff,n=e>=0;return e=(e=Math.abs(e)/60)/60*100+e%60,(n?\"+\":\"-\")+String(\"0000\"+e).slice(-4)},\"%Z\":function(r){return r.tm_zone},\"%%\":function(){return\"%\"}};for(var s in v)a.includes(s)&&(a=a.replace(new RegExp(s,\"g\"),v[s](i)));var w=ie(a,!1);return w.length>e?0:(I(w,r),w.length-1)}(r,e,n,t)}},se=(function(){var r={a:ue};function n(r,n){var t,o=r.exports;e.asm=o,U((h=e.asm.C).buffer),L=e.asm.E,t=e.asm.D,Y.unshift(t),K()}function o(r){n(r.instance)}function i(e){return(p||\"function\"!==typeof fetch?Promise.resolve().then((function(){return tr(Z)})):fetch(Z,{credentials:\"same-origin\"}).then((function(r){if(!r.ok)throw\"failed to load wasm binary file at '\"+Z+\"'\";return r.arrayBuffer()})).catch((function(){return tr(Z)}))).then((function(e){return WebAssembly.instantiate(e,r)})).then((function(r){return r})).then(e,(function(r){m(\"failed to asynchronously prepare wasm: \"+r),$(r)}))}if(J(),e.instantiateWasm)try{return e.instantiateWasm(r,n)}catch(a){return m(\"Module.instantiateWasm callback failed with error: \"+a),!1}(p||\"function\"!==typeof WebAssembly.instantiateStreaming||nr(Z)||\"function\"!==typeof fetch?i(o):fetch(Z,{credentials:\"same-origin\"}).then((function(e){return WebAssembly.instantiateStreaming(e,r).then(o,(function(r){return m(\"wasm streaming compile failed: \"+r),m(\"falling back to ArrayBuffer instantiation\"),i(o)}))}))).catch(t)}(),e.___wasm_call_ctors=function(){return(e.___wasm_call_ctors=e.asm.D).apply(null,arguments)},e.___getTypeName=function(){return(se=e.___getTypeName=e.asm.F).apply(null,arguments)}),ce=(e.___embind_register_native_and_builtin_types=function(){return(e.___embind_register_native_and_builtin_types=e.asm.G).apply(null,arguments)},e._malloc=function(){return(ce=e._malloc=e.asm.H).apply(null,arguments)}),fe=e.stackSave=function(){return(fe=e.stackSave=e.asm.I).apply(null,arguments)},le=e.stackRestore=function(){return(le=e.stackRestore=e.asm.J).apply(null,arguments)},de=e.stackAlloc=function(){return(de=e.stackAlloc=e.asm.K).apply(null,arguments)},me=e._free=function(){return(me=e._free=e.asm.L).apply(null,arguments)};e.dynCall_jiji=function(){return(e.dynCall_jiji=e.asm.M).apply(null,arguments)},e.dynCall_iiiiij=function(){return(e.dynCall_iiiiij=e.asm.N).apply(null,arguments)},e.dynCall_iiiiijj=function(){return(e.dynCall_iiiiijj=e.asm.O).apply(null,arguments)},e.dynCall_iiiiiijj=function(){return(e.dynCall_iiiiiijj=e.asm.P).apply(null,arguments)},e.dynCall_viijii=function(){return(e.dynCall_viijii=e.asm.Q).apply(null,arguments)};function pe(r){function t(){ae||(ae=!0,e.calledRun=!0,v||(!0,e.noFSInit||Jr.init.initialized||Jr.init(),Jr.ignorePermissions=!1,Xr.init(),or(Y),n(e),e.onRuntimeInitialized&&e.onRuntimeInitialized(),function(){if(e.postRun)for(\"function\"==typeof e.postRun&&(e.postRun=[e.postRun]);e.postRun.length;)r=e.postRun.shift(),q.unshift(r);var r;or(q)}()))}r=r||c,V>0||(!function(){if(e.preRun)for(\"function\"==typeof e.preRun&&(e.preRun=[e.preRun]);e.preRun.length;)r=e.preRun.shift(),H.unshift(r);var r;or(H)}(),V>0||(e.setStatus?(e.setStatus(\"Running...\"),setTimeout((function(){setTimeout((function(){e.setStatus(\"\")}),1),t()}),1)):t()))}if(e.ccall=function(r,n,t,o,i){var a={string:function(r){var e=0;if(null!==r&&void 0!==r&&0!==r){var n=1+(r.length<<2);k(r,e=de(n),n)}return e},array:function(r){var e=de(r.length);return I(r,e),e}},u=function(r){var n=e[\"_\"+r];return w(n,\"Cannot call unknown function \"+r+\", make sure it is exported\"),n}(r),s=[],c=0;if(o)for(var f=0;f<o.length;f++){var l=a[t[f]];l?(0===c&&(c=fe()),s[f]=l(o[f])):s[f]=o[f]}var d=u.apply(null,s);return d=function(r){return 0!==c&&le(c),function(r){return\"string\"===n?E(r):\"boolean\"===n?Boolean(r):r}(r)}(d)},G=function r(){ae||pe(),ae||(G=r)},e.run=pe,e.preInit)for(\"function\"==typeof e.preInit&&(e.preInit=[e.preInit]);e.preInit.length>0;)e.preInit.pop()();return pe(),e.ready}}();e.default=t}}]);","name":"static/js/3.4f41e3b1.chunk.js","map":{"version":3,"names":["window","push","module","__webpack_exports__","__webpack_require__","r","Module","_scriptDir","document","currentScript","src","undefined","readyPromiseResolve","readyPromiseReject","Promise","resolve","reject","key","moduleOverrides","hasOwnProperty","read_","readAsync","readBinary","arguments_","thisProgram","scriptDirectory","indexOf","substr","replace","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","onload","onerror","responseType","status","response","out","console","log","bind","err","warn","wasmBinary","wasmMemory","WebAssembly","abort","ABORT","assert","condition","text","UTF8Decoder","TextDecoder","UTF8ArrayToString","heap","idx","maxBytesToRead","endIdx","endPtr","subarray","decode","str","u0","u1","u2","String","fromCharCode","ch","UTF8ToString","ptr","HEAPU8","stringToUTF8Array","outIdx","maxBytesToWrite","startIdx","i","length","u","charCodeAt","stringToUTF8","outPtr","lengthBytesUTF8","len","buffer","HEAP8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","lengthBytesUTF32","writeArrayToMemory","array","set","updateGlobalBufferAndViews","buf","Int8Array","Int16Array","Int32Array","Uint8Array","Uint16Array","Uint32Array","Float32Array","Float64Array","wasmTable","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","runDependencies","runDependencyWatcher","dependenciesFulfilled","addRunDependency","id","removeRunDependency","clearInterval","callback","what","e","RuntimeError","wasmBinaryFile","path","tempDouble","tempI64","isDataURI","filename","startsWith","getBinary","file","callRuntimeCallbacks","callbacks","shift","func","arg","getWasmTableEntry","wasmTableMirror","funcPtr","get","ExceptionInfo","excPtr","this","set_type","type","get_type","set_destructor","destructor","get_destructor","set_refcount","refcount","set_caught","caught","get_caught","set_rethrown","rethrown","get_rethrown","init","add_ref","value","release_ref","prev","tupleRegistrations","runDestructors","destructors","pop","del","simpleReadValueFromPointer","pointer","awaitingDependencies","registeredTypes","typeDependencies","makeLegalFunctionName","name","f","createNamedFunction","body","Function","extendError","baseErrorType","errorName","errorClass","message","stack","Error","toString","prototype","Object","create","constructor","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters","myTypeConverters","registerType","forEach","Array","unregisteredTypes","registered","dt","getShiftFromSize","size","TypeError","embind_charCodes","readLatin1String","ret","c","BindingError","throwBindingError","rawType","registeredInstance","options","ignoreDuplicateRegistrations","cb","emval_free_list","emval_handle_array","count_emval_handles","count","get_first_emval","Emval","handle","exposePublicSymbol","numArguments","overloadTable","proto","methodName","humanName","prevFunc","arguments","apply","argCount","ensureOverloadTable","enumReadValueFromPointer","signed","getTypeName","___getTypeName","rv","_free","_embind_repr","v","t","floatReadValueFromPointer","craftInvokerFunction","argTypes","classType","cppInvokerFunc","cppTargetFunc","isClassMethodFunc","needsDestructorStack","destructorFunction","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","argumentList","dummy","obj","new_","dynCall","sig","args","includes","concat","call","dynCallLegacy","embind__requireFunction","signature","rawFunction","fp","argCache","getDynCaller","UnboundTypeError","integerReadValueFromPointer","emscripten_realloc_buffer","grow","byteLength","ENV","getEnvStrings","strings","env","USER","LOGNAME","PATH","PWD","HOME","LANG","navigator","languages","_","x","splitPath","exec","slice","normalizeArray","parts","allowAboveRoot","up","last","splice","unshift","normalize","isAbsolute","charAt","trailingSlash","split","filter","p","join","dirname","result","root","dir","basename","lastSlash","extname","paths","join2","l","PATH_FS","resolvedPath","resolvedAbsolute","FS","cwd","relative","from","to","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","TTY","ttys","shutdown","register","dev","ops","input","output","registerDevice","stream_ops","stream","tty","node","rdev","ErrnoError","seekable","close","flush","read","offset","pos","get_char","bytesRead","timestamp","Date","now","write","put_char","default_tty_ops","prompt","readline","intArrayFromString","val","default_tty1_ops","MEMFS","ops_table","mount","_mount","createNode","parent","mode","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","allocate","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","max","oldContents","resizeFileStorage","newSize","attr","ino","nlink","uid","gid","atime","mtime","ctime","blksize","blocks","ceil","genericErrors","old_node","new_dir","new_name","new_node","lookupNode","entries","newname","oldpath","position","canOwn","whence","address","prot","flags","allocated","byteOffset","mmapFlags","mounts","devices","streams","nextInode","nameTable","currentPath","initialized","ignorePermissions","filesystems","syncFSRequests","lookupPath","opts","defaults","follow_mount","recurse_count","current","current_path","islast","isMountpoint","mounted","follow","getPath","isRoot","mountpoint","hashName","parentid","hash","hashAddNode","name_next","hashRemoveNode","errCode","mayLookup","nodeName","FSNode","destroyNode","isSocket","flagModes","w","a","modeStringToFlags","flagsToPermissionString","flag","perms","nodePermissions","mayCreate","mayDelete","isdir","errno","mayOpen","MAX_OPEN_FDS","nextfd","fd_start","fd_end","fd","getStream","createStream","FSStream","object","isRead","isWrite","isAppend","newStream","closeStream","device","getDevice","major","minor","makedev","ma","mi","getMounts","check","m","syncfs","populate","completed","doCallback","done","errored","pseudo","mountRoot","unmount","keys","next","mkdir","mkdirTree","dirs","d","mkdev","newpath","old_path","new_path","old_dir","old_dirname","new_dirname","old_name","stat","dontFollow","lstat","chmod","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","utime","created","ungotten","error","readFiles","isClosed","getdents","seeking","bytesWritten","munmap","ioctl","cmd","readFile","encoding","writeFile","data","actualNumBytes","ArrayBuffer","isView","chdir","createDefaultDirectories","createDefaultDevices","random_device","crypto","randomBuffer","getRandomValues","getRandomDevice","createDevice","createSpecialDirectories","proc_self","createStandardStreams","ensureErrnoError","setErrno","code","staticInit","quit","fflush","getMode","canRead","canWrite","findObject","dontResolveLastLink","analyzePath","exists","parentExists","parentPath","parentObject","createPath","reverse","part","createFile","properties","createDataFile","forceLoadFile","isDevice","isFolder","createLazyFile","LazyUint8Array","lengthKnown","chunks","chunkOffset","chunkSize","chunkNum","getter","setDataGetter","cacheLength","header","datalength","Number","getResponseHeader","hasByteServing","usesGzip","lazyArray","setRequestHeader","overrideMimeType","doXHR","_length","_chunkSize","defineProperties","fn","createPreloadedFile","dontCreateFile","preFinish","Browser","fullname","processData","byteArray","finish","handled","plugin","noRunDep","dep","arrayBuffer","event","asyncLoad","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","DB_NAME","location","pathname","DB_VERSION","DB_STORE_NAME","saveFilesToDB","openRequest","onupgradeneeded","createObjectStore","onsuccess","transaction","files","objectStore","ok","fail","total","putRequest","put","loadFilesFromDB","db","getRequest","SYSCALLS","mappings","DEFAULT_POLLMASK","calculateAt","dirfd","allowEmpty","dirstream","doStat","abs","floor","getTime","doMsync","addr","doMkdir","doMknod","doReadlink","bufsize","endChar","doAccess","amode","doDup","suggestFD","suggest","doReadv","iov","iovcnt","curr","doWritev","varargs","getStr","getStreamFromFD","get64","low","high","__isLeapYear","year","__arraySum","index","sum","__MONTH_DAYS_LEAP","__MONTH_DAYS_REGULAR","__addDays","date","days","newDate","leap","getFullYear","currentMonth","getMonth","daysInCurrentMonth","getDate","setDate","setMonth","setFullYear","codes","embind_init_charCodes","readMode","writeMode","stringy","dontAddNull","u8array","numBytesWritten","calledRun","asmLibraryArg","_malloc","b","o","rawTupleType","reg","elements","elementsLength","elementTypes","map","elt","getterReturnType","setterArgumentType","rawConstructor","rawDestructor","getterContext","setter","setterContext","fromWireType","toWireType","argPackAdvance","readValueFromPointer","primitiveType","minRange","maxRange","trueValue","falseValue","wt","B","__emval_decref","isSigned","ctor","values","g","rawEnumType","enumValue","enumType","impl","requireRegisteredType","Enum","Value","k","rawArgTypesAddr","rawInvoker","firstElement","heap32VectorToArray","types","unboundTypes","seen","visit","throwUnboundTypeError","invokerArgsArray","replacePublicSymbol","bitshift","isUnsignedType","dataTypeIndex","TA","decodeMemoryView","stdStringIsUTF8","decodeStartPtr","currentBytePtr","stringSegment","valueIsOfTypeString","Uint8ClampedArray","charCode","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","HEAP","constructorSignature","destructorSignature","getterSignature","setterSignature","n","isVoid","j","dest","num","copyWithin","h","requestedSize","multiple","oldSize","maxHeapSize","cutDown","overGrownHeapSize","__environ","environ_buf","bufSize","string","writeAsciiToMemory","y","penviron_count","penviron_buf_size","A","pnum","q","offset_low","offset_high","newOffset","DOUBLE_LIMIT","z","s","maxsize","format","tm","tm_zone","tm_sec","tm_min","tm_hour","tm_mday","tm_mon","tm_year","tm_wday","tm_yday","tm_isdst","tm_gmtoff","pattern","EXPANSION_RULES_1","rule","RegExp","WEEKDAYS","MONTHS","leadingSomething","digits","character","leadingNulls","compareByDay","date1","date2","sgn","compare","getFirstWeekStartDate","janFourth","getDay","getWeekBasedYear","thisDate","janFourthThisYear","janFourthNextYear","firstWeekStartThisYear","firstWeekStartNextYear","EXPANSION_RULES_2","substring","twelveHour","janFirst","firstSunday","endDate","februaryFirstUntilEndMonth","daysDifference","firstMonday","off","ahead","bytes","_strftime","info","receiveInstance","instance","exports","receiveInstantiationResult","instantiateArrayBuffer","receiver","fetch","then","credentials","catch","binary","instantiate","reason","instantiateStreaming","createWasm","stackSave","stackRestore","stackAlloc","run","doRun","postRun","preRun","setTimeout","ident","returnType","toC","getCFunc","cArgs","converter","Boolean","convertReturnValue","onDone","runCaller","ready"],"sources":["static/js/3.4f41e3b1.chunk.js"],"mappings":"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"},"input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[3],{\n\n/***/ 200:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\nvar Module = function () {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  return function (Module) {\n    Module = Module || {};\n    var Module = typeof Module !== \"undefined\" ? Module : {};\n    var readyPromiseResolve, readyPromiseReject;\n    Module[\"ready\"] = new Promise(function (resolve, reject) {\n      readyPromiseResolve = resolve;\n      readyPromiseReject = reject;\n    });\n    var moduleOverrides = {};\n    var key;\n    for (key in Module) {\n      if (Module.hasOwnProperty(key)) {\n        moduleOverrides[key] = Module[key];\n      }\n    }\n    var arguments_ = [];\n    var thisProgram = \"./this.program\";\n    var quit_ = function quit_(status, toThrow) {\n      throw toThrow;\n    };\n    var ENVIRONMENT_IS_WEB = true;\n    var ENVIRONMENT_IS_WORKER = false;\n    var scriptDirectory = \"\";\n    function locateFile(path) {\n      if (Module[\"locateFile\"]) {\n        return Module[\"locateFile\"](path, scriptDirectory);\n      }\n      return scriptDirectory + path;\n    }\n    var read_, readAsync, readBinary, setWindowTitle;\n    if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n      if (ENVIRONMENT_IS_WORKER) {\n        scriptDirectory = self.location.href;\n      } else if (typeof document !== \"undefined\" && document.currentScript) {\n        scriptDirectory = document.currentScript.src;\n      }\n      if (_scriptDir) {\n        scriptDirectory = _scriptDir;\n      }\n      if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n        scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf(\"/\") + 1);\n      } else {\n        scriptDirectory = \"\";\n      }\n      {\n        read_ = function read_(url) {\n          var xhr = new XMLHttpRequest();\n          xhr.open(\"GET\", url, false);\n          xhr.send(null);\n          return xhr.responseText;\n        };\n        if (ENVIRONMENT_IS_WORKER) {\n          readBinary = function readBinary(url) {\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"GET\", url, false);\n            xhr.responseType = \"arraybuffer\";\n            xhr.send(null);\n            return new Uint8Array(xhr.response);\n          };\n        }\n        readAsync = function readAsync(url, onload, onerror) {\n          var xhr = new XMLHttpRequest();\n          xhr.open(\"GET\", url, true);\n          xhr.responseType = \"arraybuffer\";\n          xhr.onload = function () {\n            if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n              onload(xhr.response);\n              return;\n            }\n            onerror();\n          };\n          xhr.onerror = onerror;\n          xhr.send(null);\n        };\n      }\n      setWindowTitle = function setWindowTitle(title) {\n        document.title = title;\n      };\n    } else {}\n    var out = Module[\"print\"] || console.log.bind(console);\n    var err = Module[\"printErr\"] || console.warn.bind(console);\n    for (key in moduleOverrides) {\n      if (moduleOverrides.hasOwnProperty(key)) {\n        Module[key] = moduleOverrides[key];\n      }\n    }\n    moduleOverrides = null;\n    if (Module[\"arguments\"]) arguments_ = Module[\"arguments\"];\n    if (Module[\"thisProgram\"]) thisProgram = Module[\"thisProgram\"];\n    if (Module[\"quit\"]) quit_ = Module[\"quit\"];\n    var tempRet0 = 0;\n    var setTempRet0 = function setTempRet0(value) {\n      tempRet0 = value;\n    };\n    var wasmBinary;\n    if (Module[\"wasmBinary\"]) wasmBinary = Module[\"wasmBinary\"];\n    var noExitRuntime = Module[\"noExitRuntime\"] || true;\n    if (typeof WebAssembly !== \"object\") {\n      abort(\"no native wasm support detected\");\n    }\n    var wasmMemory;\n    var ABORT = false;\n    var EXITSTATUS;\n    function assert(condition, text) {\n      if (!condition) {\n        abort(\"Assertion failed: \" + text);\n      }\n    }\n    function getCFunc(ident) {\n      var func = Module[\"_\" + ident];\n      assert(func, \"Cannot call unknown function \" + ident + \", make sure it is exported\");\n      return func;\n    }\n    function ccall(ident, returnType, argTypes, args, opts) {\n      var toC = {\n        \"string\": function string(str) {\n          var ret = 0;\n          if (str !== null && str !== undefined && str !== 0) {\n            var len = (str.length << 2) + 1;\n            ret = stackAlloc(len);\n            stringToUTF8(str, ret, len);\n          }\n          return ret;\n        },\n        \"array\": function array(arr) {\n          var ret = stackAlloc(arr.length);\n          writeArrayToMemory(arr, ret);\n          return ret;\n        }\n      };\n      function convertReturnValue(ret) {\n        if (returnType === \"string\") return UTF8ToString(ret);\n        if (returnType === \"boolean\") return Boolean(ret);\n        return ret;\n      }\n      var func = getCFunc(ident);\n      var cArgs = [];\n      var stack = 0;\n      if (args) {\n        for (var i = 0; i < args.length; i++) {\n          var converter = toC[argTypes[i]];\n          if (converter) {\n            if (stack === 0) stack = stackSave();\n            cArgs[i] = converter(args[i]);\n          } else {\n            cArgs[i] = args[i];\n          }\n        }\n      }\n      var ret = func.apply(null, cArgs);\n      function onDone(ret) {\n        if (stack !== 0) stackRestore(stack);\n        return convertReturnValue(ret);\n      }\n      ret = onDone(ret);\n      return ret;\n    }\n    var UTF8Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\n    function UTF8ArrayToString(heap, idx, maxBytesToRead) {\n      var endIdx = idx + maxBytesToRead;\n      var endPtr = idx;\n      while (heap[endPtr] && !(endPtr >= endIdx)) {\n        ++endPtr;\n      }\n      if (endPtr - idx > 16 && heap.subarray && UTF8Decoder) {\n        return UTF8Decoder.decode(heap.subarray(idx, endPtr));\n      } else {\n        var str = \"\";\n        while (idx < endPtr) {\n          var u0 = heap[idx++];\n          if (!(u0 & 128)) {\n            str += String.fromCharCode(u0);\n            continue;\n          }\n          var u1 = heap[idx++] & 63;\n          if ((u0 & 224) == 192) {\n            str += String.fromCharCode((u0 & 31) << 6 | u1);\n            continue;\n          }\n          var u2 = heap[idx++] & 63;\n          if ((u0 & 240) == 224) {\n            u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n          } else {\n            u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heap[idx++] & 63;\n          }\n          if (u0 < 65536) {\n            str += String.fromCharCode(u0);\n          } else {\n            var ch = u0 - 65536;\n            str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n          }\n        }\n      }\n      return str;\n    }\n    function UTF8ToString(ptr, maxBytesToRead) {\n      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\n    }\n    function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n      if (!(maxBytesToWrite > 0)) return 0;\n      var startIdx = outIdx;\n      var endIdx = outIdx + maxBytesToWrite - 1;\n      for (var i = 0; i < str.length; ++i) {\n        var u = str.charCodeAt(i);\n        if (u >= 55296 && u <= 57343) {\n          var u1 = str.charCodeAt(++i);\n          u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n        }\n        if (u <= 127) {\n          if (outIdx >= endIdx) break;\n          heap[outIdx++] = u;\n        } else if (u <= 2047) {\n          if (outIdx + 1 >= endIdx) break;\n          heap[outIdx++] = 192 | u >> 6;\n          heap[outIdx++] = 128 | u & 63;\n        } else if (u <= 65535) {\n          if (outIdx + 2 >= endIdx) break;\n          heap[outIdx++] = 224 | u >> 12;\n          heap[outIdx++] = 128 | u >> 6 & 63;\n          heap[outIdx++] = 128 | u & 63;\n        } else {\n          if (outIdx + 3 >= endIdx) break;\n          heap[outIdx++] = 240 | u >> 18;\n          heap[outIdx++] = 128 | u >> 12 & 63;\n          heap[outIdx++] = 128 | u >> 6 & 63;\n          heap[outIdx++] = 128 | u & 63;\n        }\n      }\n      heap[outIdx] = 0;\n      return outIdx - startIdx;\n    }\n    function stringToUTF8(str, outPtr, maxBytesToWrite) {\n      return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n    }\n    function lengthBytesUTF8(str) {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        var u = str.charCodeAt(i);\n        if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;\n        if (u <= 127) ++len;else if (u <= 2047) len += 2;else if (u <= 65535) len += 3;else len += 4;\n      }\n      return len;\n    }\n    var UTF16Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf-16le\") : undefined;\n    function UTF16ToString(ptr, maxBytesToRead) {\n      var endPtr = ptr;\n      var idx = endPtr >> 1;\n      var maxIdx = idx + maxBytesToRead / 2;\n      while (!(idx >= maxIdx) && HEAPU16[idx]) {\n        ++idx;\n      }\n      endPtr = idx << 1;\n      if (endPtr - ptr > 32 && UTF16Decoder) {\n        return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\n      } else {\n        var str = \"\";\n        for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\n          var codeUnit = HEAP16[ptr + i * 2 >> 1];\n          if (codeUnit == 0) break;\n          str += String.fromCharCode(codeUnit);\n        }\n        return str;\n      }\n    }\n    function stringToUTF16(str, outPtr, maxBytesToWrite) {\n      if (maxBytesToWrite === undefined) {\n        maxBytesToWrite = 2147483647;\n      }\n      if (maxBytesToWrite < 2) return 0;\n      maxBytesToWrite -= 2;\n      var startPtr = outPtr;\n      var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\n      for (var i = 0; i < numCharsToWrite; ++i) {\n        var codeUnit = str.charCodeAt(i);\n        HEAP16[outPtr >> 1] = codeUnit;\n        outPtr += 2;\n      }\n      HEAP16[outPtr >> 1] = 0;\n      return outPtr - startPtr;\n    }\n    function lengthBytesUTF16(str) {\n      return str.length * 2;\n    }\n    function UTF32ToString(ptr, maxBytesToRead) {\n      var i = 0;\n      var str = \"\";\n      while (!(i >= maxBytesToRead / 4)) {\n        var utf32 = HEAP32[ptr + i * 4 >> 2];\n        if (utf32 == 0) break;\n        ++i;\n        if (utf32 >= 65536) {\n          var ch = utf32 - 65536;\n          str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n        } else {\n          str += String.fromCharCode(utf32);\n        }\n      }\n      return str;\n    }\n    function stringToUTF32(str, outPtr, maxBytesToWrite) {\n      if (maxBytesToWrite === undefined) {\n        maxBytesToWrite = 2147483647;\n      }\n      if (maxBytesToWrite < 4) return 0;\n      var startPtr = outPtr;\n      var endPtr = startPtr + maxBytesToWrite - 4;\n      for (var i = 0; i < str.length; ++i) {\n        var codeUnit = str.charCodeAt(i);\n        if (codeUnit >= 55296 && codeUnit <= 57343) {\n          var trailSurrogate = str.charCodeAt(++i);\n          codeUnit = 65536 + ((codeUnit & 1023) << 10) | trailSurrogate & 1023;\n        }\n        HEAP32[outPtr >> 2] = codeUnit;\n        outPtr += 4;\n        if (outPtr + 4 > endPtr) break;\n      }\n      HEAP32[outPtr >> 2] = 0;\n      return outPtr - startPtr;\n    }\n    function lengthBytesUTF32(str) {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        var codeUnit = str.charCodeAt(i);\n        if (codeUnit >= 55296 && codeUnit <= 57343) ++i;\n        len += 4;\n      }\n      return len;\n    }\n    function writeArrayToMemory(array, buffer) {\n      HEAP8.set(array, buffer);\n    }\n    function writeAsciiToMemory(str, buffer, dontAddNull) {\n      for (var i = 0; i < str.length; ++i) {\n        HEAP8[buffer++ >> 0] = str.charCodeAt(i);\n      }\n      if (!dontAddNull) HEAP8[buffer >> 0] = 0;\n    }\n    function alignUp(x, multiple) {\n      if (x % multiple > 0) {\n        x += multiple - x % multiple;\n      }\n      return x;\n    }\n    var buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n    function updateGlobalBufferAndViews(buf) {\n      buffer = buf;\n      Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\n      Module[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\n      Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\n      Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\n      Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buf);\n      Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buf);\n      Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buf);\n      Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf);\n    }\n    var INITIAL_MEMORY = Module[\"INITIAL_MEMORY\"] || 16777216;\n    var wasmTable;\n    var __ATPRERUN__ = [];\n    var __ATINIT__ = [];\n    var __ATPOSTRUN__ = [];\n    var runtimeInitialized = false;\n    function preRun() {\n      if (Module[\"preRun\"]) {\n        if (typeof Module[\"preRun\"] == \"function\") Module[\"preRun\"] = [Module[\"preRun\"]];\n        while (Module[\"preRun\"].length) {\n          addOnPreRun(Module[\"preRun\"].shift());\n        }\n      }\n      callRuntimeCallbacks(__ATPRERUN__);\n    }\n    function initRuntime() {\n      runtimeInitialized = true;\n      if (!Module[\"noFSInit\"] && !FS.init.initialized) FS.init();\n      FS.ignorePermissions = false;\n      TTY.init();\n      callRuntimeCallbacks(__ATINIT__);\n    }\n    function postRun() {\n      if (Module[\"postRun\"]) {\n        if (typeof Module[\"postRun\"] == \"function\") Module[\"postRun\"] = [Module[\"postRun\"]];\n        while (Module[\"postRun\"].length) {\n          addOnPostRun(Module[\"postRun\"].shift());\n        }\n      }\n      callRuntimeCallbacks(__ATPOSTRUN__);\n    }\n    function addOnPreRun(cb) {\n      __ATPRERUN__.unshift(cb);\n    }\n    function addOnInit(cb) {\n      __ATINIT__.unshift(cb);\n    }\n    function addOnPostRun(cb) {\n      __ATPOSTRUN__.unshift(cb);\n    }\n    var runDependencies = 0;\n    var runDependencyWatcher = null;\n    var dependenciesFulfilled = null;\n    function getUniqueRunDependency(id) {\n      return id;\n    }\n    function addRunDependency(id) {\n      runDependencies++;\n      if (Module[\"monitorRunDependencies\"]) {\n        Module[\"monitorRunDependencies\"](runDependencies);\n      }\n    }\n    function removeRunDependency(id) {\n      runDependencies--;\n      if (Module[\"monitorRunDependencies\"]) {\n        Module[\"monitorRunDependencies\"](runDependencies);\n      }\n      if (runDependencies == 0) {\n        if (runDependencyWatcher !== null) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n        }\n        if (dependenciesFulfilled) {\n          var callback = dependenciesFulfilled;\n          dependenciesFulfilled = null;\n          callback();\n        }\n      }\n    }\n    Module[\"preloadedImages\"] = {};\n    Module[\"preloadedAudios\"] = {};\n    function abort(what) {\n      {\n        if (Module[\"onAbort\"]) {\n          Module[\"onAbort\"](what);\n        }\n      }\n      what = \"Aborted(\" + what + \")\";\n      err(what);\n      ABORT = true;\n      EXITSTATUS = 1;\n      what += \". Build with -s ASSERTIONS=1 for more info.\";\n      var e = new WebAssembly.RuntimeError(what);\n      readyPromiseReject(e);\n      throw e;\n    }\n    var dataURIPrefix = \"data:application/octet-stream;base64,\";\n    function isDataURI(filename) {\n      return filename.startsWith(dataURIPrefix);\n    }\n    var wasmBinaryFile;\n    wasmBinaryFile = \"boolean.wasm\";\n    if (!isDataURI(wasmBinaryFile)) {\n      wasmBinaryFile = locateFile(wasmBinaryFile);\n    }\n    function getBinary(file) {\n      try {\n        if (file == wasmBinaryFile && wasmBinary) {\n          return new Uint8Array(wasmBinary);\n        }\n        if (readBinary) {\n          return readBinary(file);\n        } else {\n          throw \"both async and sync fetching of the wasm failed\";\n        }\n      } catch (err) {\n        abort(err);\n      }\n    }\n    function getBinaryPromise() {\n      if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n        if (typeof fetch === \"function\") {\n          return fetch(wasmBinaryFile, {\n            credentials: \"same-origin\"\n          }).then(function (response) {\n            if (!response[\"ok\"]) {\n              throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n            }\n            return response[\"arrayBuffer\"]();\n          }).catch(function () {\n            return getBinary(wasmBinaryFile);\n          });\n        }\n      }\n      return Promise.resolve().then(function () {\n        return getBinary(wasmBinaryFile);\n      });\n    }\n    function createWasm() {\n      var info = {\n        \"a\": asmLibraryArg\n      };\n      function receiveInstance(instance, module) {\n        var exports = instance.exports;\n        Module[\"asm\"] = exports;\n        wasmMemory = Module[\"asm\"][\"C\"];\n        updateGlobalBufferAndViews(wasmMemory.buffer);\n        wasmTable = Module[\"asm\"][\"E\"];\n        addOnInit(Module[\"asm\"][\"D\"]);\n        removeRunDependency(\"wasm-instantiate\");\n      }\n      addRunDependency(\"wasm-instantiate\");\n      function receiveInstantiationResult(result) {\n        receiveInstance(result[\"instance\"]);\n      }\n      function instantiateArrayBuffer(receiver) {\n        return getBinaryPromise().then(function (binary) {\n          return WebAssembly.instantiate(binary, info);\n        }).then(function (instance) {\n          return instance;\n        }).then(receiver, function (reason) {\n          err(\"failed to asynchronously prepare wasm: \" + reason);\n          abort(reason);\n        });\n      }\n      function instantiateAsync() {\n        if (!wasmBinary && typeof WebAssembly.instantiateStreaming === \"function\" && !isDataURI(wasmBinaryFile) && typeof fetch === \"function\") {\n          return fetch(wasmBinaryFile, {\n            credentials: \"same-origin\"\n          }).then(function (response) {\n            var result = WebAssembly.instantiateStreaming(response, info);\n            return result.then(receiveInstantiationResult, function (reason) {\n              err(\"wasm streaming compile failed: \" + reason);\n              err(\"falling back to ArrayBuffer instantiation\");\n              return instantiateArrayBuffer(receiveInstantiationResult);\n            });\n          });\n        } else {\n          return instantiateArrayBuffer(receiveInstantiationResult);\n        }\n      }\n      if (Module[\"instantiateWasm\"]) {\n        try {\n          var exports = Module[\"instantiateWasm\"](info, receiveInstance);\n          return exports;\n        } catch (e) {\n          err(\"Module.instantiateWasm callback failed with error: \" + e);\n          return false;\n        }\n      }\n      instantiateAsync().catch(readyPromiseReject);\n      return {};\n    }\n    var tempDouble;\n    var tempI64;\n    function callRuntimeCallbacks(callbacks) {\n      while (callbacks.length > 0) {\n        var callback = callbacks.shift();\n        if (typeof callback == \"function\") {\n          callback(Module);\n          continue;\n        }\n        var func = callback.func;\n        if (typeof func === \"number\") {\n          if (callback.arg === undefined) {\n            getWasmTableEntry(func)();\n          } else {\n            getWasmTableEntry(func)(callback.arg);\n          }\n        } else {\n          func(callback.arg === undefined ? null : callback.arg);\n        }\n      }\n    }\n    var wasmTableMirror = [];\n    function getWasmTableEntry(funcPtr) {\n      var func = wasmTableMirror[funcPtr];\n      if (!func) {\n        if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\n        wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\n      }\n      return func;\n    }\n    function ___cxa_allocate_exception(size) {\n      return _malloc(size + 16) + 16;\n    }\n    function ExceptionInfo(excPtr) {\n      this.excPtr = excPtr;\n      this.ptr = excPtr - 16;\n      this.set_type = function (type) {\n        HEAP32[this.ptr + 4 >> 2] = type;\n      };\n      this.get_type = function () {\n        return HEAP32[this.ptr + 4 >> 2];\n      };\n      this.set_destructor = function (destructor) {\n        HEAP32[this.ptr + 8 >> 2] = destructor;\n      };\n      this.get_destructor = function () {\n        return HEAP32[this.ptr + 8 >> 2];\n      };\n      this.set_refcount = function (refcount) {\n        HEAP32[this.ptr >> 2] = refcount;\n      };\n      this.set_caught = function (caught) {\n        caught = caught ? 1 : 0;\n        HEAP8[this.ptr + 12 >> 0] = caught;\n      };\n      this.get_caught = function () {\n        return HEAP8[this.ptr + 12 >> 0] != 0;\n      };\n      this.set_rethrown = function (rethrown) {\n        rethrown = rethrown ? 1 : 0;\n        HEAP8[this.ptr + 13 >> 0] = rethrown;\n      };\n      this.get_rethrown = function () {\n        return HEAP8[this.ptr + 13 >> 0] != 0;\n      };\n      this.init = function (type, destructor) {\n        this.set_type(type);\n        this.set_destructor(destructor);\n        this.set_refcount(0);\n        this.set_caught(false);\n        this.set_rethrown(false);\n      };\n      this.add_ref = function () {\n        var value = HEAP32[this.ptr >> 2];\n        HEAP32[this.ptr >> 2] = value + 1;\n      };\n      this.release_ref = function () {\n        var prev = HEAP32[this.ptr >> 2];\n        HEAP32[this.ptr >> 2] = prev - 1;\n        return prev === 1;\n      };\n    }\n    var exceptionLast = 0;\n    var uncaughtExceptionCount = 0;\n    function ___cxa_throw(ptr, type, destructor) {\n      var info = new ExceptionInfo(ptr);\n      info.init(type, destructor);\n      exceptionLast = ptr;\n      uncaughtExceptionCount++;\n      throw ptr;\n    }\n    var tupleRegistrations = {};\n    function runDestructors(destructors) {\n      while (destructors.length) {\n        var ptr = destructors.pop();\n        var del = destructors.pop();\n        del(ptr);\n      }\n    }\n    function simpleReadValueFromPointer(pointer) {\n      return this[\"fromWireType\"](HEAPU32[pointer >> 2]);\n    }\n    var awaitingDependencies = {};\n    var registeredTypes = {};\n    var typeDependencies = {};\n    var char_0 = 48;\n    var char_9 = 57;\n    function makeLegalFunctionName(name) {\n      if (undefined === name) {\n        return \"_unknown\";\n      }\n      name = name.replace(/[^a-zA-Z0-9_]/g, \"$\");\n      var f = name.charCodeAt(0);\n      if (f >= char_0 && f <= char_9) {\n        return \"_\" + name;\n      } else {\n        return name;\n      }\n    }\n    function createNamedFunction(name, body) {\n      name = makeLegalFunctionName(name);\n      return new Function(\"body\", \"return function \" + name + \"() {\\n\" + '    \"use strict\";' + \"    return body.apply(this, arguments);\\n\" + \"};\\n\")(body);\n    }\n    function extendError(baseErrorType, errorName) {\n      var errorClass = createNamedFunction(errorName, function (message) {\n        this.name = errorName;\n        this.message = message;\n        var stack = new Error(message).stack;\n        if (stack !== undefined) {\n          this.stack = this.toString() + \"\\n\" + stack.replace(/^Error(:[^\\n]*)?\\n/, \"\");\n        }\n      });\n      errorClass.prototype = Object.create(baseErrorType.prototype);\n      errorClass.prototype.constructor = errorClass;\n      errorClass.prototype.toString = function () {\n        if (this.message === undefined) {\n          return this.name;\n        } else {\n          return this.name + \": \" + this.message;\n        }\n      };\n      return errorClass;\n    }\n    var InternalError = undefined;\n    function throwInternalError(message) {\n      throw new InternalError(message);\n    }\n    function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {\n      myTypes.forEach(function (type) {\n        typeDependencies[type] = dependentTypes;\n      });\n      function onComplete(typeConverters) {\n        var myTypeConverters = getTypeConverters(typeConverters);\n        if (myTypeConverters.length !== myTypes.length) {\n          throwInternalError(\"Mismatched type converter count\");\n        }\n        for (var i = 0; i < myTypes.length; ++i) {\n          registerType(myTypes[i], myTypeConverters[i]);\n        }\n      }\n      var typeConverters = new Array(dependentTypes.length);\n      var unregisteredTypes = [];\n      var registered = 0;\n      dependentTypes.forEach(function (dt, i) {\n        if (registeredTypes.hasOwnProperty(dt)) {\n          typeConverters[i] = registeredTypes[dt];\n        } else {\n          unregisteredTypes.push(dt);\n          if (!awaitingDependencies.hasOwnProperty(dt)) {\n            awaitingDependencies[dt] = [];\n          }\n          awaitingDependencies[dt].push(function () {\n            typeConverters[i] = registeredTypes[dt];\n            ++registered;\n            if (registered === unregisteredTypes.length) {\n              onComplete(typeConverters);\n            }\n          });\n        }\n      });\n      if (0 === unregisteredTypes.length) {\n        onComplete(typeConverters);\n      }\n    }\n    function __embind_finalize_value_array(rawTupleType) {\n      var reg = tupleRegistrations[rawTupleType];\n      delete tupleRegistrations[rawTupleType];\n      var elements = reg.elements;\n      var elementsLength = elements.length;\n      var elementTypes = elements.map(function (elt) {\n        return elt.getterReturnType;\n      }).concat(elements.map(function (elt) {\n        return elt.setterArgumentType;\n      }));\n      var rawConstructor = reg.rawConstructor;\n      var rawDestructor = reg.rawDestructor;\n      whenDependentTypesAreResolved([rawTupleType], elementTypes, function (elementTypes) {\n        elements.forEach(function (elt, i) {\n          var getterReturnType = elementTypes[i];\n          var getter = elt.getter;\n          var getterContext = elt.getterContext;\n          var setterArgumentType = elementTypes[i + elementsLength];\n          var setter = elt.setter;\n          var setterContext = elt.setterContext;\n          elt.read = function (ptr) {\n            return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\n          };\n          elt.write = function (ptr, o) {\n            var destructors = [];\n            setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, o));\n            runDestructors(destructors);\n          };\n        });\n        return [{\n          name: reg.name,\n          \"fromWireType\": function fromWireType(ptr) {\n            var rv = new Array(elementsLength);\n            for (var i = 0; i < elementsLength; ++i) {\n              rv[i] = elements[i].read(ptr);\n            }\n            rawDestructor(ptr);\n            return rv;\n          },\n          \"toWireType\": function toWireType(destructors, o) {\n            if (elementsLength !== o.length) {\n              throw new TypeError(\"Incorrect number of tuple elements for \" + reg.name + \": expected=\" + elementsLength + \", actual=\" + o.length);\n            }\n            var ptr = rawConstructor();\n            for (var i = 0; i < elementsLength; ++i) {\n              elements[i].write(ptr, o[i]);\n            }\n            if (destructors !== null) {\n              destructors.push(rawDestructor, ptr);\n            }\n            return ptr;\n          },\n          \"argPackAdvance\": 8,\n          \"readValueFromPointer\": simpleReadValueFromPointer,\n          destructorFunction: rawDestructor\n        }];\n      });\n    }\n    function __embind_register_bigint(primitiveType, name, size, minRange, maxRange) {}\n    function getShiftFromSize(size) {\n      switch (size) {\n        case 1:\n          return 0;\n        case 2:\n          return 1;\n        case 4:\n          return 2;\n        case 8:\n          return 3;\n        default:\n          throw new TypeError(\"Unknown type size: \" + size);\n      }\n    }\n    function embind_init_charCodes() {\n      var codes = new Array(256);\n      for (var i = 0; i < 256; ++i) {\n        codes[i] = String.fromCharCode(i);\n      }\n      embind_charCodes = codes;\n    }\n    var embind_charCodes = undefined;\n    function readLatin1String(ptr) {\n      var ret = \"\";\n      var c = ptr;\n      while (HEAPU8[c]) {\n        ret += embind_charCodes[HEAPU8[c++]];\n      }\n      return ret;\n    }\n    var BindingError = undefined;\n    function throwBindingError(message) {\n      throw new BindingError(message);\n    }\n    function registerType(rawType, registeredInstance, options) {\n      options = options || {};\n      if (!(\"argPackAdvance\" in registeredInstance)) {\n        throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");\n      }\n      var name = registeredInstance.name;\n      if (!rawType) {\n        throwBindingError('type \"' + name + '\" must have a positive integer typeid pointer');\n      }\n      if (registeredTypes.hasOwnProperty(rawType)) {\n        if (options.ignoreDuplicateRegistrations) {\n          return;\n        } else {\n          throwBindingError(\"Cannot register type '\" + name + \"' twice\");\n        }\n      }\n      registeredTypes[rawType] = registeredInstance;\n      delete typeDependencies[rawType];\n      if (awaitingDependencies.hasOwnProperty(rawType)) {\n        var callbacks = awaitingDependencies[rawType];\n        delete awaitingDependencies[rawType];\n        callbacks.forEach(function (cb) {\n          cb();\n        });\n      }\n    }\n    function __embind_register_bool(rawType, name, size, trueValue, falseValue) {\n      var shift = getShiftFromSize(size);\n      name = readLatin1String(name);\n      registerType(rawType, {\n        name: name,\n        \"fromWireType\": function fromWireType(wt) {\n          return !!wt;\n        },\n        \"toWireType\": function toWireType(destructors, o) {\n          return o ? trueValue : falseValue;\n        },\n        \"argPackAdvance\": 8,\n        \"readValueFromPointer\": function readValueFromPointer(pointer) {\n          var heap;\n          if (size === 1) {\n            heap = HEAP8;\n          } else if (size === 2) {\n            heap = HEAP16;\n          } else if (size === 4) {\n            heap = HEAP32;\n          } else {\n            throw new TypeError(\"Unknown boolean type size: \" + name);\n          }\n          return this[\"fromWireType\"](heap[pointer >> shift]);\n        },\n        destructorFunction: null\n      });\n    }\n    var emval_free_list = [];\n    var emval_handle_array = [{}, {\n      value: undefined\n    }, {\n      value: null\n    }, {\n      value: true\n    }, {\n      value: false\n    }];\n    function __emval_decref(handle) {\n      if (handle > 4 && 0 === --emval_handle_array[handle].refcount) {\n        emval_handle_array[handle] = undefined;\n        emval_free_list.push(handle);\n      }\n    }\n    function count_emval_handles() {\n      var count = 0;\n      for (var i = 5; i < emval_handle_array.length; ++i) {\n        if (emval_handle_array[i] !== undefined) {\n          ++count;\n        }\n      }\n      return count;\n    }\n    function get_first_emval() {\n      for (var i = 5; i < emval_handle_array.length; ++i) {\n        if (emval_handle_array[i] !== undefined) {\n          return emval_handle_array[i];\n        }\n      }\n      return null;\n    }\n    function init_emval() {\n      Module[\"count_emval_handles\"] = count_emval_handles;\n      Module[\"get_first_emval\"] = get_first_emval;\n    }\n    var Emval = {\n      toValue: function toValue(handle) {\n        if (!handle) {\n          throwBindingError(\"Cannot use deleted val. handle = \" + handle);\n        }\n        return emval_handle_array[handle].value;\n      },\n      toHandle: function toHandle(value) {\n        switch (value) {\n          case undefined:\n            {\n              return 1;\n            }\n          case null:\n            {\n              return 2;\n            }\n          case true:\n            {\n              return 3;\n            }\n          case false:\n            {\n              return 4;\n            }\n          default:\n            {\n              var handle = emval_free_list.length ? emval_free_list.pop() : emval_handle_array.length;\n              emval_handle_array[handle] = {\n                refcount: 1,\n                value: value\n              };\n              return handle;\n            }\n        }\n      }\n    };\n    function __embind_register_emval(rawType, name) {\n      name = readLatin1String(name);\n      registerType(rawType, {\n        name: name,\n        \"fromWireType\": function fromWireType(handle) {\n          var rv = Emval.toValue(handle);\n          __emval_decref(handle);\n          return rv;\n        },\n        \"toWireType\": function toWireType(destructors, value) {\n          return Emval.toHandle(value);\n        },\n        \"argPackAdvance\": 8,\n        \"readValueFromPointer\": simpleReadValueFromPointer,\n        destructorFunction: null\n      });\n    }\n    function ensureOverloadTable(proto, methodName, humanName) {\n      if (undefined === proto[methodName].overloadTable) {\n        var prevFunc = proto[methodName];\n        proto[methodName] = function () {\n          if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {\n            throwBindingError(\"Function '\" + humanName + \"' called with an invalid number of arguments (\" + arguments.length + \") - expects one of (\" + proto[methodName].overloadTable + \")!\");\n          }\n          return proto[methodName].overloadTable[arguments.length].apply(this, arguments);\n        };\n        proto[methodName].overloadTable = [];\n        proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\n      }\n    }\n    function exposePublicSymbol(name, value, numArguments) {\n      if (Module.hasOwnProperty(name)) {\n        if (undefined === numArguments || undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments]) {\n          throwBindingError(\"Cannot register public name '\" + name + \"' twice\");\n        }\n        ensureOverloadTable(Module, name, name);\n        if (Module.hasOwnProperty(numArguments)) {\n          throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\" + numArguments + \")!\");\n        }\n        Module[name].overloadTable[numArguments] = value;\n      } else {\n        Module[name] = value;\n        if (undefined !== numArguments) {\n          Module[name].numArguments = numArguments;\n        }\n      }\n    }\n    function enumReadValueFromPointer(name, shift, signed) {\n      switch (shift) {\n        case 0:\n          return function (pointer) {\n            var heap = signed ? HEAP8 : HEAPU8;\n            return this[\"fromWireType\"](heap[pointer]);\n          };\n        case 1:\n          return function (pointer) {\n            var heap = signed ? HEAP16 : HEAPU16;\n            return this[\"fromWireType\"](heap[pointer >> 1]);\n          };\n        case 2:\n          return function (pointer) {\n            var heap = signed ? HEAP32 : HEAPU32;\n            return this[\"fromWireType\"](heap[pointer >> 2]);\n          };\n        default:\n          throw new TypeError(\"Unknown integer type: \" + name);\n      }\n    }\n    function __embind_register_enum(rawType, name, size, isSigned) {\n      var shift = getShiftFromSize(size);\n      name = readLatin1String(name);\n      function ctor() {}\n      ctor.values = {};\n      registerType(rawType, {\n        name: name,\n        constructor: ctor,\n        \"fromWireType\": function fromWireType(c) {\n          return this.constructor.values[c];\n        },\n        \"toWireType\": function toWireType(destructors, c) {\n          return c.value;\n        },\n        \"argPackAdvance\": 8,\n        \"readValueFromPointer\": enumReadValueFromPointer(name, shift, isSigned),\n        destructorFunction: null\n      });\n      exposePublicSymbol(name, ctor);\n    }\n    function getTypeName(type) {\n      var ptr = ___getTypeName(type);\n      var rv = readLatin1String(ptr);\n      _free(ptr);\n      return rv;\n    }\n    function requireRegisteredType(rawType, humanName) {\n      var impl = registeredTypes[rawType];\n      if (undefined === impl) {\n        throwBindingError(humanName + \" has unknown type \" + getTypeName(rawType));\n      }\n      return impl;\n    }\n    function __embind_register_enum_value(rawEnumType, name, enumValue) {\n      var enumType = requireRegisteredType(rawEnumType, \"enum\");\n      name = readLatin1String(name);\n      var Enum = enumType.constructor;\n      var Value = Object.create(enumType.constructor.prototype, {\n        value: {\n          value: enumValue\n        },\n        constructor: {\n          value: createNamedFunction(enumType.name + \"_\" + name, function () {})\n        }\n      });\n      Enum.values[enumValue] = Value;\n      Enum[name] = Value;\n    }\n    function _embind_repr(v) {\n      if (v === null) {\n        return \"null\";\n      }\n      var t = typeof v;\n      if (t === \"object\" || t === \"array\" || t === \"function\") {\n        return v.toString();\n      } else {\n        return \"\" + v;\n      }\n    }\n    function floatReadValueFromPointer(name, shift) {\n      switch (shift) {\n        case 2:\n          return function (pointer) {\n            return this[\"fromWireType\"](HEAPF32[pointer >> 2]);\n          };\n        case 3:\n          return function (pointer) {\n            return this[\"fromWireType\"](HEAPF64[pointer >> 3]);\n          };\n        default:\n          throw new TypeError(\"Unknown float type: \" + name);\n      }\n    }\n    function __embind_register_float(rawType, name, size) {\n      var shift = getShiftFromSize(size);\n      name = readLatin1String(name);\n      registerType(rawType, {\n        name: name,\n        \"fromWireType\": function fromWireType(value) {\n          return value;\n        },\n        \"toWireType\": function toWireType(destructors, value) {\n          if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n            throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n          }\n          return value;\n        },\n        \"argPackAdvance\": 8,\n        \"readValueFromPointer\": floatReadValueFromPointer(name, shift),\n        destructorFunction: null\n      });\n    }\n    function new_(constructor, argumentList) {\n      if (!(constructor instanceof Function)) {\n        throw new TypeError(\"new_ called with constructor type \" + typeof constructor + \" which is not a function\");\n      }\n      var dummy = createNamedFunction(constructor.name || \"unknownFunctionName\", function () {});\n      dummy.prototype = constructor.prototype;\n      var obj = new dummy();\n      var r = constructor.apply(obj, argumentList);\n      return r instanceof Object ? r : obj;\n    }\n    function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {\n      var argCount = argTypes.length;\n      if (argCount < 2) {\n        throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n      }\n      var isClassMethodFunc = argTypes[1] !== null && classType !== null;\n      var needsDestructorStack = false;\n      for (var i = 1; i < argTypes.length; ++i) {\n        if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) {\n          needsDestructorStack = true;\n          break;\n        }\n      }\n      var returns = argTypes[0].name !== \"void\";\n      var argsList = \"\";\n      var argsListWired = \"\";\n      for (var i = 0; i < argCount - 2; ++i) {\n        argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n        argsListWired += (i !== 0 ? \", \" : \"\") + \"arg\" + i + \"Wired\";\n      }\n      var invokerFnBody = \"return function \" + makeLegalFunctionName(humanName) + \"(\" + argsList + \") {\\n\" + \"if (arguments.length !== \" + (argCount - 2) + \") {\\n\" + \"throwBindingError('function \" + humanName + \" called with ' + arguments.length + ' arguments, expected \" + (argCount - 2) + \" args!');\\n\" + \"}\\n\";\n      if (needsDestructorStack) {\n        invokerFnBody += \"var destructors = [];\\n\";\n      }\n      var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\n      var args1 = [\"throwBindingError\", \"invoker\", \"fn\", \"runDestructors\", \"retType\", \"classParam\"];\n      var args2 = [throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];\n      if (isClassMethodFunc) {\n        invokerFnBody += \"var thisWired = classParam.toWireType(\" + dtorStack + \", this);\\n\";\n      }\n      for (var i = 0; i < argCount - 2; ++i) {\n        invokerFnBody += \"var arg\" + i + \"Wired = argType\" + i + \".toWireType(\" + dtorStack + \", arg\" + i + \"); // \" + argTypes[i + 2].name + \"\\n\";\n        args1.push(\"argType\" + i);\n        args2.push(argTypes[i + 2]);\n      }\n      if (isClassMethodFunc) {\n        argsListWired = \"thisWired\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired;\n      }\n      invokerFnBody += (returns ? \"var rv = \" : \"\") + \"invoker(fn\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired + \");\\n\";\n      if (needsDestructorStack) {\n        invokerFnBody += \"runDestructors(destructors);\\n\";\n      } else {\n        for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\n          var paramName = i === 1 ? \"thisWired\" : \"arg\" + (i - 2) + \"Wired\";\n          if (argTypes[i].destructorFunction !== null) {\n            invokerFnBody += paramName + \"_dtor(\" + paramName + \"); // \" + argTypes[i].name + \"\\n\";\n            args1.push(paramName + \"_dtor\");\n            args2.push(argTypes[i].destructorFunction);\n          }\n        }\n      }\n      if (returns) {\n        invokerFnBody += \"var ret = retType.fromWireType(rv);\\n\" + \"return ret;\\n\";\n      } else {}\n      invokerFnBody += \"}\\n\";\n      args1.push(invokerFnBody);\n      var invokerFunction = new_(Function, args1).apply(null, args2);\n      return invokerFunction;\n    }\n    function heap32VectorToArray(count, firstElement) {\n      var array = [];\n      for (var i = 0; i < count; i++) {\n        array.push(HEAP32[(firstElement >> 2) + i]);\n      }\n      return array;\n    }\n    function replacePublicSymbol(name, value, numArguments) {\n      if (!Module.hasOwnProperty(name)) {\n        throwInternalError(\"Replacing nonexistant public symbol\");\n      }\n      if (undefined !== Module[name].overloadTable && undefined !== numArguments) {\n        Module[name].overloadTable[numArguments] = value;\n      } else {\n        Module[name] = value;\n        Module[name].argCount = numArguments;\n      }\n    }\n    function dynCallLegacy(sig, ptr, args) {\n      var f = Module[\"dynCall_\" + sig];\n      return args && args.length ? f.apply(null, [ptr].concat(args)) : f.call(null, ptr);\n    }\n    function dynCall(sig, ptr, args) {\n      if (sig.includes(\"j\")) {\n        return dynCallLegacy(sig, ptr, args);\n      }\n      return getWasmTableEntry(ptr).apply(null, args);\n    }\n    function getDynCaller(sig, ptr) {\n      var argCache = [];\n      return function () {\n        argCache.length = arguments.length;\n        for (var i = 0; i < arguments.length; i++) {\n          argCache[i] = arguments[i];\n        }\n        return dynCall(sig, ptr, argCache);\n      };\n    }\n    function embind__requireFunction(signature, rawFunction) {\n      signature = readLatin1String(signature);\n      function makeDynCaller() {\n        if (signature.includes(\"j\")) {\n          return getDynCaller(signature, rawFunction);\n        }\n        return getWasmTableEntry(rawFunction);\n      }\n      var fp = makeDynCaller();\n      if (typeof fp !== \"function\") {\n        throwBindingError(\"unknown function pointer with signature \" + signature + \": \" + rawFunction);\n      }\n      return fp;\n    }\n    var UnboundTypeError = undefined;\n    function throwUnboundTypeError(message, types) {\n      var unboundTypes = [];\n      var seen = {};\n      function visit(type) {\n        if (seen[type]) {\n          return;\n        }\n        if (registeredTypes[type]) {\n          return;\n        }\n        if (typeDependencies[type]) {\n          typeDependencies[type].forEach(visit);\n          return;\n        }\n        unboundTypes.push(type);\n        seen[type] = true;\n      }\n      types.forEach(visit);\n      throw new UnboundTypeError(message + \": \" + unboundTypes.map(getTypeName).join([\", \"]));\n    }\n    function __embind_register_function(name, argCount, rawArgTypesAddr, signature, rawInvoker, fn) {\n      var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n      name = readLatin1String(name);\n      rawInvoker = embind__requireFunction(signature, rawInvoker);\n      exposePublicSymbol(name, function () {\n        throwUnboundTypeError(\"Cannot call \" + name + \" due to unbound types\", argTypes);\n      }, argCount - 1);\n      whenDependentTypesAreResolved([], argTypes, function (argTypes) {\n        var invokerArgsArray = [argTypes[0], null].concat(argTypes.slice(1));\n        replacePublicSymbol(name, craftInvokerFunction(name, invokerArgsArray, null, rawInvoker, fn), argCount - 1);\n        return [];\n      });\n    }\n    function integerReadValueFromPointer(name, shift, signed) {\n      switch (shift) {\n        case 0:\n          return signed ? function readS8FromPointer(pointer) {\n            return HEAP8[pointer];\n          } : function readU8FromPointer(pointer) {\n            return HEAPU8[pointer];\n          };\n        case 1:\n          return signed ? function readS16FromPointer(pointer) {\n            return HEAP16[pointer >> 1];\n          } : function readU16FromPointer(pointer) {\n            return HEAPU16[pointer >> 1];\n          };\n        case 2:\n          return signed ? function readS32FromPointer(pointer) {\n            return HEAP32[pointer >> 2];\n          } : function readU32FromPointer(pointer) {\n            return HEAPU32[pointer >> 2];\n          };\n        default:\n          throw new TypeError(\"Unknown integer type: \" + name);\n      }\n    }\n    function __embind_register_integer(primitiveType, name, size, minRange, maxRange) {\n      name = readLatin1String(name);\n      if (maxRange === -1) {\n        maxRange = 4294967295;\n      }\n      var shift = getShiftFromSize(size);\n      var fromWireType = function fromWireType(value) {\n        return value;\n      };\n      if (minRange === 0) {\n        var bitshift = 32 - 8 * size;\n        fromWireType = function fromWireType(value) {\n          return value << bitshift >>> bitshift;\n        };\n      }\n      var isUnsignedType = name.includes(\"unsigned\");\n      registerType(primitiveType, {\n        name: name,\n        \"fromWireType\": fromWireType,\n        \"toWireType\": function toWireType(destructors, value) {\n          if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n            throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n          }\n          if (value < minRange || value > maxRange) {\n            throw new TypeError('Passing a number \"' + _embind_repr(value) + '\" from JS side to C/C++ side to an argument of type \"' + name + '\", which is outside the valid range [' + minRange + \", \" + maxRange + \"]!\");\n          }\n          return isUnsignedType ? value >>> 0 : value | 0;\n        },\n        \"argPackAdvance\": 8,\n        \"readValueFromPointer\": integerReadValueFromPointer(name, shift, minRange !== 0),\n        destructorFunction: null\n      });\n    }\n    function __embind_register_memory_view(rawType, dataTypeIndex, name) {\n      var typeMapping = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array];\n      var TA = typeMapping[dataTypeIndex];\n      function decodeMemoryView(handle) {\n        handle = handle >> 2;\n        var heap = HEAPU32;\n        var size = heap[handle];\n        var data = heap[handle + 1];\n        return new TA(buffer, data, size);\n      }\n      name = readLatin1String(name);\n      registerType(rawType, {\n        name: name,\n        \"fromWireType\": decodeMemoryView,\n        \"argPackAdvance\": 8,\n        \"readValueFromPointer\": decodeMemoryView\n      }, {\n        ignoreDuplicateRegistrations: true\n      });\n    }\n    function __embind_register_std_string(rawType, name) {\n      name = readLatin1String(name);\n      var stdStringIsUTF8 = name === \"std::string\";\n      registerType(rawType, {\n        name: name,\n        \"fromWireType\": function fromWireType(value) {\n          var length = HEAPU32[value >> 2];\n          var str;\n          if (stdStringIsUTF8) {\n            var decodeStartPtr = value + 4;\n            for (var i = 0; i <= length; ++i) {\n              var currentBytePtr = value + 4 + i;\n              if (i == length || HEAPU8[currentBytePtr] == 0) {\n                var maxRead = currentBytePtr - decodeStartPtr;\n                var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n                if (str === undefined) {\n                  str = stringSegment;\n                } else {\n                  str += String.fromCharCode(0);\n                  str += stringSegment;\n                }\n                decodeStartPtr = currentBytePtr + 1;\n              }\n            }\n          } else {\n            var a = new Array(length);\n            for (var i = 0; i < length; ++i) {\n              a[i] = String.fromCharCode(HEAPU8[value + 4 + i]);\n            }\n            str = a.join(\"\");\n          }\n          _free(value);\n          return str;\n        },\n        \"toWireType\": function toWireType(destructors, value) {\n          if (value instanceof ArrayBuffer) {\n            value = new Uint8Array(value);\n          }\n          var getLength;\n          var valueIsOfTypeString = typeof value === \"string\";\n          if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\n            throwBindingError(\"Cannot pass non-string to std::string\");\n          }\n          if (stdStringIsUTF8 && valueIsOfTypeString) {\n            getLength = function getLength() {\n              return lengthBytesUTF8(value);\n            };\n          } else {\n            getLength = function getLength() {\n              return value.length;\n            };\n          }\n          var length = getLength();\n          var ptr = _malloc(4 + length + 1);\n          HEAPU32[ptr >> 2] = length;\n          if (stdStringIsUTF8 && valueIsOfTypeString) {\n            stringToUTF8(value, ptr + 4, length + 1);\n          } else {\n            if (valueIsOfTypeString) {\n              for (var i = 0; i < length; ++i) {\n                var charCode = value.charCodeAt(i);\n                if (charCode > 255) {\n                  _free(ptr);\n                  throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\");\n                }\n                HEAPU8[ptr + 4 + i] = charCode;\n              }\n            } else {\n              for (var i = 0; i < length; ++i) {\n                HEAPU8[ptr + 4 + i] = value[i];\n              }\n            }\n          }\n          if (destructors !== null) {\n            destructors.push(_free, ptr);\n          }\n          return ptr;\n        },\n        \"argPackAdvance\": 8,\n        \"readValueFromPointer\": simpleReadValueFromPointer,\n        destructorFunction: function destructorFunction(ptr) {\n          _free(ptr);\n        }\n      });\n    }\n    function __embind_register_std_wstring(rawType, charSize, name) {\n      name = readLatin1String(name);\n      var decodeString, encodeString, getHeap, lengthBytesUTF, shift;\n      if (charSize === 2) {\n        decodeString = UTF16ToString;\n        encodeString = stringToUTF16;\n        lengthBytesUTF = lengthBytesUTF16;\n        getHeap = function getHeap() {\n          return HEAPU16;\n        };\n        shift = 1;\n      } else if (charSize === 4) {\n        decodeString = UTF32ToString;\n        encodeString = stringToUTF32;\n        lengthBytesUTF = lengthBytesUTF32;\n        getHeap = function getHeap() {\n          return HEAPU32;\n        };\n        shift = 2;\n      }\n      registerType(rawType, {\n        name: name,\n        \"fromWireType\": function fromWireType(value) {\n          var length = HEAPU32[value >> 2];\n          var HEAP = getHeap();\n          var str;\n          var decodeStartPtr = value + 4;\n          for (var i = 0; i <= length; ++i) {\n            var currentBytePtr = value + 4 + i * charSize;\n            if (i == length || HEAP[currentBytePtr >> shift] == 0) {\n              var maxReadBytes = currentBytePtr - decodeStartPtr;\n              var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n              if (str === undefined) {\n                str = stringSegment;\n              } else {\n                str += String.fromCharCode(0);\n                str += stringSegment;\n              }\n              decodeStartPtr = currentBytePtr + charSize;\n            }\n          }\n          _free(value);\n          return str;\n        },\n        \"toWireType\": function toWireType(destructors, value) {\n          if (!(typeof value === \"string\")) {\n            throwBindingError(\"Cannot pass non-string to C++ string type \" + name);\n          }\n          var length = lengthBytesUTF(value);\n          var ptr = _malloc(4 + length + charSize);\n          HEAPU32[ptr >> 2] = length >> shift;\n          encodeString(value, ptr + 4, length + charSize);\n          if (destructors !== null) {\n            destructors.push(_free, ptr);\n          }\n          return ptr;\n        },\n        \"argPackAdvance\": 8,\n        \"readValueFromPointer\": simpleReadValueFromPointer,\n        destructorFunction: function destructorFunction(ptr) {\n          _free(ptr);\n        }\n      });\n    }\n    function __embind_register_value_array(rawType, name, constructorSignature, rawConstructor, destructorSignature, rawDestructor) {\n      tupleRegistrations[rawType] = {\n        name: readLatin1String(name),\n        rawConstructor: embind__requireFunction(constructorSignature, rawConstructor),\n        rawDestructor: embind__requireFunction(destructorSignature, rawDestructor),\n        elements: []\n      };\n    }\n    function __embind_register_value_array_element(rawTupleType, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {\n      tupleRegistrations[rawTupleType].elements.push({\n        getterReturnType: getterReturnType,\n        getter: embind__requireFunction(getterSignature, getter),\n        getterContext: getterContext,\n        setterArgumentType: setterArgumentType,\n        setter: embind__requireFunction(setterSignature, setter),\n        setterContext: setterContext\n      });\n    }\n    function __embind_register_void(rawType, name) {\n      name = readLatin1String(name);\n      registerType(rawType, {\n        isVoid: true,\n        name: name,\n        \"argPackAdvance\": 0,\n        \"fromWireType\": function fromWireType() {\n          return undefined;\n        },\n        \"toWireType\": function toWireType(destructors, o) {\n          return undefined;\n        }\n      });\n    }\n    function _abort() {\n      abort(\"\");\n    }\n    function _emscripten_memcpy_big(dest, src, num) {\n      HEAPU8.copyWithin(dest, src, src + num);\n    }\n    function emscripten_realloc_buffer(size) {\n      try {\n        wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);\n        updateGlobalBufferAndViews(wasmMemory.buffer);\n        return 1;\n      } catch (e) {}\n    }\n    function _emscripten_resize_heap(requestedSize) {\n      var oldSize = HEAPU8.length;\n      requestedSize = requestedSize >>> 0;\n      var maxHeapSize = 2147483648;\n      if (requestedSize > maxHeapSize) {\n        return false;\n      }\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n        var overGrownHeapSize = oldSize * (1 + .2 / cutDown);\n        overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n        var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n        var replacement = emscripten_realloc_buffer(newSize);\n        if (replacement) {\n          return true;\n        }\n      }\n      return false;\n    }\n    var ENV = {};\n    function getExecutableName() {\n      return thisProgram || \"./this.program\";\n    }\n    function getEnvStrings() {\n      if (!getEnvStrings.strings) {\n        var lang = (typeof navigator === \"object\" && navigator.languages && navigator.languages[0] || \"C\").replace(\"-\", \"_\") + \".UTF-8\";\n        var env = {\n          \"USER\": \"web_user\",\n          \"LOGNAME\": \"web_user\",\n          \"PATH\": \"/\",\n          \"PWD\": \"/\",\n          \"HOME\": \"/home/web_user\",\n          \"LANG\": lang,\n          \"_\": getExecutableName()\n        };\n        for (var x in ENV) {\n          if (ENV[x] === undefined) delete env[x];else env[x] = ENV[x];\n        }\n        var strings = [];\n        for (var x in env) {\n          strings.push(x + \"=\" + env[x]);\n        }\n        getEnvStrings.strings = strings;\n      }\n      return getEnvStrings.strings;\n    }\n    var PATH = {\n      splitPath: function splitPath(filename) {\n        var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n        return splitPathRe.exec(filename).slice(1);\n      },\n      normalizeArray: function normalizeArray(parts, allowAboveRoot) {\n        var up = 0;\n        for (var i = parts.length - 1; i >= 0; i--) {\n          var last = parts[i];\n          if (last === \".\") {\n            parts.splice(i, 1);\n          } else if (last === \"..\") {\n            parts.splice(i, 1);\n            up++;\n          } else if (up) {\n            parts.splice(i, 1);\n            up--;\n          }\n        }\n        if (allowAboveRoot) {\n          for (; up; up--) {\n            parts.unshift(\"..\");\n          }\n        }\n        return parts;\n      },\n      normalize: function normalize(path) {\n        var isAbsolute = path.charAt(0) === \"/\",\n          trailingSlash = path.substr(-1) === \"/\";\n        path = PATH.normalizeArray(path.split(\"/\").filter(function (p) {\n          return !!p;\n        }), !isAbsolute).join(\"/\");\n        if (!path && !isAbsolute) {\n          path = \".\";\n        }\n        if (path && trailingSlash) {\n          path += \"/\";\n        }\n        return (isAbsolute ? \"/\" : \"\") + path;\n      },\n      dirname: function dirname(path) {\n        var result = PATH.splitPath(path),\n          root = result[0],\n          dir = result[1];\n        if (!root && !dir) {\n          return \".\";\n        }\n        if (dir) {\n          dir = dir.substr(0, dir.length - 1);\n        }\n        return root + dir;\n      },\n      basename: function basename(path) {\n        if (path === \"/\") return \"/\";\n        path = PATH.normalize(path);\n        path = path.replace(/\\/$/, \"\");\n        var lastSlash = path.lastIndexOf(\"/\");\n        if (lastSlash === -1) return path;\n        return path.substr(lastSlash + 1);\n      },\n      extname: function extname(path) {\n        return PATH.splitPath(path)[3];\n      },\n      join: function join() {\n        var paths = Array.prototype.slice.call(arguments, 0);\n        return PATH.normalize(paths.join(\"/\"));\n      },\n      join2: function join2(l, r) {\n        return PATH.normalize(l + \"/\" + r);\n      }\n    };\n    function getRandomDevice() {\n      if (typeof crypto === \"object\" && typeof crypto[\"getRandomValues\"] === \"function\") {\n        var randomBuffer = new Uint8Array(1);\n        return function () {\n          crypto.getRandomValues(randomBuffer);\n          return randomBuffer[0];\n        };\n      } else return function () {\n        abort(\"randomDevice\");\n      };\n    }\n    var PATH_FS = {\n      resolve: function resolve() {\n        var resolvedPath = \"\",\n          resolvedAbsolute = false;\n        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n          var path = i >= 0 ? arguments[i] : FS.cwd();\n          if (typeof path !== \"string\") {\n            throw new TypeError(\"Arguments to path.resolve must be strings\");\n          } else if (!path) {\n            return \"\";\n          }\n          resolvedPath = path + \"/\" + resolvedPath;\n          resolvedAbsolute = path.charAt(0) === \"/\";\n        }\n        resolvedPath = PATH.normalizeArray(resolvedPath.split(\"/\").filter(function (p) {\n          return !!p;\n        }), !resolvedAbsolute).join(\"/\");\n        return (resolvedAbsolute ? \"/\" : \"\") + resolvedPath || \".\";\n      },\n      relative: function relative(from, to) {\n        from = PATH_FS.resolve(from).substr(1);\n        to = PATH_FS.resolve(to).substr(1);\n        function trim(arr) {\n          var start = 0;\n          for (; start < arr.length; start++) {\n            if (arr[start] !== \"\") break;\n          }\n          var end = arr.length - 1;\n          for (; end >= 0; end--) {\n            if (arr[end] !== \"\") break;\n          }\n          if (start > end) return [];\n          return arr.slice(start, end - start + 1);\n        }\n        var fromParts = trim(from.split(\"/\"));\n        var toParts = trim(to.split(\"/\"));\n        var length = Math.min(fromParts.length, toParts.length);\n        var samePartsLength = length;\n        for (var i = 0; i < length; i++) {\n          if (fromParts[i] !== toParts[i]) {\n            samePartsLength = i;\n            break;\n          }\n        }\n        var outputParts = [];\n        for (var i = samePartsLength; i < fromParts.length; i++) {\n          outputParts.push(\"..\");\n        }\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\n        return outputParts.join(\"/\");\n      }\n    };\n    var TTY = {\n      ttys: [],\n      init: function init() {},\n      shutdown: function shutdown() {},\n      register: function register(dev, ops) {\n        TTY.ttys[dev] = {\n          input: [],\n          output: [],\n          ops: ops\n        };\n        FS.registerDevice(dev, TTY.stream_ops);\n      },\n      stream_ops: {\n        open: function open(stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n          if (!tty) {\n            throw new FS.ErrnoError(43);\n          }\n          stream.tty = tty;\n          stream.seekable = false;\n        },\n        close: function close(stream) {\n          stream.tty.ops.flush(stream.tty);\n        },\n        flush: function flush(stream) {\n          stream.tty.ops.flush(stream.tty);\n        },\n        read: function read(stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(60);\n          }\n          var bytesRead = 0;\n          for (var i = 0; i < length; i++) {\n            var result;\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n            if (result === undefined && bytesRead === 0) {\n              throw new FS.ErrnoError(6);\n            }\n            if (result === null || result === undefined) break;\n            bytesRead++;\n            buffer[offset + i] = result;\n          }\n          if (bytesRead) {\n            stream.node.timestamp = Date.now();\n          }\n          return bytesRead;\n        },\n        write: function write(stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(60);\n          }\n          try {\n            for (var i = 0; i < length; i++) {\n              stream.tty.ops.put_char(stream.tty, buffer[offset + i]);\n            }\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n          if (length) {\n            stream.node.timestamp = Date.now();\n          }\n          return i;\n        }\n      },\n      default_tty_ops: {\n        get_char: function get_char(tty) {\n          if (!tty.input.length) {\n            var result = null;\n            if (typeof window != \"undefined\" && typeof window.prompt == \"function\") {\n              result = window.prompt(\"Input: \");\n              if (result !== null) {\n                result += \"\\n\";\n              }\n            } else if (typeof readline == \"function\") {\n              result = readline();\n              if (result !== null) {\n                result += \"\\n\";\n              }\n            }\n            if (!result) {\n              return null;\n            }\n            tty.input = intArrayFromString(result, true);\n          }\n          return tty.input.shift();\n        },\n        put_char: function put_char(tty, val) {\n          if (val === null || val === 10) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n        flush: function flush(tty) {\n          if (tty.output && tty.output.length > 0) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        }\n      },\n      default_tty1_ops: {\n        put_char: function put_char(tty, val) {\n          if (val === null || val === 10) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n        flush: function flush(tty) {\n          if (tty.output && tty.output.length > 0) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        }\n      }\n    };\n    function mmapAlloc(size) {\n      abort();\n    }\n    var MEMFS = {\n      ops_table: null,\n      mount: function mount(_mount) {\n        return MEMFS.createNode(null, \"/\", 16384 | 511, 0);\n      },\n      createNode: function createNode(parent, name, mode, dev) {\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n          throw new FS.ErrnoError(63);\n        }\n        if (!MEMFS.ops_table) {\n          MEMFS.ops_table = {\n            dir: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n                lookup: MEMFS.node_ops.lookup,\n                mknod: MEMFS.node_ops.mknod,\n                rename: MEMFS.node_ops.rename,\n                unlink: MEMFS.node_ops.unlink,\n                rmdir: MEMFS.node_ops.rmdir,\n                readdir: MEMFS.node_ops.readdir,\n                symlink: MEMFS.node_ops.symlink\n              },\n              stream: {\n                llseek: MEMFS.stream_ops.llseek\n              }\n            },\n            file: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr\n              },\n              stream: {\n                llseek: MEMFS.stream_ops.llseek,\n                read: MEMFS.stream_ops.read,\n                write: MEMFS.stream_ops.write,\n                allocate: MEMFS.stream_ops.allocate,\n                mmap: MEMFS.stream_ops.mmap,\n                msync: MEMFS.stream_ops.msync\n              }\n            },\n            link: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n                readlink: MEMFS.node_ops.readlink\n              },\n              stream: {}\n            },\n            chrdev: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr\n              },\n              stream: FS.chrdev_stream_ops\n            }\n          };\n        }\n        var node = FS.createNode(parent, name, mode, dev);\n        if (FS.isDir(node.mode)) {\n          node.node_ops = MEMFS.ops_table.dir.node;\n          node.stream_ops = MEMFS.ops_table.dir.stream;\n          node.contents = {};\n        } else if (FS.isFile(node.mode)) {\n          node.node_ops = MEMFS.ops_table.file.node;\n          node.stream_ops = MEMFS.ops_table.file.stream;\n          node.usedBytes = 0;\n          node.contents = null;\n        } else if (FS.isLink(node.mode)) {\n          node.node_ops = MEMFS.ops_table.link.node;\n          node.stream_ops = MEMFS.ops_table.link.stream;\n        } else if (FS.isChrdev(node.mode)) {\n          node.node_ops = MEMFS.ops_table.chrdev.node;\n          node.stream_ops = MEMFS.ops_table.chrdev.stream;\n        }\n        node.timestamp = Date.now();\n        if (parent) {\n          parent.contents[name] = node;\n          parent.timestamp = node.timestamp;\n        }\n        return node;\n      },\n      getFileDataAsTypedArray: function getFileDataAsTypedArray(node) {\n        if (!node.contents) return new Uint8Array(0);\n        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes);\n        return new Uint8Array(node.contents);\n      },\n      expandFileStorage: function expandFileStorage(node, newCapacity) {\n        var prevCapacity = node.contents ? node.contents.length : 0;\n        if (prevCapacity >= newCapacity) return;\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n        newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) >>> 0);\n        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);\n        var oldContents = node.contents;\n        node.contents = new Uint8Array(newCapacity);\n        if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\n      },\n      resizeFileStorage: function resizeFileStorage(node, newSize) {\n        if (node.usedBytes == newSize) return;\n        if (newSize == 0) {\n          node.contents = null;\n          node.usedBytes = 0;\n        } else {\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(newSize);\n          if (oldContents) {\n            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));\n          }\n          node.usedBytes = newSize;\n        }\n      },\n      node_ops: {\n        getattr: function getattr(node) {\n          var attr = {};\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n          attr.atime = new Date(node.timestamp);\n          attr.mtime = new Date(node.timestamp);\n          attr.ctime = new Date(node.timestamp);\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        },\n        setattr: function setattr(node, attr) {\n          if (attr.mode !== undefined) {\n            node.mode = attr.mode;\n          }\n          if (attr.timestamp !== undefined) {\n            node.timestamp = attr.timestamp;\n          }\n          if (attr.size !== undefined) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        },\n        lookup: function lookup(parent, name) {\n          throw FS.genericErrors[44];\n        },\n        mknod: function mknod(parent, name, mode, dev) {\n          return MEMFS.createNode(parent, name, mode, dev);\n        },\n        rename: function rename(old_node, new_dir, new_name) {\n          if (FS.isDir(old_node.mode)) {\n            var new_node;\n            try {\n              new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {}\n            if (new_node) {\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n            }\n          }\n          delete old_node.parent.contents[old_node.name];\n          old_node.parent.timestamp = Date.now();\n          old_node.name = new_name;\n          new_dir.contents[new_name] = old_node;\n          new_dir.timestamp = old_node.parent.timestamp;\n          old_node.parent = new_dir;\n        },\n        unlink: function unlink(parent, name) {\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n        rmdir: function rmdir(parent, name) {\n          var node = FS.lookupNode(parent, name);\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(55);\n          }\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n        readdir: function readdir(node) {\n          var entries = [\".\", \"..\"];\n          for (var key in node.contents) {\n            if (!node.contents.hasOwnProperty(key)) {\n              continue;\n            }\n            entries.push(key);\n          }\n          return entries;\n        },\n        symlink: function symlink(parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\n          node.link = oldpath;\n          return node;\n        },\n        readlink: function readlink(node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          return node.link;\n        }\n      },\n      stream_ops: {\n        read: function read(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes) return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n          if (size > 8 && contents.subarray) {\n            buffer.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents[position + i];\n            }\n          }\n          return size;\n        },\n        write: function write(stream, buffer, offset, length, position, canOwn) {\n          if (buffer.buffer === HEAP8.buffer) {\n            canOwn = false;\n          }\n          if (!length) return 0;\n          var node = stream.node;\n          node.timestamp = Date.now();\n          if (buffer.subarray && (!node.contents || node.contents.subarray)) {\n            if (canOwn) {\n              node.contents = buffer.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) {\n              node.contents = buffer.slice(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) {\n              node.contents.set(buffer.subarray(offset, offset + length), position);\n              return length;\n            }\n          }\n          MEMFS.expandFileStorage(node, position + length);\n          if (node.contents.subarray && buffer.subarray) {\n            node.contents.set(buffer.subarray(offset, offset + length), position);\n          } else {\n            for (var i = 0; i < length; i++) {\n              node.contents[position + i] = buffer[offset + i];\n            }\n          }\n          node.usedBytes = Math.max(node.usedBytes, position + length);\n          return length;\n        },\n        llseek: function llseek(stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        },\n        allocate: function allocate(stream, offset, length) {\n          MEMFS.expandFileStorage(stream.node, offset + length);\n          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\n        },\n        mmap: function mmap(stream, address, length, position, prot, flags) {\n          if (address !== 0) {\n            throw new FS.ErrnoError(28);\n          }\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n          if (!(flags & 2) && contents.buffer === buffer) {\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            if (position > 0 || position + length < contents.length) {\n              if (contents.subarray) {\n                contents = contents.subarray(position, position + length);\n              } else {\n                contents = Array.prototype.slice.call(contents, position, position + length);\n              }\n            }\n            allocated = true;\n            ptr = mmapAlloc(length);\n            if (!ptr) {\n              throw new FS.ErrnoError(48);\n            }\n            HEAP8.set(contents, ptr);\n          }\n          return {\n            ptr: ptr,\n            allocated: allocated\n          };\n        },\n        msync: function msync(stream, buffer, offset, length, mmapFlags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          if (mmapFlags & 2) {\n            return 0;\n          }\n          var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n          return 0;\n        }\n      }\n    };\n    function asyncLoad(url, onload, onerror, noRunDep) {\n      var dep = !noRunDep ? getUniqueRunDependency(\"al \" + url) : \"\";\n      readAsync(url, function (arrayBuffer) {\n        assert(arrayBuffer, 'Loading data file \"' + url + '\" failed (no arrayBuffer).');\n        onload(new Uint8Array(arrayBuffer));\n        if (dep) removeRunDependency(dep);\n      }, function (event) {\n        if (onerror) {\n          onerror();\n        } else {\n          throw 'Loading data file \"' + url + '\" failed.';\n        }\n      });\n      if (dep) addRunDependency(dep);\n    }\n    var FS = {\n      root: null,\n      mounts: [],\n      devices: {},\n      streams: [],\n      nextInode: 1,\n      nameTable: null,\n      currentPath: \"/\",\n      initialized: false,\n      ignorePermissions: true,\n      ErrnoError: null,\n      genericErrors: {},\n      filesystems: null,\n      syncFSRequests: 0,\n      lookupPath: function lookupPath(path, opts) {\n        path = PATH_FS.resolve(FS.cwd(), path);\n        opts = opts || {};\n        if (!path) return {\n          path: \"\",\n          node: null\n        };\n        var defaults = {\n          follow_mount: true,\n          recurse_count: 0\n        };\n        for (var key in defaults) {\n          if (opts[key] === undefined) {\n            opts[key] = defaults[key];\n          }\n        }\n        if (opts.recurse_count > 8) {\n          throw new FS.ErrnoError(32);\n        }\n        var parts = PATH.normalizeArray(path.split(\"/\").filter(function (p) {\n          return !!p;\n        }), false);\n        var current = FS.root;\n        var current_path = \"/\";\n        for (var i = 0; i < parts.length; i++) {\n          var islast = i === parts.length - 1;\n          if (islast && opts.parent) {\n            break;\n          }\n          current = FS.lookupNode(current, parts[i]);\n          current_path = PATH.join2(current_path, parts[i]);\n          if (FS.isMountpoint(current)) {\n            if (!islast || islast && opts.follow_mount) {\n              current = current.mounted.root;\n            }\n          }\n          if (!islast || opts.follow) {\n            var count = 0;\n            while (FS.isLink(current.mode)) {\n              var link = FS.readlink(current_path);\n              current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n              var lookup = FS.lookupPath(current_path, {\n                recurse_count: opts.recurse_count\n              });\n              current = lookup.node;\n              if (count++ > 40) {\n                throw new FS.ErrnoError(32);\n              }\n            }\n          }\n        }\n        return {\n          path: current_path,\n          node: current\n        };\n      },\n      getPath: function getPath(node) {\n        var path;\n        while (true) {\n          if (FS.isRoot(node)) {\n            var mount = node.mount.mountpoint;\n            if (!path) return mount;\n            return mount[mount.length - 1] !== \"/\" ? mount + \"/\" + path : mount + path;\n          }\n          path = path ? node.name + \"/\" + path : node.name;\n          node = node.parent;\n        }\n      },\n      hashName: function hashName(parentid, name) {\n        var hash = 0;\n        for (var i = 0; i < name.length; i++) {\n          hash = (hash << 5) - hash + name.charCodeAt(i) | 0;\n        }\n        return (parentid + hash >>> 0) % FS.nameTable.length;\n      },\n      hashAddNode: function hashAddNode(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        node.name_next = FS.nameTable[hash];\n        FS.nameTable[hash] = node;\n      },\n      hashRemoveNode: function hashRemoveNode(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        if (FS.nameTable[hash] === node) {\n          FS.nameTable[hash] = node.name_next;\n        } else {\n          var current = FS.nameTable[hash];\n          while (current) {\n            if (current.name_next === node) {\n              current.name_next = node.name_next;\n              break;\n            }\n            current = current.name_next;\n          }\n        }\n      },\n      lookupNode: function lookupNode(parent, name) {\n        var errCode = FS.mayLookup(parent);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode, parent);\n        }\n        var hash = FS.hashName(parent.id, name);\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n          var nodeName = node.name;\n          if (node.parent.id === parent.id && nodeName === name) {\n            return node;\n          }\n        }\n        return FS.lookup(parent, name);\n      },\n      createNode: function createNode(parent, name, mode, rdev) {\n        var node = new FS.FSNode(parent, name, mode, rdev);\n        FS.hashAddNode(node);\n        return node;\n      },\n      destroyNode: function destroyNode(node) {\n        FS.hashRemoveNode(node);\n      },\n      isRoot: function isRoot(node) {\n        return node === node.parent;\n      },\n      isMountpoint: function isMountpoint(node) {\n        return !!node.mounted;\n      },\n      isFile: function isFile(mode) {\n        return (mode & 61440) === 32768;\n      },\n      isDir: function isDir(mode) {\n        return (mode & 61440) === 16384;\n      },\n      isLink: function isLink(mode) {\n        return (mode & 61440) === 40960;\n      },\n      isChrdev: function isChrdev(mode) {\n        return (mode & 61440) === 8192;\n      },\n      isBlkdev: function isBlkdev(mode) {\n        return (mode & 61440) === 24576;\n      },\n      isFIFO: function isFIFO(mode) {\n        return (mode & 61440) === 4096;\n      },\n      isSocket: function isSocket(mode) {\n        return (mode & 49152) === 49152;\n      },\n      flagModes: {\n        \"r\": 0,\n        \"r+\": 2,\n        \"w\": 577,\n        \"w+\": 578,\n        \"a\": 1089,\n        \"a+\": 1090\n      },\n      modeStringToFlags: function modeStringToFlags(str) {\n        var flags = FS.flagModes[str];\n        if (typeof flags === \"undefined\") {\n          throw new Error(\"Unknown file open mode: \" + str);\n        }\n        return flags;\n      },\n      flagsToPermissionString: function flagsToPermissionString(flag) {\n        var perms = [\"r\", \"w\", \"rw\"][flag & 3];\n        if (flag & 512) {\n          perms += \"w\";\n        }\n        return perms;\n      },\n      nodePermissions: function nodePermissions(node, perms) {\n        if (FS.ignorePermissions) {\n          return 0;\n        }\n        if (perms.includes(\"r\") && !(node.mode & 292)) {\n          return 2;\n        } else if (perms.includes(\"w\") && !(node.mode & 146)) {\n          return 2;\n        } else if (perms.includes(\"x\") && !(node.mode & 73)) {\n          return 2;\n        }\n        return 0;\n      },\n      mayLookup: function mayLookup(dir) {\n        var errCode = FS.nodePermissions(dir, \"x\");\n        if (errCode) return errCode;\n        if (!dir.node_ops.lookup) return 2;\n        return 0;\n      },\n      mayCreate: function mayCreate(dir, name) {\n        try {\n          var node = FS.lookupNode(dir, name);\n          return 20;\n        } catch (e) {}\n        return FS.nodePermissions(dir, \"wx\");\n      },\n      mayDelete: function mayDelete(dir, name, isdir) {\n        var node;\n        try {\n          node = FS.lookupNode(dir, name);\n        } catch (e) {\n          return e.errno;\n        }\n        var errCode = FS.nodePermissions(dir, \"wx\");\n        if (errCode) {\n          return errCode;\n        }\n        if (isdir) {\n          if (!FS.isDir(node.mode)) {\n            return 54;\n          }\n          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n            return 10;\n          }\n        } else {\n          if (FS.isDir(node.mode)) {\n            return 31;\n          }\n        }\n        return 0;\n      },\n      mayOpen: function mayOpen(node, flags) {\n        if (!node) {\n          return 44;\n        }\n        if (FS.isLink(node.mode)) {\n          return 32;\n        } else if (FS.isDir(node.mode)) {\n          if (FS.flagsToPermissionString(flags) !== \"r\" || flags & 512) {\n            return 31;\n          }\n        }\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n      },\n      MAX_OPEN_FDS: 4096,\n      nextfd: function nextfd(fd_start, fd_end) {\n        fd_start = fd_start || 0;\n        fd_end = fd_end || FS.MAX_OPEN_FDS;\n        for (var fd = fd_start; fd <= fd_end; fd++) {\n          if (!FS.streams[fd]) {\n            return fd;\n          }\n        }\n        throw new FS.ErrnoError(33);\n      },\n      getStream: function getStream(fd) {\n        return FS.streams[fd];\n      },\n      createStream: function createStream(stream, fd_start, fd_end) {\n        if (!FS.FSStream) {\n          FS.FSStream = function () {};\n          FS.FSStream.prototype = {\n            object: {\n              get: function get() {\n                return this.node;\n              },\n              set: function set(val) {\n                this.node = val;\n              }\n            },\n            isRead: {\n              get: function get() {\n                return (this.flags & 2097155) !== 1;\n              }\n            },\n            isWrite: {\n              get: function get() {\n                return (this.flags & 2097155) !== 0;\n              }\n            },\n            isAppend: {\n              get: function get() {\n                return this.flags & 1024;\n              }\n            }\n          };\n        }\n        var newStream = new FS.FSStream();\n        for (var p in stream) {\n          newStream[p] = stream[p];\n        }\n        stream = newStream;\n        var fd = FS.nextfd(fd_start, fd_end);\n        stream.fd = fd;\n        FS.streams[fd] = stream;\n        return stream;\n      },\n      closeStream: function closeStream(fd) {\n        FS.streams[fd] = null;\n      },\n      chrdev_stream_ops: {\n        open: function open(stream) {\n          var device = FS.getDevice(stream.node.rdev);\n          stream.stream_ops = device.stream_ops;\n          if (stream.stream_ops.open) {\n            stream.stream_ops.open(stream);\n          }\n        },\n        llseek: function llseek() {\n          throw new FS.ErrnoError(70);\n        }\n      },\n      major: function major(dev) {\n        return dev >> 8;\n      },\n      minor: function minor(dev) {\n        return dev & 255;\n      },\n      makedev: function makedev(ma, mi) {\n        return ma << 8 | mi;\n      },\n      registerDevice: function registerDevice(dev, ops) {\n        FS.devices[dev] = {\n          stream_ops: ops\n        };\n      },\n      getDevice: function getDevice(dev) {\n        return FS.devices[dev];\n      },\n      getMounts: function getMounts(mount) {\n        var mounts = [];\n        var check = [mount];\n        while (check.length) {\n          var m = check.pop();\n          mounts.push(m);\n          check.push.apply(check, m.mounts);\n        }\n        return mounts;\n      },\n      syncfs: function syncfs(populate, callback) {\n        if (typeof populate === \"function\") {\n          callback = populate;\n          populate = false;\n        }\n        FS.syncFSRequests++;\n        if (FS.syncFSRequests > 1) {\n          err(\"warning: \" + FS.syncFSRequests + \" FS.syncfs operations in flight at once, probably just doing extra work\");\n        }\n        var mounts = FS.getMounts(FS.root.mount);\n        var completed = 0;\n        function doCallback(errCode) {\n          FS.syncFSRequests--;\n          return callback(errCode);\n        }\n        function done(errCode) {\n          if (errCode) {\n            if (!done.errored) {\n              done.errored = true;\n              return doCallback(errCode);\n            }\n            return;\n          }\n          if (++completed >= mounts.length) {\n            doCallback(null);\n          }\n        }\n        mounts.forEach(function (mount) {\n          if (!mount.type.syncfs) {\n            return done(null);\n          }\n          mount.type.syncfs(mount, populate, done);\n        });\n      },\n      mount: function mount(type, opts, mountpoint) {\n        var root = mountpoint === \"/\";\n        var pseudo = !mountpoint;\n        var node;\n        if (root && FS.root) {\n          throw new FS.ErrnoError(10);\n        } else if (!root && !pseudo) {\n          var lookup = FS.lookupPath(mountpoint, {\n            follow_mount: false\n          });\n          mountpoint = lookup.path;\n          node = lookup.node;\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n          if (!FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n        }\n        var mount = {\n          type: type,\n          opts: opts,\n          mountpoint: mountpoint,\n          mounts: []\n        };\n        var mountRoot = type.mount(mount);\n        mountRoot.mount = mount;\n        mount.root = mountRoot;\n        if (root) {\n          FS.root = mountRoot;\n        } else if (node) {\n          node.mounted = mount;\n          if (node.mount) {\n            node.mount.mounts.push(mount);\n          }\n        }\n        return mountRoot;\n      },\n      unmount: function unmount(mountpoint) {\n        var lookup = FS.lookupPath(mountpoint, {\n          follow_mount: false\n        });\n        if (!FS.isMountpoint(lookup.node)) {\n          throw new FS.ErrnoError(28);\n        }\n        var node = lookup.node;\n        var mount = node.mounted;\n        var mounts = FS.getMounts(mount);\n        Object.keys(FS.nameTable).forEach(function (hash) {\n          var current = FS.nameTable[hash];\n          while (current) {\n            var next = current.name_next;\n            if (mounts.includes(current.mount)) {\n              FS.destroyNode(current);\n            }\n            current = next;\n          }\n        });\n        node.mounted = null;\n        var idx = node.mount.mounts.indexOf(mount);\n        node.mount.mounts.splice(idx, 1);\n      },\n      lookup: function lookup(parent, name) {\n        return parent.node_ops.lookup(parent, name);\n      },\n      mknod: function mknod(path, mode, dev) {\n        var lookup = FS.lookupPath(path, {\n          parent: true\n        });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        if (!name || name === \".\" || name === \"..\") {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.mayCreate(parent, name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.mknod) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.mknod(parent, name, mode, dev);\n      },\n      create: function create(path, mode) {\n        mode = mode !== undefined ? mode : 438;\n        mode &= 4095;\n        mode |= 32768;\n        return FS.mknod(path, mode, 0);\n      },\n      mkdir: function mkdir(path, mode) {\n        mode = mode !== undefined ? mode : 511;\n        mode &= 511 | 512;\n        mode |= 16384;\n        return FS.mknod(path, mode, 0);\n      },\n      mkdirTree: function mkdirTree(path, mode) {\n        var dirs = path.split(\"/\");\n        var d = \"\";\n        for (var i = 0; i < dirs.length; ++i) {\n          if (!dirs[i]) continue;\n          d += \"/\" + dirs[i];\n          try {\n            FS.mkdir(d, mode);\n          } catch (e) {\n            if (e.errno != 20) throw e;\n          }\n        }\n      },\n      mkdev: function mkdev(path, mode, dev) {\n        if (typeof dev === \"undefined\") {\n          dev = mode;\n          mode = 438;\n        }\n        mode |= 8192;\n        return FS.mknod(path, mode, dev);\n      },\n      symlink: function symlink(oldpath, newpath) {\n        if (!PATH_FS.resolve(oldpath)) {\n          throw new FS.ErrnoError(44);\n        }\n        var lookup = FS.lookupPath(newpath, {\n          parent: true\n        });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var newname = PATH.basename(newpath);\n        var errCode = FS.mayCreate(parent, newname);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.symlink) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.symlink(parent, newname, oldpath);\n      },\n      rename: function rename(old_path, new_path) {\n        var old_dirname = PATH.dirname(old_path);\n        var new_dirname = PATH.dirname(new_path);\n        var old_name = PATH.basename(old_path);\n        var new_name = PATH.basename(new_path);\n        var lookup, old_dir, new_dir;\n        lookup = FS.lookupPath(old_path, {\n          parent: true\n        });\n        old_dir = lookup.node;\n        lookup = FS.lookupPath(new_path, {\n          parent: true\n        });\n        new_dir = lookup.node;\n        if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\n        if (old_dir.mount !== new_dir.mount) {\n          throw new FS.ErrnoError(75);\n        }\n        var old_node = FS.lookupNode(old_dir, old_name);\n        var relative = PATH_FS.relative(old_path, new_dirname);\n        if (relative.charAt(0) !== \".\") {\n          throw new FS.ErrnoError(28);\n        }\n        relative = PATH_FS.relative(new_path, old_dirname);\n        if (relative.charAt(0) !== \".\") {\n          throw new FS.ErrnoError(55);\n        }\n        var new_node;\n        try {\n          new_node = FS.lookupNode(new_dir, new_name);\n        } catch (e) {}\n        if (old_node === new_node) {\n          return;\n        }\n        var isdir = FS.isDir(old_node.mode);\n        var errCode = FS.mayDelete(old_dir, old_name, isdir);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!old_dir.node_ops.rename) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {\n          throw new FS.ErrnoError(10);\n        }\n        if (new_dir !== old_dir) {\n          errCode = FS.nodePermissions(old_dir, \"w\");\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n        FS.hashRemoveNode(old_node);\n        try {\n          old_dir.node_ops.rename(old_node, new_dir, new_name);\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.hashAddNode(old_node);\n        }\n      },\n      rmdir: function rmdir(path) {\n        var lookup = FS.lookupPath(path, {\n          parent: true\n        });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, true);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.rmdir) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.rmdir(parent, name);\n        FS.destroyNode(node);\n      },\n      readdir: function readdir(path) {\n        var lookup = FS.lookupPath(path, {\n          follow: true\n        });\n        var node = lookup.node;\n        if (!node.node_ops.readdir) {\n          throw new FS.ErrnoError(54);\n        }\n        return node.node_ops.readdir(node);\n      },\n      unlink: function unlink(path) {\n        var lookup = FS.lookupPath(path, {\n          parent: true\n        });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, false);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.unlink) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.unlink(parent, name);\n        FS.destroyNode(node);\n      },\n      readlink: function readlink(path) {\n        var lookup = FS.lookupPath(path);\n        var link = lookup.node;\n        if (!link) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!link.node_ops.readlink) {\n          throw new FS.ErrnoError(28);\n        }\n        return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\n      },\n      stat: function stat(path, dontFollow) {\n        var lookup = FS.lookupPath(path, {\n          follow: !dontFollow\n        });\n        var node = lookup.node;\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!node.node_ops.getattr) {\n          throw new FS.ErrnoError(63);\n        }\n        return node.node_ops.getattr(node);\n      },\n      lstat: function lstat(path) {\n        return FS.stat(path, true);\n      },\n      chmod: function chmod(path, mode, dontFollow) {\n        var node;\n        if (typeof path === \"string\") {\n          var lookup = FS.lookupPath(path, {\n            follow: !dontFollow\n          });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          mode: mode & 4095 | node.mode & ~4095,\n          timestamp: Date.now()\n        });\n      },\n      lchmod: function lchmod(path, mode) {\n        FS.chmod(path, mode, true);\n      },\n      fchmod: function fchmod(fd, mode) {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        FS.chmod(stream.node, mode);\n      },\n      chown: function chown(path, uid, gid, dontFollow) {\n        var node;\n        if (typeof path === \"string\") {\n          var lookup = FS.lookupPath(path, {\n            follow: !dontFollow\n          });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          timestamp: Date.now()\n        });\n      },\n      lchown: function lchown(path, uid, gid) {\n        FS.chown(path, uid, gid, true);\n      },\n      fchown: function fchown(fd, uid, gid) {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        FS.chown(stream.node, uid, gid);\n      },\n      truncate: function truncate(path, len) {\n        if (len < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        var node;\n        if (typeof path === \"string\") {\n          var lookup = FS.lookupPath(path, {\n            follow: true\n          });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!FS.isFile(node.mode)) {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.nodePermissions(node, \"w\");\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        node.node_ops.setattr(node, {\n          size: len,\n          timestamp: Date.now()\n        });\n      },\n      ftruncate: function ftruncate(fd, len) {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(28);\n        }\n        FS.truncate(stream.node, len);\n      },\n      utime: function utime(path, atime, mtime) {\n        var lookup = FS.lookupPath(path, {\n          follow: true\n        });\n        var node = lookup.node;\n        node.node_ops.setattr(node, {\n          timestamp: Math.max(atime, mtime)\n        });\n      },\n      open: function open(path, flags, mode, fd_start, fd_end) {\n        if (path === \"\") {\n          throw new FS.ErrnoError(44);\n        }\n        flags = typeof flags === \"string\" ? FS.modeStringToFlags(flags) : flags;\n        mode = typeof mode === \"undefined\" ? 438 : mode;\n        if (flags & 64) {\n          mode = mode & 4095 | 32768;\n        } else {\n          mode = 0;\n        }\n        var node;\n        if (typeof path === \"object\") {\n          node = path;\n        } else {\n          path = PATH.normalize(path);\n          try {\n            var lookup = FS.lookupPath(path, {\n              follow: !(flags & 131072)\n            });\n            node = lookup.node;\n          } catch (e) {}\n        }\n        var created = false;\n        if (flags & 64) {\n          if (node) {\n            if (flags & 128) {\n              throw new FS.ErrnoError(20);\n            }\n          } else {\n            node = FS.mknod(path, mode, 0);\n            created = true;\n          }\n        }\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n        if (FS.isChrdev(node.mode)) {\n          flags &= ~512;\n        }\n        if (flags & 65536 && !FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n        if (!created) {\n          var errCode = FS.mayOpen(node, flags);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n        if (flags & 512) {\n          FS.truncate(node, 0);\n        }\n        flags &= ~(128 | 512 | 131072);\n        var stream = FS.createStream({\n          node: node,\n          path: FS.getPath(node),\n          id: node.id,\n          flags: flags,\n          mode: node.mode,\n          seekable: true,\n          position: 0,\n          stream_ops: node.stream_ops,\n          node_ops: node.node_ops,\n          ungotten: [],\n          error: false\n        }, fd_start, fd_end);\n        if (stream.stream_ops.open) {\n          stream.stream_ops.open(stream);\n        }\n        if (Module[\"logReadFiles\"] && !(flags & 1)) {\n          if (!FS.readFiles) FS.readFiles = {};\n          if (!(path in FS.readFiles)) {\n            FS.readFiles[path] = 1;\n          }\n        }\n        return stream;\n      },\n      close: function close(stream) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (stream.getdents) stream.getdents = null;\n        try {\n          if (stream.stream_ops.close) {\n            stream.stream_ops.close(stream);\n          }\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.closeStream(stream.fd);\n        }\n        stream.fd = null;\n      },\n      isClosed: function isClosed(stream) {\n        return stream.fd === null;\n      },\n      llseek: function llseek(stream, offset, whence) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!stream.seekable || !stream.stream_ops.llseek) {\n          throw new FS.ErrnoError(70);\n        }\n        if (whence != 0 && whence != 1 && whence != 2) {\n          throw new FS.ErrnoError(28);\n        }\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\n        stream.ungotten = [];\n        return stream.position;\n      },\n      read: function read(stream, buffer, offset, length, position) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.read) {\n          throw new FS.ErrnoError(28);\n        }\n        var seeking = typeof position !== \"undefined\";\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\n        if (!seeking) stream.position += bytesRead;\n        return bytesRead;\n      },\n      write: function write(stream, buffer, offset, length, position, canOwn) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.write) {\n          throw new FS.ErrnoError(28);\n        }\n        if (stream.seekable && stream.flags & 1024) {\n          FS.llseek(stream, 0, 2);\n        }\n        var seeking = typeof position !== \"undefined\";\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\n        if (!seeking) stream.position += bytesWritten;\n        return bytesWritten;\n      },\n      allocate: function allocate(stream, offset, length) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (offset < 0 || length <= 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (!stream.stream_ops.allocate) {\n          throw new FS.ErrnoError(138);\n        }\n        stream.stream_ops.allocate(stream, offset, length);\n      },\n      mmap: function mmap(stream, address, length, position, prot, flags) {\n        if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {\n          throw new FS.ErrnoError(2);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(2);\n        }\n        if (!stream.stream_ops.mmap) {\n          throw new FS.ErrnoError(43);\n        }\n        return stream.stream_ops.mmap(stream, address, length, position, prot, flags);\n      },\n      msync: function msync(stream, buffer, offset, length, mmapFlags) {\n        if (!stream || !stream.stream_ops.msync) {\n          return 0;\n        }\n        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);\n      },\n      munmap: function munmap(stream) {\n        return 0;\n      },\n      ioctl: function ioctl(stream, cmd, arg) {\n        if (!stream.stream_ops.ioctl) {\n          throw new FS.ErrnoError(59);\n        }\n        return stream.stream_ops.ioctl(stream, cmd, arg);\n      },\n      readFile: function readFile(path, opts) {\n        opts = opts || {};\n        opts.flags = opts.flags || 0;\n        opts.encoding = opts.encoding || \"binary\";\n        if (opts.encoding !== \"utf8\" && opts.encoding !== \"binary\") {\n          throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\n        }\n        var ret;\n        var stream = FS.open(path, opts.flags);\n        var stat = FS.stat(path);\n        var length = stat.size;\n        var buf = new Uint8Array(length);\n        FS.read(stream, buf, 0, length, 0);\n        if (opts.encoding === \"utf8\") {\n          ret = UTF8ArrayToString(buf, 0);\n        } else if (opts.encoding === \"binary\") {\n          ret = buf;\n        }\n        FS.close(stream);\n        return ret;\n      },\n      writeFile: function writeFile(path, data, opts) {\n        opts = opts || {};\n        opts.flags = opts.flags || 577;\n        var stream = FS.open(path, opts.flags, opts.mode);\n        if (typeof data === \"string\") {\n          var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\n          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\n        } else if (ArrayBuffer.isView(data)) {\n          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\n        } else {\n          throw new Error(\"Unsupported data type\");\n        }\n        FS.close(stream);\n      },\n      cwd: function cwd() {\n        return FS.currentPath;\n      },\n      chdir: function chdir(path) {\n        var lookup = FS.lookupPath(path, {\n          follow: true\n        });\n        if (lookup.node === null) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!FS.isDir(lookup.node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n        var errCode = FS.nodePermissions(lookup.node, \"x\");\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        FS.currentPath = lookup.path;\n      },\n      createDefaultDirectories: function createDefaultDirectories() {\n        FS.mkdir(\"/tmp\");\n        FS.mkdir(\"/home\");\n        FS.mkdir(\"/home/web_user\");\n      },\n      createDefaultDevices: function createDefaultDevices() {\n        FS.mkdir(\"/dev\");\n        FS.registerDevice(FS.makedev(1, 3), {\n          read: function read() {\n            return 0;\n          },\n          write: function write(stream, buffer, offset, length, pos) {\n            return length;\n          }\n        });\n        FS.mkdev(\"/dev/null\", FS.makedev(1, 3));\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n        FS.mkdev(\"/dev/tty\", FS.makedev(5, 0));\n        FS.mkdev(\"/dev/tty1\", FS.makedev(6, 0));\n        var random_device = getRandomDevice();\n        FS.createDevice(\"/dev\", \"random\", random_device);\n        FS.createDevice(\"/dev\", \"urandom\", random_device);\n        FS.mkdir(\"/dev/shm\");\n        FS.mkdir(\"/dev/shm/tmp\");\n      },\n      createSpecialDirectories: function createSpecialDirectories() {\n        FS.mkdir(\"/proc\");\n        var proc_self = FS.mkdir(\"/proc/self\");\n        FS.mkdir(\"/proc/self/fd\");\n        FS.mount({\n          mount: function mount() {\n            var node = FS.createNode(proc_self, \"fd\", 16384 | 511, 73);\n            node.node_ops = {\n              lookup: function lookup(parent, name) {\n                var fd = +name;\n                var stream = FS.getStream(fd);\n                if (!stream) throw new FS.ErrnoError(8);\n                var ret = {\n                  parent: null,\n                  mount: {\n                    mountpoint: \"fake\"\n                  },\n                  node_ops: {\n                    readlink: function readlink() {\n                      return stream.path;\n                    }\n                  }\n                };\n                ret.parent = ret;\n                return ret;\n              }\n            };\n            return node;\n          }\n        }, {}, \"/proc/self/fd\");\n      },\n      createStandardStreams: function createStandardStreams() {\n        if (Module[\"stdin\"]) {\n          FS.createDevice(\"/dev\", \"stdin\", Module[\"stdin\"]);\n        } else {\n          FS.symlink(\"/dev/tty\", \"/dev/stdin\");\n        }\n        if (Module[\"stdout\"]) {\n          FS.createDevice(\"/dev\", \"stdout\", null, Module[\"stdout\"]);\n        } else {\n          FS.symlink(\"/dev/tty\", \"/dev/stdout\");\n        }\n        if (Module[\"stderr\"]) {\n          FS.createDevice(\"/dev\", \"stderr\", null, Module[\"stderr\"]);\n        } else {\n          FS.symlink(\"/dev/tty1\", \"/dev/stderr\");\n        }\n        var stdin = FS.open(\"/dev/stdin\", 0);\n        var stdout = FS.open(\"/dev/stdout\", 1);\n        var stderr = FS.open(\"/dev/stderr\", 1);\n      },\n      ensureErrnoError: function ensureErrnoError() {\n        if (FS.ErrnoError) return;\n        FS.ErrnoError = function ErrnoError(errno, node) {\n          this.node = node;\n          this.setErrno = function (errno) {\n            this.errno = errno;\n          };\n          this.setErrno(errno);\n          this.message = \"FS error\";\n        };\n        FS.ErrnoError.prototype = new Error();\n        FS.ErrnoError.prototype.constructor = FS.ErrnoError;\n        [44].forEach(function (code) {\n          FS.genericErrors[code] = new FS.ErrnoError(code);\n          FS.genericErrors[code].stack = \"<generic error, no stack>\";\n        });\n      },\n      staticInit: function staticInit() {\n        FS.ensureErrnoError();\n        FS.nameTable = new Array(4096);\n        FS.mount(MEMFS, {}, \"/\");\n        FS.createDefaultDirectories();\n        FS.createDefaultDevices();\n        FS.createSpecialDirectories();\n        FS.filesystems = {\n          \"MEMFS\": MEMFS\n        };\n      },\n      init: function init(input, output, error) {\n        FS.init.initialized = true;\n        FS.ensureErrnoError();\n        Module[\"stdin\"] = input || Module[\"stdin\"];\n        Module[\"stdout\"] = output || Module[\"stdout\"];\n        Module[\"stderr\"] = error || Module[\"stderr\"];\n        FS.createStandardStreams();\n      },\n      quit: function quit() {\n        FS.init.initialized = false;\n        var fflush = Module[\"_fflush\"];\n        if (fflush) fflush(0);\n        for (var i = 0; i < FS.streams.length; i++) {\n          var stream = FS.streams[i];\n          if (!stream) {\n            continue;\n          }\n          FS.close(stream);\n        }\n      },\n      getMode: function getMode(canRead, canWrite) {\n        var mode = 0;\n        if (canRead) mode |= 292 | 73;\n        if (canWrite) mode |= 146;\n        return mode;\n      },\n      findObject: function findObject(path, dontResolveLastLink) {\n        var ret = FS.analyzePath(path, dontResolveLastLink);\n        if (ret.exists) {\n          return ret.object;\n        } else {\n          return null;\n        }\n      },\n      analyzePath: function analyzePath(path, dontResolveLastLink) {\n        try {\n          var lookup = FS.lookupPath(path, {\n            follow: !dontResolveLastLink\n          });\n          path = lookup.path;\n        } catch (e) {}\n        var ret = {\n          isRoot: false,\n          exists: false,\n          error: 0,\n          name: null,\n          path: null,\n          object: null,\n          parentExists: false,\n          parentPath: null,\n          parentObject: null\n        };\n        try {\n          var lookup = FS.lookupPath(path, {\n            parent: true\n          });\n          ret.parentExists = true;\n          ret.parentPath = lookup.path;\n          ret.parentObject = lookup.node;\n          ret.name = PATH.basename(path);\n          lookup = FS.lookupPath(path, {\n            follow: !dontResolveLastLink\n          });\n          ret.exists = true;\n          ret.path = lookup.path;\n          ret.object = lookup.node;\n          ret.name = lookup.node.name;\n          ret.isRoot = lookup.path === \"/\";\n        } catch (e) {\n          ret.error = e.errno;\n        }\n        return ret;\n      },\n      createPath: function createPath(parent, path, canRead, canWrite) {\n        parent = typeof parent === \"string\" ? parent : FS.getPath(parent);\n        var parts = path.split(\"/\").reverse();\n        while (parts.length) {\n          var part = parts.pop();\n          if (!part) continue;\n          var current = PATH.join2(parent, part);\n          try {\n            FS.mkdir(current);\n          } catch (e) {}\n          parent = current;\n        }\n        return current;\n      },\n      createFile: function createFile(parent, name, properties, canRead, canWrite) {\n        var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name);\n        var mode = FS.getMode(canRead, canWrite);\n        return FS.create(path, mode);\n      },\n      createDataFile: function createDataFile(parent, name, data, canRead, canWrite, canOwn) {\n        var path = name ? PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name) : parent;\n        var mode = FS.getMode(canRead, canWrite);\n        var node = FS.create(path, mode);\n        if (data) {\n          if (typeof data === \"string\") {\n            var arr = new Array(data.length);\n            for (var i = 0, len = data.length; i < len; ++i) {\n              arr[i] = data.charCodeAt(i);\n            }\n            data = arr;\n          }\n          FS.chmod(node, mode | 146);\n          var stream = FS.open(node, 577);\n          FS.write(stream, data, 0, data.length, 0, canOwn);\n          FS.close(stream);\n          FS.chmod(node, mode);\n        }\n        return node;\n      },\n      createDevice: function createDevice(parent, name, input, output) {\n        var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name);\n        var mode = FS.getMode(!!input, !!output);\n        if (!FS.createDevice.major) FS.createDevice.major = 64;\n        var dev = FS.makedev(FS.createDevice.major++, 0);\n        FS.registerDevice(dev, {\n          open: function open(stream) {\n            stream.seekable = false;\n          },\n          close: function close(stream) {\n            if (output && output.buffer && output.buffer.length) {\n              output(10);\n            }\n          },\n          read: function read(stream, buffer, offset, length, pos) {\n            var bytesRead = 0;\n            for (var i = 0; i < length; i++) {\n              var result;\n              try {\n                result = input();\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n              if (result === undefined && bytesRead === 0) {\n                throw new FS.ErrnoError(6);\n              }\n              if (result === null || result === undefined) break;\n              bytesRead++;\n              buffer[offset + i] = result;\n            }\n            if (bytesRead) {\n              stream.node.timestamp = Date.now();\n            }\n            return bytesRead;\n          },\n          write: function write(stream, buffer, offset, length, pos) {\n            for (var i = 0; i < length; i++) {\n              try {\n                output(buffer[offset + i]);\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n            }\n            if (length) {\n              stream.node.timestamp = Date.now();\n            }\n            return i;\n          }\n        });\n        return FS.mkdev(path, mode, dev);\n      },\n      forceLoadFile: function forceLoadFile(obj) {\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;\n        if (typeof XMLHttpRequest !== \"undefined\") {\n          throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\n        } else if (read_) {\n          try {\n            obj.contents = intArrayFromString(read_(obj.url), true);\n            obj.usedBytes = obj.contents.length;\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n        } else {\n          throw new Error(\"Cannot load without read() or XMLHttpRequest.\");\n        }\n      },\n      createLazyFile: function createLazyFile(parent, name, url, canRead, canWrite) {\n        function LazyUint8Array() {\n          this.lengthKnown = false;\n          this.chunks = [];\n        }\n        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {\n          if (idx > this.length - 1 || idx < 0) {\n            return undefined;\n          }\n          var chunkOffset = idx % this.chunkSize;\n          var chunkNum = idx / this.chunkSize | 0;\n          return this.getter(chunkNum)[chunkOffset];\n        };\n        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\n          this.getter = getter;\n        };\n        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\n          var xhr = new XMLHttpRequest();\n          xhr.open(\"HEAD\", url, false);\n          xhr.send(null);\n          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n          var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\n          var header;\n          var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\n          var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\n          var chunkSize = 1024 * 1024;\n          if (!hasByteServing) chunkSize = datalength;\n          var doXHR = function doXHR(from, to) {\n            if (from > to) throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\n            if (to > datalength - 1) throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"GET\", url, false);\n            if (datalength !== chunkSize) xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\n            if (typeof Uint8Array != \"undefined\") xhr.responseType = \"arraybuffer\";\n            if (xhr.overrideMimeType) {\n              xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\n            }\n            xhr.send(null);\n            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n            if (xhr.response !== undefined) {\n              return new Uint8Array(xhr.response || []);\n            } else {\n              return intArrayFromString(xhr.responseText || \"\", true);\n            }\n          };\n          var lazyArray = this;\n          lazyArray.setDataGetter(function (chunkNum) {\n            var start = chunkNum * chunkSize;\n            var end = (chunkNum + 1) * chunkSize - 1;\n            end = Math.min(end, datalength - 1);\n            if (typeof lazyArray.chunks[chunkNum] === \"undefined\") {\n              lazyArray.chunks[chunkNum] = doXHR(start, end);\n            }\n            if (typeof lazyArray.chunks[chunkNum] === \"undefined\") throw new Error(\"doXHR failed!\");\n            return lazyArray.chunks[chunkNum];\n          });\n          if (usesGzip || !datalength) {\n            chunkSize = datalength = 1;\n            datalength = this.getter(0).length;\n            chunkSize = datalength;\n            out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\n          }\n          this._length = datalength;\n          this._chunkSize = chunkSize;\n          this.lengthKnown = true;\n        };\n        if (typeof XMLHttpRequest !== \"undefined\") {\n          if (!ENVIRONMENT_IS_WORKER) throw \"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";\n          var lazyArray = new LazyUint8Array();\n          Object.defineProperties(lazyArray, {\n            length: {\n              get: function get() {\n                if (!this.lengthKnown) {\n                  this.cacheLength();\n                }\n                return this._length;\n              }\n            },\n            chunkSize: {\n              get: function get() {\n                if (!this.lengthKnown) {\n                  this.cacheLength();\n                }\n                return this._chunkSize;\n              }\n            }\n          });\n          var properties = {\n            isDevice: false,\n            contents: lazyArray\n          };\n        } else {\n          var properties = {\n            isDevice: false,\n            url: url\n          };\n        }\n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\n        if (properties.contents) {\n          node.contents = properties.contents;\n        } else if (properties.url) {\n          node.contents = null;\n          node.url = properties.url;\n        }\n        Object.defineProperties(node, {\n          usedBytes: {\n            get: function get() {\n              return this.contents.length;\n            }\n          }\n        });\n        var stream_ops = {};\n        var keys = Object.keys(node.stream_ops);\n        keys.forEach(function (key) {\n          var fn = node.stream_ops[key];\n          stream_ops[key] = function forceLoadLazyFile() {\n            FS.forceLoadFile(node);\n            return fn.apply(null, arguments);\n          };\n        });\n        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {\n          FS.forceLoadFile(node);\n          var contents = stream.node.contents;\n          if (position >= contents.length) return 0;\n          var size = Math.min(contents.length - position, length);\n          if (contents.slice) {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents[position + i];\n            }\n          } else {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents.get(position + i);\n            }\n          }\n          return size;\n        };\n        node.stream_ops = stream_ops;\n        return node;\n      },\n      createPreloadedFile: function createPreloadedFile(parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {\n        Browser.init();\n        var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\n        var dep = getUniqueRunDependency(\"cp \" + fullname);\n        function processData(byteArray) {\n          function finish(byteArray) {\n            if (preFinish) preFinish();\n            if (!dontCreateFile) {\n              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);\n            }\n            if (onload) onload();\n            removeRunDependency(dep);\n          }\n          var handled = false;\n          Module[\"preloadPlugins\"].forEach(function (plugin) {\n            if (handled) return;\n            if (plugin[\"canHandle\"](fullname)) {\n              plugin[\"handle\"](byteArray, fullname, finish, function () {\n                if (onerror) onerror();\n                removeRunDependency(dep);\n              });\n              handled = true;\n            }\n          });\n          if (!handled) finish(byteArray);\n        }\n        addRunDependency(dep);\n        if (typeof url == \"string\") {\n          asyncLoad(url, function (byteArray) {\n            processData(byteArray);\n          }, onerror);\n        } else {\n          processData(url);\n        }\n      },\n      indexedDB: function indexedDB() {\n        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n      },\n      DB_NAME: function DB_NAME() {\n        return \"EM_FS_\" + window.location.pathname;\n      },\n      DB_VERSION: 20,\n      DB_STORE_NAME: \"FILE_DATA\",\n      saveFilesToDB: function saveFilesToDB(paths, onload, onerror) {\n        onload = onload || function () {};\n        onerror = onerror || function () {};\n        var indexedDB = FS.indexedDB();\n        try {\n          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n        } catch (e) {\n          return onerror(e);\n        }\n        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {\n          out(\"creating db\");\n          var db = openRequest.result;\n          db.createObjectStore(FS.DB_STORE_NAME);\n        };\n        openRequest.onsuccess = function openRequest_onsuccess() {\n          var db = openRequest.result;\n          var transaction = db.transaction([FS.DB_STORE_NAME], \"readwrite\");\n          var files = transaction.objectStore(FS.DB_STORE_NAME);\n          var ok = 0,\n            fail = 0,\n            total = paths.length;\n          function finish() {\n            if (fail == 0) onload();else onerror();\n          }\n          paths.forEach(function (path) {\n            var putRequest = files.put(FS.analyzePath(path).object.contents, path);\n            putRequest.onsuccess = function putRequest_onsuccess() {\n              ok++;\n              if (ok + fail == total) finish();\n            };\n            putRequest.onerror = function putRequest_onerror() {\n              fail++;\n              if (ok + fail == total) finish();\n            };\n          });\n          transaction.onerror = onerror;\n        };\n        openRequest.onerror = onerror;\n      },\n      loadFilesFromDB: function loadFilesFromDB(paths, onload, onerror) {\n        onload = onload || function () {};\n        onerror = onerror || function () {};\n        var indexedDB = FS.indexedDB();\n        try {\n          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n        } catch (e) {\n          return onerror(e);\n        }\n        openRequest.onupgradeneeded = onerror;\n        openRequest.onsuccess = function openRequest_onsuccess() {\n          var db = openRequest.result;\n          try {\n            var transaction = db.transaction([FS.DB_STORE_NAME], \"readonly\");\n          } catch (e) {\n            onerror(e);\n            return;\n          }\n          var files = transaction.objectStore(FS.DB_STORE_NAME);\n          var ok = 0,\n            fail = 0,\n            total = paths.length;\n          function finish() {\n            if (fail == 0) onload();else onerror();\n          }\n          paths.forEach(function (path) {\n            var getRequest = files.get(path);\n            getRequest.onsuccess = function getRequest_onsuccess() {\n              if (FS.analyzePath(path).exists) {\n                FS.unlink(path);\n              }\n              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);\n              ok++;\n              if (ok + fail == total) finish();\n            };\n            getRequest.onerror = function getRequest_onerror() {\n              fail++;\n              if (ok + fail == total) finish();\n            };\n          });\n          transaction.onerror = onerror;\n        };\n        openRequest.onerror = onerror;\n      }\n    };\n    var SYSCALLS = {\n      mappings: {},\n      DEFAULT_POLLMASK: 5,\n      calculateAt: function calculateAt(dirfd, path, allowEmpty) {\n        if (path[0] === \"/\") {\n          return path;\n        }\n        var dir;\n        if (dirfd === -100) {\n          dir = FS.cwd();\n        } else {\n          var dirstream = FS.getStream(dirfd);\n          if (!dirstream) throw new FS.ErrnoError(8);\n          dir = dirstream.path;\n        }\n        if (path.length == 0) {\n          if (!allowEmpty) {\n            throw new FS.ErrnoError(44);\n          }\n          return dir;\n        }\n        return PATH.join2(dir, path);\n      },\n      doStat: function doStat(func, path, buf) {\n        try {\n          var stat = func(path);\n        } catch (e) {\n          if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\n            return -54;\n          }\n          throw e;\n        }\n        HEAP32[buf >> 2] = stat.dev;\n        HEAP32[buf + 4 >> 2] = 0;\n        HEAP32[buf + 8 >> 2] = stat.ino;\n        HEAP32[buf + 12 >> 2] = stat.mode;\n        HEAP32[buf + 16 >> 2] = stat.nlink;\n        HEAP32[buf + 20 >> 2] = stat.uid;\n        HEAP32[buf + 24 >> 2] = stat.gid;\n        HEAP32[buf + 28 >> 2] = stat.rdev;\n        HEAP32[buf + 32 >> 2] = 0;\n        tempI64 = [stat.size >>> 0, (tempDouble = stat.size, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 40 >> 2] = tempI64[0], HEAP32[buf + 44 >> 2] = tempI64[1];\n        HEAP32[buf + 48 >> 2] = 4096;\n        HEAP32[buf + 52 >> 2] = stat.blocks;\n        HEAP32[buf + 56 >> 2] = stat.atime.getTime() / 1e3 | 0;\n        HEAP32[buf + 60 >> 2] = 0;\n        HEAP32[buf + 64 >> 2] = stat.mtime.getTime() / 1e3 | 0;\n        HEAP32[buf + 68 >> 2] = 0;\n        HEAP32[buf + 72 >> 2] = stat.ctime.getTime() / 1e3 | 0;\n        HEAP32[buf + 76 >> 2] = 0;\n        tempI64 = [stat.ino >>> 0, (tempDouble = stat.ino, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 80 >> 2] = tempI64[0], HEAP32[buf + 84 >> 2] = tempI64[1];\n        return 0;\n      },\n      doMsync: function doMsync(addr, stream, len, flags, offset) {\n        var buffer = HEAPU8.slice(addr, addr + len);\n        FS.msync(stream, buffer, offset, len, flags);\n      },\n      doMkdir: function doMkdir(path, mode) {\n        path = PATH.normalize(path);\n        if (path[path.length - 1] === \"/\") path = path.substr(0, path.length - 1);\n        FS.mkdir(path, mode, 0);\n        return 0;\n      },\n      doMknod: function doMknod(path, mode, dev) {\n        switch (mode & 61440) {\n          case 32768:\n          case 8192:\n          case 24576:\n          case 4096:\n          case 49152:\n            break;\n          default:\n            return -28;\n        }\n        FS.mknod(path, mode, dev);\n        return 0;\n      },\n      doReadlink: function doReadlink(path, buf, bufsize) {\n        if (bufsize <= 0) return -28;\n        var ret = FS.readlink(path);\n        var len = Math.min(bufsize, lengthBytesUTF8(ret));\n        var endChar = HEAP8[buf + len];\n        stringToUTF8(ret, buf, bufsize + 1);\n        HEAP8[buf + len] = endChar;\n        return len;\n      },\n      doAccess: function doAccess(path, amode) {\n        if (amode & ~7) {\n          return -28;\n        }\n        var node;\n        var lookup = FS.lookupPath(path, {\n          follow: true\n        });\n        node = lookup.node;\n        if (!node) {\n          return -44;\n        }\n        var perms = \"\";\n        if (amode & 4) perms += \"r\";\n        if (amode & 2) perms += \"w\";\n        if (amode & 1) perms += \"x\";\n        if (perms && FS.nodePermissions(node, perms)) {\n          return -2;\n        }\n        return 0;\n      },\n      doDup: function doDup(path, flags, suggestFD) {\n        var suggest = FS.getStream(suggestFD);\n        if (suggest) FS.close(suggest);\n        return FS.open(path, flags, 0, suggestFD, suggestFD).fd;\n      },\n      doReadv: function doReadv(stream, iov, iovcnt, offset) {\n        var ret = 0;\n        for (var i = 0; i < iovcnt; i++) {\n          var ptr = HEAP32[iov + i * 8 >> 2];\n          var len = HEAP32[iov + (i * 8 + 4) >> 2];\n          var curr = FS.read(stream, HEAP8, ptr, len, offset);\n          if (curr < 0) return -1;\n          ret += curr;\n          if (curr < len) break;\n        }\n        return ret;\n      },\n      doWritev: function doWritev(stream, iov, iovcnt, offset) {\n        var ret = 0;\n        for (var i = 0; i < iovcnt; i++) {\n          var ptr = HEAP32[iov + i * 8 >> 2];\n          var len = HEAP32[iov + (i * 8 + 4) >> 2];\n          var curr = FS.write(stream, HEAP8, ptr, len, offset);\n          if (curr < 0) return -1;\n          ret += curr;\n        }\n        return ret;\n      },\n      varargs: undefined,\n      get: function get() {\n        SYSCALLS.varargs += 4;\n        var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];\n        return ret;\n      },\n      getStr: function getStr(ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n      },\n      getStreamFromFD: function getStreamFromFD(fd) {\n        var stream = FS.getStream(fd);\n        if (!stream) throw new FS.ErrnoError(8);\n        return stream;\n      },\n      get64: function get64(low, high) {\n        return low;\n      }\n    };\n    function _environ_get(__environ, environ_buf) {\n      var bufSize = 0;\n      getEnvStrings().forEach(function (string, i) {\n        var ptr = environ_buf + bufSize;\n        HEAP32[__environ + i * 4 >> 2] = ptr;\n        writeAsciiToMemory(string, ptr);\n        bufSize += string.length + 1;\n      });\n      return 0;\n    }\n    function _environ_sizes_get(penviron_count, penviron_buf_size) {\n      var strings = getEnvStrings();\n      HEAP32[penviron_count >> 2] = strings.length;\n      var bufSize = 0;\n      strings.forEach(function (string) {\n        bufSize += string.length + 1;\n      });\n      HEAP32[penviron_buf_size >> 2] = bufSize;\n      return 0;\n    }\n    function _fd_close(fd) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        FS.close(stream);\n        return 0;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return e.errno;\n      }\n    }\n    function _fd_read(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = SYSCALLS.doReadv(stream, iov, iovcnt);\n        HEAP32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return e.errno;\n      }\n    }\n    function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var HIGH_OFFSET = 4294967296;\n        var offset = offset_high * HIGH_OFFSET + (offset_low >>> 0);\n        var DOUBLE_LIMIT = 9007199254740992;\n        if (offset <= -DOUBLE_LIMIT || offset >= DOUBLE_LIMIT) {\n          return -61;\n        }\n        FS.llseek(stream, offset, whence);\n        tempI64 = [stream.position >>> 0, (tempDouble = stream.position, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[newOffset >> 2] = tempI64[0], HEAP32[newOffset + 4 >> 2] = tempI64[1];\n        if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null;\n        return 0;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return e.errno;\n      }\n    }\n    function _fd_write(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = SYSCALLS.doWritev(stream, iov, iovcnt);\n        HEAP32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return e.errno;\n      }\n    }\n    function _setTempRet0(val) {\n      setTempRet0(val);\n    }\n    function __isLeapYear(year) {\n      return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n    }\n    function __arraySum(array, index) {\n      var sum = 0;\n      for (var i = 0; i <= index; sum += array[i++]) {}\n      return sum;\n    }\n    var __MONTH_DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    var __MONTH_DAYS_REGULAR = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    function __addDays(date, days) {\n      var newDate = new Date(date.getTime());\n      while (days > 0) {\n        var leap = __isLeapYear(newDate.getFullYear());\n        var currentMonth = newDate.getMonth();\n        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];\n        if (days > daysInCurrentMonth - newDate.getDate()) {\n          days -= daysInCurrentMonth - newDate.getDate() + 1;\n          newDate.setDate(1);\n          if (currentMonth < 11) {\n            newDate.setMonth(currentMonth + 1);\n          } else {\n            newDate.setMonth(0);\n            newDate.setFullYear(newDate.getFullYear() + 1);\n          }\n        } else {\n          newDate.setDate(newDate.getDate() + days);\n          return newDate;\n        }\n      }\n      return newDate;\n    }\n    function _strftime(s, maxsize, format, tm) {\n      var tm_zone = HEAP32[tm + 40 >> 2];\n      var date = {\n        tm_sec: HEAP32[tm >> 2],\n        tm_min: HEAP32[tm + 4 >> 2],\n        tm_hour: HEAP32[tm + 8 >> 2],\n        tm_mday: HEAP32[tm + 12 >> 2],\n        tm_mon: HEAP32[tm + 16 >> 2],\n        tm_year: HEAP32[tm + 20 >> 2],\n        tm_wday: HEAP32[tm + 24 >> 2],\n        tm_yday: HEAP32[tm + 28 >> 2],\n        tm_isdst: HEAP32[tm + 32 >> 2],\n        tm_gmtoff: HEAP32[tm + 36 >> 2],\n        tm_zone: tm_zone ? UTF8ToString(tm_zone) : \"\"\n      };\n      var pattern = UTF8ToString(format);\n      var EXPANSION_RULES_1 = {\n        \"%c\": \"%a %b %d %H:%M:%S %Y\",\n        \"%D\": \"%m/%d/%y\",\n        \"%F\": \"%Y-%m-%d\",\n        \"%h\": \"%b\",\n        \"%r\": \"%I:%M:%S %p\",\n        \"%R\": \"%H:%M\",\n        \"%T\": \"%H:%M:%S\",\n        \"%x\": \"%m/%d/%y\",\n        \"%X\": \"%H:%M:%S\",\n        \"%Ec\": \"%c\",\n        \"%EC\": \"%C\",\n        \"%Ex\": \"%m/%d/%y\",\n        \"%EX\": \"%H:%M:%S\",\n        \"%Ey\": \"%y\",\n        \"%EY\": \"%Y\",\n        \"%Od\": \"%d\",\n        \"%Oe\": \"%e\",\n        \"%OH\": \"%H\",\n        \"%OI\": \"%I\",\n        \"%Om\": \"%m\",\n        \"%OM\": \"%M\",\n        \"%OS\": \"%S\",\n        \"%Ou\": \"%u\",\n        \"%OU\": \"%U\",\n        \"%OV\": \"%V\",\n        \"%Ow\": \"%w\",\n        \"%OW\": \"%W\",\n        \"%Oy\": \"%y\"\n      };\n      for (var rule in EXPANSION_RULES_1) {\n        pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_1[rule]);\n      }\n      var WEEKDAYS = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n      var MONTHS = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      function leadingSomething(value, digits, character) {\n        var str = typeof value === \"number\" ? value.toString() : value || \"\";\n        while (str.length < digits) {\n          str = character[0] + str;\n        }\n        return str;\n      }\n      function leadingNulls(value, digits) {\n        return leadingSomething(value, digits, \"0\");\n      }\n      function compareByDay(date1, date2) {\n        function sgn(value) {\n          return value < 0 ? -1 : value > 0 ? 1 : 0;\n        }\n        var compare;\n        if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {\n          if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {\n            compare = sgn(date1.getDate() - date2.getDate());\n          }\n        }\n        return compare;\n      }\n      function getFirstWeekStartDate(janFourth) {\n        switch (janFourth.getDay()) {\n          case 0:\n            return new Date(janFourth.getFullYear() - 1, 11, 29);\n          case 1:\n            return janFourth;\n          case 2:\n            return new Date(janFourth.getFullYear(), 0, 3);\n          case 3:\n            return new Date(janFourth.getFullYear(), 0, 2);\n          case 4:\n            return new Date(janFourth.getFullYear(), 0, 1);\n          case 5:\n            return new Date(janFourth.getFullYear() - 1, 11, 31);\n          case 6:\n            return new Date(janFourth.getFullYear() - 1, 11, 30);\n        }\n      }\n      function getWeekBasedYear(date) {\n        var thisDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);\n        var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\n        var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);\n        var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n        var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n        if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\n          if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\n            return thisDate.getFullYear() + 1;\n          } else {\n            return thisDate.getFullYear();\n          }\n        } else {\n          return thisDate.getFullYear() - 1;\n        }\n      }\n      var EXPANSION_RULES_2 = {\n        \"%a\": function a(date) {\n          return WEEKDAYS[date.tm_wday].substring(0, 3);\n        },\n        \"%A\": function A(date) {\n          return WEEKDAYS[date.tm_wday];\n        },\n        \"%b\": function b(date) {\n          return MONTHS[date.tm_mon].substring(0, 3);\n        },\n        \"%B\": function B(date) {\n          return MONTHS[date.tm_mon];\n        },\n        \"%C\": function C(date) {\n          var year = date.tm_year + 1900;\n          return leadingNulls(year / 100 | 0, 2);\n        },\n        \"%d\": function d(date) {\n          return leadingNulls(date.tm_mday, 2);\n        },\n        \"%e\": function e(date) {\n          return leadingSomething(date.tm_mday, 2, \" \");\n        },\n        \"%g\": function g(date) {\n          return getWeekBasedYear(date).toString().substring(2);\n        },\n        \"%G\": function G(date) {\n          return getWeekBasedYear(date);\n        },\n        \"%H\": function H(date) {\n          return leadingNulls(date.tm_hour, 2);\n        },\n        \"%I\": function I(date) {\n          var twelveHour = date.tm_hour;\n          if (twelveHour == 0) twelveHour = 12;else if (twelveHour > 12) twelveHour -= 12;\n          return leadingNulls(twelveHour, 2);\n        },\n        \"%j\": function j(date) {\n          return leadingNulls(date.tm_mday + __arraySum(__isLeapYear(date.tm_year + 1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon - 1), 3);\n        },\n        \"%m\": function m(date) {\n          return leadingNulls(date.tm_mon + 1, 2);\n        },\n        \"%M\": function M(date) {\n          return leadingNulls(date.tm_min, 2);\n        },\n        \"%n\": function n() {\n          return \"\\n\";\n        },\n        \"%p\": function p(date) {\n          if (date.tm_hour >= 0 && date.tm_hour < 12) {\n            return \"AM\";\n          } else {\n            return \"PM\";\n          }\n        },\n        \"%S\": function S(date) {\n          return leadingNulls(date.tm_sec, 2);\n        },\n        \"%t\": function t() {\n          return \"\\t\";\n        },\n        \"%u\": function u(date) {\n          return date.tm_wday || 7;\n        },\n        \"%U\": function U(date) {\n          var janFirst = new Date(date.tm_year + 1900, 0, 1);\n          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7 - janFirst.getDay());\n          var endDate = new Date(date.tm_year + 1900, date.tm_mon, date.tm_mday);\n          if (compareByDay(firstSunday, endDate) < 0) {\n            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;\n            var firstSundayUntilEndJanuary = 31 - firstSunday.getDate();\n            var days = firstSundayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();\n            return leadingNulls(Math.ceil(days / 7), 2);\n          }\n          return compareByDay(firstSunday, janFirst) === 0 ? \"01\" : \"00\";\n        },\n        \"%V\": function V(date) {\n          var janFourthThisYear = new Date(date.tm_year + 1900, 0, 4);\n          var janFourthNextYear = new Date(date.tm_year + 1901, 0, 4);\n          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n          var endDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);\n          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {\n            return \"53\";\n          }\n          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {\n            return \"01\";\n          }\n          var daysDifference;\n          if (firstWeekStartThisYear.getFullYear() < date.tm_year + 1900) {\n            daysDifference = date.tm_yday + 32 - firstWeekStartThisYear.getDate();\n          } else {\n            daysDifference = date.tm_yday + 1 - firstWeekStartThisYear.getDate();\n          }\n          return leadingNulls(Math.ceil(daysDifference / 7), 2);\n        },\n        \"%w\": function w(date) {\n          return date.tm_wday;\n        },\n        \"%W\": function W(date) {\n          var janFirst = new Date(date.tm_year, 0, 1);\n          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7 - janFirst.getDay() + 1);\n          var endDate = new Date(date.tm_year + 1900, date.tm_mon, date.tm_mday);\n          if (compareByDay(firstMonday, endDate) < 0) {\n            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;\n            var firstMondayUntilEndJanuary = 31 - firstMonday.getDate();\n            var days = firstMondayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();\n            return leadingNulls(Math.ceil(days / 7), 2);\n          }\n          return compareByDay(firstMonday, janFirst) === 0 ? \"01\" : \"00\";\n        },\n        \"%y\": function y(date) {\n          return (date.tm_year + 1900).toString().substring(2);\n        },\n        \"%Y\": function Y(date) {\n          return date.tm_year + 1900;\n        },\n        \"%z\": function z(date) {\n          var off = date.tm_gmtoff;\n          var ahead = off >= 0;\n          off = Math.abs(off) / 60;\n          off = off / 60 * 100 + off % 60;\n          return (ahead ? \"+\" : \"-\") + String(\"0000\" + off).slice(-4);\n        },\n        \"%Z\": function Z(date) {\n          return date.tm_zone;\n        },\n        \"%%\": function _() {\n          return \"%\";\n        }\n      };\n      for (var rule in EXPANSION_RULES_2) {\n        if (pattern.includes(rule)) {\n          pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_2[rule](date));\n        }\n      }\n      var bytes = intArrayFromString(pattern, false);\n      if (bytes.length > maxsize) {\n        return 0;\n      }\n      writeArrayToMemory(bytes, s);\n      return bytes.length - 1;\n    }\n    function _strftime_l(s, maxsize, format, tm) {\n      return _strftime(s, maxsize, format, tm);\n    }\n    InternalError = Module[\"InternalError\"] = extendError(Error, \"InternalError\");\n    embind_init_charCodes();\n    BindingError = Module[\"BindingError\"] = extendError(Error, \"BindingError\");\n    init_emval();\n    UnboundTypeError = Module[\"UnboundTypeError\"] = extendError(Error, \"UnboundTypeError\");\n    var FSNode = function FSNode(parent, name, mode, rdev) {\n      if (!parent) {\n        parent = this;\n      }\n      this.parent = parent;\n      this.mount = parent.mount;\n      this.mounted = null;\n      this.id = FS.nextInode++;\n      this.name = name;\n      this.mode = mode;\n      this.node_ops = {};\n      this.stream_ops = {};\n      this.rdev = rdev;\n    };\n    var readMode = 292 | 73;\n    var writeMode = 146;\n    Object.defineProperties(FSNode.prototype, {\n      read: {\n        get: function get() {\n          return (this.mode & readMode) === readMode;\n        },\n        set: function set(val) {\n          val ? this.mode |= readMode : this.mode &= ~readMode;\n        }\n      },\n      write: {\n        get: function get() {\n          return (this.mode & writeMode) === writeMode;\n        },\n        set: function set(val) {\n          val ? this.mode |= writeMode : this.mode &= ~writeMode;\n        }\n      },\n      isFolder: {\n        get: function get() {\n          return FS.isDir(this.mode);\n        }\n      },\n      isDevice: {\n        get: function get() {\n          return FS.isChrdev(this.mode);\n        }\n      }\n    });\n    FS.FSNode = FSNode;\n    FS.staticInit();\n    function intArrayFromString(stringy, dontAddNull, length) {\n      var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n      var u8array = new Array(len);\n      var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n      if (dontAddNull) u8array.length = numBytesWritten;\n      return u8array;\n    }\n    var asmLibraryArg = {\n      \"a\": ___cxa_allocate_exception,\n      \"b\": ___cxa_throw,\n      \"o\": __embind_finalize_value_array,\n      \"r\": __embind_register_bigint,\n      \"m\": __embind_register_bool,\n      \"B\": __embind_register_emval,\n      \"w\": __embind_register_enum,\n      \"g\": __embind_register_enum_value,\n      \"k\": __embind_register_float,\n      \"f\": __embind_register_function,\n      \"e\": __embind_register_integer,\n      \"d\": __embind_register_memory_view,\n      \"l\": __embind_register_std_string,\n      \"i\": __embind_register_std_wstring,\n      \"p\": __embind_register_value_array,\n      \"c\": __embind_register_value_array_element,\n      \"n\": __embind_register_void,\n      \"j\": _abort,\n      \"t\": _emscripten_memcpy_big,\n      \"h\": _emscripten_resize_heap,\n      \"x\": _environ_get,\n      \"y\": _environ_sizes_get,\n      \"A\": _fd_close,\n      \"u\": _fd_read,\n      \"q\": _fd_seek,\n      \"z\": _fd_write,\n      \"s\": _setTempRet0,\n      \"v\": _strftime_l\n    };\n    var asm = createWasm();\n    var ___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = function () {\n      return (___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = Module[\"asm\"][\"D\"]).apply(null, arguments);\n    };\n    var ___getTypeName = Module[\"___getTypeName\"] = function () {\n      return (___getTypeName = Module[\"___getTypeName\"] = Module[\"asm\"][\"F\"]).apply(null, arguments);\n    };\n    var ___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = function () {\n      return (___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = Module[\"asm\"][\"G\"]).apply(null, arguments);\n    };\n    var _malloc = Module[\"_malloc\"] = function () {\n      return (_malloc = Module[\"_malloc\"] = Module[\"asm\"][\"H\"]).apply(null, arguments);\n    };\n    var stackSave = Module[\"stackSave\"] = function () {\n      return (stackSave = Module[\"stackSave\"] = Module[\"asm\"][\"I\"]).apply(null, arguments);\n    };\n    var stackRestore = Module[\"stackRestore\"] = function () {\n      return (stackRestore = Module[\"stackRestore\"] = Module[\"asm\"][\"J\"]).apply(null, arguments);\n    };\n    var stackAlloc = Module[\"stackAlloc\"] = function () {\n      return (stackAlloc = Module[\"stackAlloc\"] = Module[\"asm\"][\"K\"]).apply(null, arguments);\n    };\n    var _free = Module[\"_free\"] = function () {\n      return (_free = Module[\"_free\"] = Module[\"asm\"][\"L\"]).apply(null, arguments);\n    };\n    var dynCall_jiji = Module[\"dynCall_jiji\"] = function () {\n      return (dynCall_jiji = Module[\"dynCall_jiji\"] = Module[\"asm\"][\"M\"]).apply(null, arguments);\n    };\n    var dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = function () {\n      return (dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = Module[\"asm\"][\"N\"]).apply(null, arguments);\n    };\n    var dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = function () {\n      return (dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = Module[\"asm\"][\"O\"]).apply(null, arguments);\n    };\n    var dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = function () {\n      return (dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = Module[\"asm\"][\"P\"]).apply(null, arguments);\n    };\n    var dynCall_viijii = Module[\"dynCall_viijii\"] = function () {\n      return (dynCall_viijii = Module[\"dynCall_viijii\"] = Module[\"asm\"][\"Q\"]).apply(null, arguments);\n    };\n    Module[\"ccall\"] = ccall;\n    var calledRun;\n    dependenciesFulfilled = function runCaller() {\n      if (!calledRun) run();\n      if (!calledRun) dependenciesFulfilled = runCaller;\n    };\n    function run(args) {\n      args = args || arguments_;\n      if (runDependencies > 0) {\n        return;\n      }\n      preRun();\n      if (runDependencies > 0) {\n        return;\n      }\n      function doRun() {\n        if (calledRun) return;\n        calledRun = true;\n        Module[\"calledRun\"] = true;\n        if (ABORT) return;\n        initRuntime();\n        readyPromiseResolve(Module);\n        if (Module[\"onRuntimeInitialized\"]) Module[\"onRuntimeInitialized\"]();\n        postRun();\n      }\n      if (Module[\"setStatus\"]) {\n        Module[\"setStatus\"](\"Running...\");\n        setTimeout(function () {\n          setTimeout(function () {\n            Module[\"setStatus\"](\"\");\n          }, 1);\n          doRun();\n        }, 1);\n      } else {\n        doRun();\n      }\n    }\n    Module[\"run\"] = run;\n    if (Module[\"preInit\"]) {\n      if (typeof Module[\"preInit\"] == \"function\") Module[\"preInit\"] = [Module[\"preInit\"]];\n      while (Module[\"preInit\"].length > 0) {\n        Module[\"preInit\"].pop()();\n      }\n    }\n    run();\n    return Module.ready;\n  };\n}();\n/* harmony default export */ __webpack_exports__[\"default\"] = (Module);\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/baic/Documents/programm/gsrlic/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/baic/Documents/programm/gsrlic/node_modules/@splinetool/runtime/build/boolean.js"],"names":[],"mappings":";;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA,4BAA4B,6BAA6B,8BAA8B;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACruDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,mEAAmE,wBAAwB,4CAA4C,SAAS;AAChJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,2BAA2B,oBAAoB;AAC/C;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,2BAA2B,oBAAoB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,+BAA+B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,+BAA+B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,+EAA+E;AAC/E;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,+FAA+F;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA,uGAAuG,yDAAyD,6IAA6I,QAAQ;AACrT;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA,yFAAyF;AACzF;AACA,qBAAqB,kBAAkB;AACvC,+GAA+G;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA,iIAAiI;AACjI;AACA,sDAAsD;AACtD,OAAO;AACP,+CAA+C,qBAAqB;AACpE;AACA;AACA,mEAAmE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,kBAAkB;AAC/E,OAAO;AACP,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,WAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,aAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,2BAA2B,YAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,6BAA6B,YAAY;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,6BAA6B,YAAY;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,cAAc;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,IAAI;AACvD;AACA,OAAO;AACP;AACA;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,gBAAgB,IAAI;AACpB;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,8BAA8B;AACxE;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,sBAAsB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,yBAAyB,YAAY;AACrC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,2BAA2B,YAAY;AACvC;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,2BAA2B,UAAU;AACrC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,2BAA2B,YAAY;AACvC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,MAAM;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,+BAA+B,cAAc;AAC7C;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI;AACb,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,SAAS;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,2BAA2B,YAAY;AACvC;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,2BAA2B,YAAY;AACvC;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,UAAU;AACrC;AACA;AACA,WAAW;AACX,2BAA2B,UAAU;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,uBAAuB,YAAY;AACnqBAAqB,YAAY;AACjc,qEAAM,E","file":"x","sourcesContent":["var Module = function () {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  return function (Module) {\n    Module = Module || {};\n    var Module = typeof Module !== \"undefined\" ? Module : {};\n    var readyPromiseResolve, readyPromiseReject;\n    Module[\"ready\"] = new Promise(function (resolve, reject) {\n      readyPromiseResolve = resolve;\n      readyPromiseReject = reject;\n    });\n    var moduleOverrides = {};\n    var key;\n    for (key in Module) {\n      if (Module.hasOwnProperty(key)) {\n        moduleOverrides[key] = Module[key];\n      }\n    }\n    var arguments_ = [];\n    var thisProgram = \"./this.program\";\n    var quit_ = function quit_(status, toThrow) {\n      throw toThrow;\n    };\n    var ENVIRONMENT_IS_WEB = true;\n    var ENVIRONMENT_IS_WORKER = false;\n    var scriptDirectory = \"\";\n    function locateFile(path) {\n      if (Module[\"locateFile\"]) {\n        return Module[\"locateFile\"](path, scriptDirectory);\n      }\n      return scriptDirectory + path;\n    }\n    var read_, readAsync, readBinary, setWindowTitle;\n    if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n      if (ENVIRONMENT_IS_WORKER) {\n        scriptDirectory = self.location.href;\n      } else if (typeof document !== \"undefined\" && document.currentScript) {\n        scriptDirectory = document.currentScript.src;\n      }\n      if (_scriptDir) {\n        scriptDirectory = _scriptDir;\n      }\n      if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n        scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf(\"/\") + 1);\n      } else {\n        scriptDirectory = \"\";\n      }\n      {\n        read_ = function read_(url) {\n          var xhr = new XMLHttpRequest();\n          xhr.open(\"GET\", url, false);\n          xhr.send(null);\n          return xhr.responseText;\n        };\n        if (ENVIRONMENT_IS_WORKER) {\n          readBinary = function readBinary(url) {\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"GET\", url, false);\n            xhr.responseType = \"arraybuffer\";\n            xhr.send(null);\n            return new Uint8Array(xhr.response);\n          };\n        }\n        readAsync = function readAsync(url, onload, onerror) {\n          var xhr = new XMLHttpRequest();\n          xhr.open(\"GET\", url, true);\n          xhr.responseType = \"arraybuffer\";\n          xhr.onload = function () {\n            if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n              onload(xhr.response);\n              return;\n            }\n            onerror();\n          };\n          xhr.onerror = onerror;\n          xhr.send(null);\n        };\n      }\n      setWindowTitle = function setWindowTitle(title) {\n        document.title = title;\n      };\n    } else {}\n    var out = Module[\"print\"] || console.log.bind(console);\n    var err = Module[\"printErr\"] || console.warn.bind(console);\n    for (key in moduleOverrides) {\n      if (moduleOverrides.hasOwnProperty(key)) {\n        Module[key] = moduleOverrides[key];\n      }\n    }\n    moduleOverrides = null;\n    if (Module[\"arguments\"]) arguments_ = Module[\"arguments\"];\n    if (Module[\"thisProgram\"]) thisProgram = Module[\"thisProgram\"];\n    if (Module[\"quit\"]) quit_ = Module[\"quit\"];\n    var tempRet0 = 0;\n    var setTempRet0 = function setTempRet0(value) {\n      tempRet0 = value;\n    };\n    var wasmBinary;\n    if (Module[\"wasmBinary\"]) wasmBinary = Module[\"wasmBinary\"];\n    var noExitRuntime = Module[\"noExitRuntime\"] || true;\n    if (typeof WebAssembly !== \"object\") {\n      abort(\"no native wasm support detected\");\n    }\n    var wasmMemory;\n    var ABORT = false;\n    var EXITSTATUS;\n    function assert(condition, text) {\n      if (!condition) {\n        abort(\"Assertion failed: \" + text);\n      }\n    }\n    function getCFunc(ident) {\n      var func = Module[\"_\" + ident];\n      assert(func, \"Cannot call unknown function \" + ident + \", make sure it is exported\");\n      return func;\n    }\n    function ccall(ident, returnType, argTypes, args, opts) {\n      var toC = {\n        \"string\": function string(str) {\n          var ret = 0;\n          if (str !== null && str !== undefined && str !== 0) {\n            var len = (str.length << 2) + 1;\n            ret = stackAlloc(len);\n            stringToUTF8(str, ret, len);\n          }\n          return ret;\n        },\n        \"array\": function array(arr) {\n          var ret = stackAlloc(arr.length);\n          writeArrayToMemory(arr, ret);\n          return ret;\n        }\n      };\n      function convertReturnValue(ret) {\n        if (returnType === \"string\") return UTF8ToString(ret);\n        if (returnType === \"boolean\") return Boolean(ret);\n        return ret;\n      }\n      var func = getCFunc(ident);\n      var cArgs = [];\n      var stack = 0;\n      if (args) {\n        for (var i = 0; i < args.length; i++) {\n          var converter = toC[argTypes[i]];\n          if (converter) {\n            if (stack === 0) stack = stackSave();\n            cArgs[i] = converter(args[i]);\n          } else {\n            cArgs[i] = args[i];\n          }\n        }\n      }\n      var ret = func.apply(null, cArgs);\n      function onDone(ret) {\n        if (stack !== 0) stackRestore(stack);\n        return convertReturnValue(ret);\n      }\n      ret = onDone(ret);\n      return ret;\n    }\n    var UTF8Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\n    function UTF8ArrayToString(heap, idx, maxBytesToRead) {\n      var endIdx = idx + maxBytesToRead;\n      var endPtr = idx;\n      while (heap[endPtr] && !(endPtr >= endIdx)) {\n        ++endPtr;\n      }\n      if (endPtr - idx > 16 && heap.subarray && UTF8Decoder) {\n        return UTF8Decoder.decode(heap.subarray(idx, endPtr));\n      } else {\n        var str = \"\";\n        while (idx < endPtr) {\n          var u0 = heap[idx++];\n          if (!(u0 & 128)) {\n            str += String.fromCharCode(u0);\n            continue;\n          }\n          var u1 = heap[idx++] & 63;\n          if ((u0 & 224) == 192) {\n            str += String.fromCharCode((u0 & 31) << 6 | u1);\n            continue;\n          }\n          var u2 = heap[idx++] & 63;\n          if ((u0 & 240) == 224) {\n            u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n          } else {\n            u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heap[idx++] & 63;\n          }\n          if (u0 < 65536) {\n            str += String.fromCharCode(u0);\n          } else {\n            var ch = u0 - 65536;\n            str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n          }\n        }\n      }\n      return str;\n    }\n    function UTF8ToString(ptr, maxBytesToRead) {\n      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\n    }\n    function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n      if (!(maxBytesToWrite > 0)) return 0;\n      var startIdx = outIdx;\n      var endIdx = outIdx + maxBytesToWrite - 1;\n      for (var i = 0; i < str.length; ++i) {\n        var u = str.charCodeAt(i);\n        if (u >= 55296 && u <= 57343) {\n          var u1 = str.charCodeAt(++i);\n          u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n        }\n        if (u <= 127) {\n          if (outIdx >= endIdx) break;\n          heap[outIdx++] = u;\n        } else if (u <= 2047) {\n          if (outIdx + 1 >= endIdx) break;\n          heap[outIdx++] = 192 | u >> 6;\n          heap[outIdx++] = 128 | u & 63;\n        } else if (u <= 65535) {\n          if (outIdx + 2 >= endIdx) break;\n          heap[outIdx++] = 224 | u >> 12;\n          heap[outIdx++] = 128 | u >> 6 & 63;\n          heap[outIdx++] = 128 | u & 63;\n        } else {\n          if (outIdx + 3 >= endIdx) break;\n          heap[outIdx++] = 240 | u >> 18;\n          heap[outIdx++] = 128 | u >> 12 & 63;\n          heap[outIdx++] = 128 | u >> 6 & 63;\n          heap[outIdx++] = 128 | u & 63;\n        }\n      }\n      heap[outIdx] = 0;\n      return outIdx - startIdx;\n    }\n    function stringToUTF8(str, outPtr, maxBytesToWrite) {\n      return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n    }\n    function lengthBytesUTF8(str) {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        var u = str.charCodeAt(i);\n        if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;\n        if (u <= 127) ++len;else if (u <= 2047) len += 2;else if (u <= 65535) len += 3;else len += 4;\n      }\n      return len;\n    }\n    var UTF16Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf-16le\") : undefined;\n    function UTF16ToString(ptr, maxBytesToRead) {\n      var endPtr = ptr;\n      var idx = endPtr >> 1;\n      var maxIdx = idx + maxBytesToRead / 2;\n      while (!(idx >= maxIdx) && HEAPU16[idx]) {\n        ++idx;\n      }\n      endPtr = idx << 1;\n      if (endPtr - ptr > 32 && UTF16Decoder) {\n        return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\n      } else {\n        var str = \"\";\n        for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\n          var codeUnit = HEAP16[ptr + i * 2 >> 1];\n          if (codeUnit == 0) break;\n          str += String.fromCharCode(codeUnit);\n        }\n        return str;\n      }\n    }\n    function stringToUTF16(str, outPtr, maxBytesToWrite) {\n      if (maxBytesToWrite === undefined) {\n        maxBytesToWrite = 2147483647;\n      }\n      if (maxBytesToWrite < 2) return 0;\n      maxBytesToWrite -= 2;\n      var startPtr = outPtr;\n      var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\n      for (var i = 0; i < numCharsToWrite; ++i) {\n        var codeUnit = str.charCodeAt(i);\n        HEAP16[outPtr >> 1] = codeUnit;\n        outPtr += 2;\n      }\n      HEAP16[outPtr >> 1] = 0;\n      return outPtr - startPtr;\n    }\n    function lengthBytesUTF16(str) {\n      return str.length * 2;\n    }\n    function UTF32ToString(ptr, maxBytesToRead) {\n      var i = 0;\n      var str = \"\";\n      while (!(i >= maxBytesToRead / 4)) {\n        var utf32 = HEAP32[ptr + i * 4 >> 2];\n        if (utf32 == 0) break;\n        ++i;\n        if (utf32 >= 65536) {\n          var ch = utf32 - 65536;\n          str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n        } else {\n          str += String.fromCharCode(utf32);\n        }\n      }\n      return str;\n    }\n    function stringToUTF32(str, outPtr, maxBytesToWrite) {\n      if (maxBytesToWrite === undefined) {\n        maxBytesToWrite = 2147483647;\n      }\n      if (maxBytesToWrite < 4) return 0;\n      var startPtr = outPtr;\n      var endPtr = startPtr + maxBytesToWrite - 4;\n      for (var i = 0; i < str.length; ++i) {\n        var codeUnit = str.charCodeAt(i);\n        if (codeUnit >= 55296 && codeUnit <= 57343) {\n          var trailSurrogate = str.charCodeAt(++i);\n          codeUnit = 65536 + ((codeUnit & 1023) << 10) | trailSurrogate & 1023;\n        }\n        HEAP32[outPtr >> 2] = codeUnit;\n        outPtr += 4;\n        if (outPtr + 4 > endPtr) break;\n      }\n      HEAP32[outPtr >> 2] = 0;\n      return outPtr - startPtr;\n    }\n    function lengthBytesUTF32(str) {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        var codeUnit = str.charCodeAt(i);\n        if (codeUnit >= 55296 && codeUnit <= 57343) ++i;\n        len += 4;\n      }\n      return len;\n    }\n    function writeArrayToMemory(array, buffer) {\n      HEAP8.set(array, buffer);\n    }\n    function writeAsciiToMemory(str, buffer, dontAddNull) {\n      for (var i = 0; i < str.length; ++i) {\n        HEAP8[buffer++ >> 0] = str.charCodeAt(i);\n      }\n      if (!dontAddNull) HEAP8[buffer >> 0] = 0;\n    }\n    function alignUp(x, multiple) {\n      if (x % multiple > 0) {\n        x += multiple - x % multiple;\n      }\n      return x;\n    }\n    var buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n    function updateGlobalBufferAndViews(buf) {\n      buffer = buf;\n      Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\n      Module[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\n      Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\n      Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\n      Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buf);\n      Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buf);\n      Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buf);\n      Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf);\n    }\n    var INITIAL_MEMORY = Module[\"INITIAL_MEMORY\"] || 16777216;\n    var wasmTable;\n    var __ATPRERUN__ = [];\n    var __ATINIT__ = [];\n    var __ATPOSTRUN__ = [];\n    var runtimeInitialized = false;\n    function preRun() {\n      if (Module[\"preRun\"]) {\n        if (typeof Module[\"preRun\"] == \"function\") Module[\"preRun\"] = [Module[\"preRun\"]];\n        while (Module[\"preRun\"].length) {\n          addOnPreRun(Module[\"preRun\"].shift());\n        }\n      }\n      callRuntimeCallbacks(__ATPRERUN__);\n    }\n    function initRuntime() {\n      runtimeInitialized = true;\n      if (!Module[\"noFSInit\"] && !FS.init.initialized) FS.init();\n      FS.ignorePermissions = false;\n      TTY.init();\n      callRuntimeCallbacks(__ATINIT__);\n    }\n    function postRun() {\n      if (Module[\"postRun\"]) {\n        if (typeof Module[\"postRun\"] == \"function\") Module[\"postRun\"] = [Module[\"postRun\"]];\n        while (Module[\"postRun\"].length) {\n          addOnPostRun(Module[\"postRun\"].shift());\n        }\n      }\n      callRuntimeCallbacks(__ATPOSTRUN__);\n    }\n    function addOnPreRun(cb) {\n      __ATPRERUN__.unshift(cb);\n    }\n    function addOnInit(cb) {\n      __ATINIT__.unshift(cb);\n    }\n    function addOnPostRun(cb) {\n      __ATPOSTRUN__.unshift(cb);\n    }\n    var runDependencies = 0;\n    var runDependencyWatcher = null;\n    var dependenciesFulfilled = null;\n    function getUniqueRunDependency(id) {\n      return id;\n    }\n    function addRunDependency(id) {\n      runDependencies++;\n      if (Module[\"monitorRunDependencies\"]) {\n        Module[\"monitorRunDependencies\"](runDependencies);\n      }\n    }\n    function removeRunDependency(id) {\n      runDependencies--;\n      if (Module[\"monitorRunDependencies\"]) {\n        Module[\"monitorRunDependencies\"](runDependencies);\n      }\n      if (runDependencies == 0) {\n        if (runDependencyWatcher !== null) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n        }\n        if (dependenciesFulfilled) {\n          var callback = dependenciesFulfilled;\n          dependenciesFulfilled = null;\n          callback();\n        }\n      }\n    }\n    Module[\"preloadedImages\"] = {};\n    Module[\"preloadedAudios\"] = {};\n    function abort(what) {\n      {\n        if (Module[\"onAbort\"]) {\n          Module[\"onAbort\"](what);\n        }\n      }\n      what = \"Aborted(\" + what + \")\";\n      err(what);\n      ABORT = true;\n      EXITSTATUS = 1;\n      what += \". Build with -s ASSERTIONS=1 for more info.\";\n      var e = new WebAssembly.RuntimeError(what);\n      readyPromiseReject(e);\n      throw e;\n    }\n    var dataURIPrefix = \"data:application/octet-stream;base64,\";\n    function isDataURI(filename) {\n      return filename.startsWith(dataURIPrefix);\n    }\n    var wasmBinaryFile;\n    wasmBinaryFile = \"boolean.wasm\";\n    if (!isDataURI(wasmBinaryFile)) {\n      wasmBinaryFile = locateFile(wasmBinaryFile);\n    }\n    function getBinary(file) {\n      try {\n        if (file == wasmBinaryFile && wasmBinary) {\n          return new Uint8Array(wasmBinary);\n        }\n        if (readBinary) {\n          return readBinary(file);\n        } else {\n          throw \"both async and sync fetching of the wasm failed\";\n        }\n      } catch (err) {\n        abort(err);\n      }\n    }\n    function getBinaryPromise() {\n      if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n        if (typeof fetch === \"function\") {\n          return fetch(wasmBinaryFile, {\n            credentials: \"same-origin\"\n          }).then(function (response) {\n            if (!response[\"ok\"]) {\n              throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n            }\n            return response[\"arrayBuffer\"]();\n          }).catch(function () {\n            return getBinary(wasmBinaryFile);\n          });\n        }\n      }\n      return Promise.resolve().then(function () {\n        return getBinary(wasmBinaryFile);\n      });\n    }\n    function createWasm() {\n      var info = {\n        \"a\": asmLibraryArg\n      };\n      function receiveInstance(instance, module) {\n        var exports = instance.exports;\n        Module[\"asm\"] = exports;\n        wasmMemory = Module[\"asm\"][\"C\"];\n        updateGlobalBufferAndViews(wasmMemory.buffer);\n        wasmTable = Module[\"asm\"][\"E\"];\n        addOnInit(Module[\"asm\"][\"D\"]);\n        removeRunDependency(\"wasm-instantiate\");\n      }\n      addRunDependency(\"wasm-instantiate\");\n      function receiveInstantiationResult(result) {\n        receiveInstance(result[\"instance\"]);\n      }\n      function instantiateArrayBuffer(receiver) {\n        return getBinaryPromise().then(function (binary) {\n          return WebAssembly.instantiate(binary, info);\n        }).then(function (instance) {\n          return instance;\n        }).then(receiver, function (reason) {\n          err(\"failed to asynchronously prepare wasm: \" + reason);\n          abort(reason);\n        });\n      }\n      function instantiateAsync() {\n        if (!wasmBinary && typeof WebAssembly.instantiateStreaming === \"function\" && !isDataURI(wasmBinaryFile) && typeof fetch === \"function\") {\n          return fetch(wasmBinaryFile, {\n            credentials: \"same-origin\"\n          }).then(function (response) {\n            var result = WebAssembly.instantiateStreaming(response, info);\n            return result.then(receiveInstantiationResult, function (reason) {\n              err(\"wasm streaming compile failed: \" + reason);\n              err(\"falling back to ArrayBuffer instantiation\");\n              return instantiateArrayBuffer(receiveInstantiationResult);\n            });\n          });\n        } else {\n          return instantiateArrayBuffer(receiveInstantiationResult);\n        }\n      }\n      if (Module[\"instantiateWasm\"]) {\n        try {\n          var exports = Module[\"instantiateWasm\"](info, receiveInstance);\n          return exports;\n        } catch (e) {\n          err(\"Module.instantiateWasm callback failed with error: \" + e);\n          return false;\n        }\n      }\n      instantiateAsync().catch(readyPromiseReject);\n      return {};\n    }\n    var tempDouble;\n    var tempI64;\n    function callRuntimeCallbacks(callbacks) {\n      while (callbacks.length > 0) {\n        var callback = callbacks.shift();\n        if (typeof callback == \"function\") {\n          callback(Module);\n          continue;\n        }\n        var func = callback.func;\n        if (typeof func === \"number\") {\n          if (callback.arg === undefined) {\n            getWasmTableEntry(func)();\n          } else {\n            getWasmTableEntry(func)(callback.arg);\n          }\n        } else {\n          func(callback.arg === undefined ? null : callback.arg);\n        }\n      }\n    }\n    var wasmTableMirror = [];\n    function getWasmTableEntry(funcPtr) {\n      var func = wasmTableMirror[funcPtr];\n      if (!func) {\n        if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\n        wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\n      }\n      return func;\n    }\n    function ___cxa_allocate_exception(size) {\n      return _malloc(size + 16) + 16;\n    }\n    function ExceptionInfo(excPtr) {\n      this.excPtr = excPtr;\n      this.ptr = excPtr - 16;\n      this.set_type = function (type) {\n        HEAP32[this.ptr + 4 >> 2] = type;\n      };\n      this.get_type = function () {\n        return HEAP32[this.ptr + 4 >> 2];\n      };\n      this.set_destructor = function (destructor) {\n        HEAP32[this.ptr + 8 >> 2] = destructor;\n      };\n      this.get_destructor = function () {\n        return HEAP32[this.ptr + 8 >> 2];\n      };\n      this.set_refcount = function (refcount) {\n        HEAP32[this.ptr >> 2] = refcount;\n      };\n      this.set_caught = function (caught) {\n        caught = caught ? 1 : 0;\n        HEAP8[this.ptr + 12 >> 0] = caught;\n      };\n      this.get_caught = function () {\n        return HEAP8[this.ptr + 12 >> 0] != 0;\n      };\n      this.set_rethrown = function (rethrown) {\n        rethrown = rethrown ? 1 : 0;\n        HEAP8[this.ptr + 13 >> 0] = rethrown;\n      };\n      this.get_rethrown = function () {\n        return HEAP8[this.ptr + 13 >> 0] != 0;\n      };\n      this.init = function (type, destructor) {\n        this.set_type(type);\n        this.set_destructor(destructor);\n        this.set_refcount(0);\n        this.set_caught(false);\n        this.set_rethrown(false);\n      };\n      this.add_ref = function () {\n        var value = HEAP32[this.ptr >> 2];\n        HEAP32[this.ptr >> 2] = value + 1;\n      };\n      this.release_ref = function () {\n        var prev = HEAP32[this.ptr >> 2];\n        HEAP32[this.ptr >> 2] = prev - 1;\n        return prev === 1;\n      };\n    }\n    var exceptionLast = 0;\n    var uncaughtExceptionCount = 0;\n    function ___cxa_throw(ptr, type, destructor) {\n      var info = new ExceptionInfo(ptr);\n      info.init(type, destructor);\n      exceptionLast = ptr;\n      uncaughtExceptionCount++;\n      throw ptr;\n    }\n    var tupleRegistrations = {};\n    function runDestructors(destructors) {\n      while (destructors.length) {\n        var ptr = destructors.pop();\n        var del = destructors.pop();\n        del(ptr);\n      }\n    }\n    function simpleReadValueFromPointer(pointer) {\n      return this[\"fromWireType\"](HEAPU32[pointer >> 2]);\n    }\n    var awaitingDependencies = {};\n    var registeredTypes = {};\n    var typeDependencies = {};\n    var char_0 = 48;\n    var char_9 = 57;\n    function makeLegalFunctionName(name) {\n      if (undefined === name) {\n        return \"_unknown\";\n      }\n      name = name.replace(/[^a-zA-Z0-9_]/g, \"$\");\n      var f = name.charCodeAt(0);\n      if (f >= char_0 && f <= char_9) {\n        return \"_\" + name;\n      } else {\n        return name;\n      }\n    }\n    function createNamedFunction(name, body) {\n      name = makeLegalFunctionName(name);\n      return new Function(\"body\", \"return function \" + name + \"() {\\n\" + '    \"use strict\";' + \"    return body.apply(this, arguments);\\n\" + \"};\\n\")(body);\n    }\n    function extendError(baseErrorType, errorName) {\n      var errorClass = createNamedFunction(errorName, function (message) {\n        this.name = errorName;\n        this.message = message;\n        var stack = new Error(message).stack;\n        if (stack !== undefined) {\n          this.stack = this.toString() + \"\\n\" + stack.replace(/^Error(:[^\\n]*)?\\n/, \"\");\n        }\n      });\n      errorClass.prototype = Object.create(baseErrorType.prototype);\n      errorClass.prototype.constructor = errorClass;\n      errorClass.prototype.toString = function () {\n        if (this.message === undefined) {\n          return this.name;\n        } else {\n          return this.name + \": \" + this.message;\n        }\n      };\n      return errorClass;\n    }\n    var InternalError = undefined;\n    function throwInternalError(message) {\n      throw new InternalError(message);\n    }\n    function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {\n      myTypes.forEach(function (type) {\n        typeDependencies[type] = dependentTypes;\n      });\n      function onComplete(typeConverters) {\n        var myTypeConverters = getTypeConverters(typeConverters);\n        if (myTypeConverters.length !== myTypes.length) {\n          throwInternalError(\"Mismatched type converter count\");\n        }\n        for (var i = 0; i < myTypes.length; ++i) {\n          registerType(myTypes[i], myTypeConverters[i]);\n        }\n      }\n      var typeConverters = new Array(dependentTypes.length);\n      var unregisteredTypes = [];\n      var registered = 0;\n      dependentTypes.forEach(function (dt, i) {\n        if (registeredTypes.hasOwnProperty(dt)) {\n          typeConverters[i] = registeredTypes[dt];\n        } else {\n          unregisteredTypes.push(dt);\n          if (!awaitingDependencies.hasOwnProperty(dt)) {\n            awaitingDependencies[dt] = [];\n          }\n          awaitingDependencies[dt].push(function () {\n            typeConverters[i] = registeredTypes[dt];\n            ++registered;\n            if (registered === unregisteredTypes.length) {\n              onComplete(typeConverters);\n            }\n          });\n        }\n      });\n      if (0 === unregisteredTypes.length) {\n        onComplete(typeConverters);\n      }\n    }\n    function __embind_finalize_value_array(rawTupleType) {\n      var reg = tupleRegistrations[rawTupleType];\n      delete tupleRegistrations[rawTupleType];\n      var elements = reg.elements;\n      var elementsLength = elements.length;\n      var elementTypes = elements.map(function (elt) {\n        return elt.getterReturnType;\n      }).concat(elements.map(function (elt) {\n        return elt.setterArgumentType;\n      }));\n      var rawConstructor = reg.rawConstructor;\n      var rawDestructor = reg.rawDestructor;\n      whenDependentTypesAreResolved([rawTupleType], elementTypes, function (elementTypes) {\n        elements.forEach(function (elt, i) {\n          var getterReturnType = elementTypes[i];\n          var getter = elt.getter;\n          var getterContext = elt.getterContext;\n          var setterArgumentType = elementTypes[i + elementsLength];\n          var setter = elt.setter;\n          var setterContext = elt.setterContext;\n          elt.read = function (ptr) {\n            return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\n          };\n          elt.write = function (ptr, o) {\n            var destructors = [];\n            setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, o));\n            runDestructors(destructors);\n          };\n        });\n        return [{\n          name: reg.name,\n          \"fromWireType\": function fromWireType(ptr) {\n            var rv = new Array(elementsLength);\n            for (var i = 0; i < elementsLength; ++i) {\n              rv[i] = elements[i].read(ptr);\n            }\n            rawDestructor(ptr);\n            return rv;\n          },\n          \"toWireType\": function toWireType(destructors, o) {\n            if (elementsLength !== o.length) {\n              throw new TypeError(\"Incorrect number of tuple elements for \" + reg.name + \": expected=\" + elementsLength + \", actual=\" + o.length);\n            }\n            var ptr = rawConstructor();\n            for (var i = 0; i < elementsLength; ++i) {\n              elements[i].write(ptr, o[i]);\n            }\n            if (destructors !== null) {\n              destructors.push(rawDestructor, ptr);\n            }\n            return ptr;\n          },\n          \"argPackAdvance\": 8,\n          \"readValueFromPointer\": simpleReadValueFromPointer,\n          destructorFunction: rawDestructor\n        }];\n      });\n    }\n    function __embind_register_bigint(primitiveType, name, size, minRange, maxRange) {}\n    function getShiftFromSize(size) {\n      switch (size) {\n        case 1:\n          return 0;\n        case 2:\n          return 1;\n        case 4:\n          return 2;\n        case 8:\n          return 3;\n        default:\n          throw new TypeError(\"Unknown type size: \" + size);\n      }\n    }\n    function embind_init_charCodes() {\n      var codes = new Array(256);\n      for (var i = 0; i < 256; ++i) {\n        codes[i] = String.fromCharCode(i);\n      }\n      embind_charCodes = codes;\n    }\n    var embind_charCodes = undefined;\n    function readLatin1String(ptr) {\n      var ret = \"\";\n      var c = ptr;\n      while (HEAPU8[c]) {\n        ret += embind_charCodes[HEAPU8[c++]];\n      }\n      return ret;\n    }\n    var BindingError = undefined;\n    function throwBindingError(message) {\n      throw new BindingError(message);\n    }\n    function registerType(rawType, registeredInstance, options) {\n      options = options || {};\n      if (!(\"argPackAdvance\" in registeredInstance)) {\n        throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");\n      }\n      var name = registeredInstance.name;\n      if (!rawType) {\n        throwBindingError('type \"' + name + '\" must have a positive integer typeid pointer');\n      }\n      if (registeredTypes.hasOwnProperty(rawType)) {\n        if (options.ignoreDuplicateRegistrations) {\n          return;\n        } else {\n          throwBindingError(\"Cannot register type '\" + name + \"' twice\");\n        }\n      }\n      registeredTypes[rawType] = registeredInstance;\n      delete typeDependencies[rawType];\n      if (awaitingDependencies.hasOwnProperty(rawType)) {\n        var callbacks = awaitingDependencies[rawType];\n        delete awaitingDependencies[rawType];\n        callbacks.forEach(function (cb) {\n          cb();\n        });\n      }\n    }\n    function __embind_register_bool(rawType, name, size, trueValue, falseValue) {\n      var shift = getShiftFromSize(size);\n      name = readLatin1String(name);\n      registerType(rawType, {\n        name: name,\n        \"fromWireType\": function fromWireType(wt) {\n          return !!wt;\n        },\n        \"toWireType\": function toWireType(destructors, o) {\n          return o ? trueValue : falseValue;\n        },\n        \"argPackAdvance\": 8,\n        \"readValueFromPointer\": function readValueFromPointer(pointer) {\n          var heap;\n          if (size === 1) {\n            heap = HEAP8;\n          } else if (size === 2) {\n            heap = HEAP16;\n          } else if (size === 4) {\n            heap = HEAP32;\n          } else {\n            throw new TypeError(\"Unknown boolean type size: \" + name);\n          }\n          return this[\"fromWireType\"](heap[pointer >> shift]);\n        },\n        destructorFunction: null\n      });\n    }\n    var emval_free_list = [];\n    var emval_handle_array = [{}, {\n      value: undefined\n    }, {\n      value: null\n    }, {\n      value: true\n    }, {\n      value: false\n    }];\n    function __emval_decref(handle) {\n      if (handle > 4 && 0 === --emval_handle_array[handle].refcount) {\n        emval_handle_array[handle] = undefined;\n        emval_free_list.push(handle);\n      }\n    }\n    function count_emval_handles() {\n      var count = 0;\n      for (var i = 5; i < emval_handle_array.length; ++i) {\n        if (emval_handle_array[i] !== undefined) {\n          ++count;\n        }\n      }\n      return count;\n    }\n    function get_first_emval() {\n      for (var i = 5; i < emval_handle_array.length; ++i) {\n        if (emval_handle_array[i] !== undefined) {\n          return emval_handle_array[i];\n        }\n      }\n      return null;\n    }\n    function init_emval() {\n      Module[\"count_emval_handles\"] = count_emval_handles;\n      Module[\"get_first_emval\"] = get_first_emval;\n    }\n    var Emval = {\n      toValue: function toValue(handle) {\n        if (!handle) {\n          throwBindingError(\"Cannot use deleted val. handle = \" + handle);\n        }\n        return emval_handle_array[handle].value;\n      },\n      toHandle: function toHandle(value) {\n        switch (value) {\n          case undefined:\n            {\n              return 1;\n            }\n          case null:\n            {\n              return 2;\n            }\n          case true:\n            {\n              return 3;\n            }\n          case false:\n            {\n              return 4;\n            }\n          default:\n            {\n              var handle = emval_free_list.length ? emval_free_list.pop() : emval_handle_array.length;\n              emval_handle_array[handle] = {\n                refcount: 1,\n                value: value\n              };\n              return handle;\n            }\n        }\n      }\n    };\n    function __embind_register_emval(rawType, name) {\n      name = readLatin1String(name);\n      registerType(rawType, {\n        name: name,\n        \"fromWireType\": function fromWireType(handle) {\n          var rv = Emval.toValue(handle);\n          __emval_decref(handle);\n          return rv;\n        },\n        \"toWireType\": function toWireType(destructors, value) {\n          return Emval.toHandle(value);\n        },\n        \"argPackAdvance\": 8,\n        \"readValueFromPointer\": simpleReadValueFromPointer,\n        destructorFunction: null\n      });\n    }\n    function ensureOverloadTable(proto, methodName, humanName) {\n      if (undefined === proto[methodName].overloadTable) {\n        var prevFunc = proto[methodName];\n        proto[methodName] = function () {\n          if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {\n            throwBindingError(\"Function '\" + humanName + \"' called with an invalid number of arguments (\" + arguments.length + \") - expects one of (\" + proto[methodName].overloadTable + \")!\");\n          }\n          return proto[methodName].overloadTable[arguments.length].apply(this, arguments);\n        };\n        proto[methodName].overloadTable = [];\n        proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\n      }\n    }\n    function exposePublicSymbol(name, value, numArguments) {\n      if (Module.hasOwnProperty(name)) {\n        if (undefined === numArguments || undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments]) {\n          throwBindingError(\"Cannot register public name '\" + name + \"' twice\");\n        }\n        ensureOverloadTable(Module, name, name);\n        if (Module.hasOwnProperty(numArguments)) {\n          throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\" + numArguments + \")!\");\n        }\n        Module[name].overloadTable[numArguments] = value;\n      } else {\n        Module[name] = value;\n        if (undefined !== numArguments) {\n          Module[name].numArguments = numArguments;\n        }\n      }\n    }\n    function enumReadValueFromPointer(name, shift, signed) {\n      switch (shift) {\n        case 0:\n          return function (pointer) {\n            var heap = signed ? HEAP8 : HEAPU8;\n            return this[\"fromWireType\"](heap[pointer]);\n          };\n        case 1:\n          return function (pointer) {\n            var heap = signed ? HEAP16 : HEAPU16;\n            return this[\"fromWireType\"](heap[pointer >> 1]);\n          };\n        case 2:\n          return function (pointer) {\n            var heap = signed ? HEAP32 : HEAPU32;\n            return this[\"fromWireType\"](heap[pointer >> 2]);\n          };\n        default:\n          throw new TypeError(\"Unknown integer type: \" + name);\n      }\n    }\n    function __embind_register_enum(rawType, name, size, isSigned) {\n      var shift = getShiftFromSize(size);\n      name = readLatin1String(name);\n      function ctor() {}\n      ctor.values = {};\n      registerType(rawType, {\n        name: name,\n        constructor: ctor,\n        \"fromWireType\": function fromWireType(c) {\n          return this.constructor.values[c];\n        },\n        \"toWireType\": function toWireType(destructors, c) {\n          return c.value;\n        },\n        \"argPackAdvance\": 8,\n        \"readValueFromPointer\": enumReadValueFromPointer(name, shift, isSigned),\n        destructorFunction: null\n      });\n      exposePublicSymbol(name, ctor);\n    }\n    function getTypeName(type) {\n      var ptr = ___getTypeName(type);\n      var rv = readLatin1String(ptr);\n      _free(ptr);\n      return rv;\n    }\n    function requireRegisteredType(rawType, humanName) {\n      var impl = registeredTypes[rawType];\n      if (undefined === impl) {\n        throwBindingError(humanName + \" has unknown type \" + getTypeName(rawType));\n      }\n      return impl;\n    }\n    function __embind_register_enum_value(rawEnumType, name, enumValue) {\n      var enumType = requireRegisteredType(rawEnumType, \"enum\");\n      name = readLatin1String(name);\n      var Enum = enumType.constructor;\n      var Value = Object.create(enumType.constructor.prototype, {\n        value: {\n          value: enumValue\n        },\n        constructor: {\n          value: createNamedFunction(enumType.name + \"_\" + name, function () {})\n        }\n      });\n      Enum.values[enumValue] = Value;\n      Enum[name] = Value;\n    }\n    function _embind_repr(v) {\n      if (v === null) {\n        return \"null\";\n      }\n      var t = typeof v;\n      if (t === \"object\" || t === \"array\" || t === \"function\") {\n        return v.toString();\n      } else {\n        return \"\" + v;\n      }\n    }\n    function floatReadValueFromPointer(name, shift) {\n      switch (shift) {\n        case 2:\n          return function (pointer) {\n            return this[\"fromWireType\"](HEAPF32[pointer >> 2]);\n          };\n        case 3:\n          return function (pointer) {\n            return this[\"fromWireType\"](HEAPF64[pointer >> 3]);\n          };\n        default:\n          throw new TypeError(\"Unknown float type: \" + name);\n      }\n    }\n    function __embind_register_float(rawType, name, size) {\n      var shift = getShiftFromSize(size);\n      name = readLatin1String(name);\n      registerType(rawType, {\n        name: name,\n        \"fromWireType\": function fromWireType(value) {\n          return value;\n        },\n        \"toWireType\": function toWireType(destructors, value) {\n          if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n            throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n          }\n          return value;\n        },\n        \"argPackAdvance\": 8,\n        \"readValueFromPointer\": floatReadValueFromPointer(name, shift),\n        destructorFunction: null\n      });\n    }\n    function new_(constructor, argumentList) {\n      if (!(constructor instanceof Function)) {\n        throw new TypeError(\"new_ called with constructor type \" + typeof constructor + \" which is not a function\");\n      }\n      var dummy = createNamedFunction(constructor.name || \"unknownFunctionName\", function () {});\n      dummy.prototype = constructor.prototype;\n      var obj = new dummy();\n      var r = constructor.apply(obj, argumentList);\n      return r instanceof Object ? r : obj;\n    }\n    function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {\n      var argCount = argTypes.length;\n      if (argCount < 2) {\n        throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n      }\n      var isClassMethodFunc = argTypes[1] !== null && classType !== null;\n      var needsDestructorStack = false;\n      for (var i = 1; i < argTypes.length; ++i) {\n        if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) {\n          needsDestructorStack = true;\n          break;\n        }\n      }\n      var returns = argTypes[0].name !== \"void\";\n      var argsList = \"\";\n      var argsListWired = \"\";\n      for (var i = 0; i < argCount - 2; ++i) {\n        argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n        argsListWired += (i !== 0 ? \", \" : \"\") + \"arg\" + i + \"Wired\";\n      }\n      var invokerFnBody = \"return function \" + makeLegalFunctionName(humanName) + \"(\" + argsList + \") {\\n\" + \"if (arguments.length !== \" + (argCount - 2) + \") {\\n\" + \"throwBindingError('function \" + humanName + \" called with ' + arguments.length + ' arguments, expected \" + (argCount - 2) + \" args!');\\n\" + \"}\\n\";\n      if (needsDestructorStack) {\n        invokerFnBody += \"var destructors = [];\\n\";\n      }\n      var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\n      var args1 = [\"throwBindingError\", \"invoker\", \"fn\", \"runDestructors\", \"retType\", \"classParam\"];\n      var args2 = [throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];\n      if (isClassMethodFunc) {\n        invokerFnBody += \"var thisWired = classParam.toWireType(\" + dtorStack + \", this);\\n\";\n      }\n      for (var i = 0; i < argCount - 2; ++i) {\n        invokerFnBody += \"var arg\" + i + \"Wired = argType\" + i + \".toWireType(\" + dtorStack + \", arg\" + i + \"); // \" + argTypes[i + 2].name + \"\\n\";\n        args1.push(\"argType\" + i);\n        args2.push(argTypes[i + 2]);\n      }\n      if (isClassMethodFunc) {\n        argsListWired = \"thisWired\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired;\n      }\n      invokerFnBody += (returns ? \"var rv = \" : \"\") + \"invoker(fn\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired + \");\\n\";\n      if (needsDestructorStack) {\n        invokerFnBody += \"runDestructors(destructors);\\n\";\n      } else {\n        for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\n          var paramName = i === 1 ? \"thisWired\" : \"arg\" + (i - 2) + \"Wired\";\n          if (argTypes[i].destructorFunction !== null) {\n            invokerFnBody += paramName + \"_dtor(\" + paramName + \"); // \" + argTypes[i].name + \"\\n\";\n            args1.push(paramName + \"_dtor\");\n            args2.push(argTypes[i].destructorFunction);\n          }\n        }\n      }\n      if (returns) {\n        invokerFnBody += \"var ret = retType.fromWireType(rv);\\n\" + \"return ret;\\n\";\n      } else {}\n      invokerFnBody += \"}\\n\";\n      args1.push(invokerFnBody);\n      var invokerFunction = new_(Function, args1).apply(null, args2);\n      return invokerFunction;\n    }\n    function heap32VectorToArray(count, firstElement) {\n      var array = [];\n      for (var i = 0; i < count; i++) {\n        array.push(HEAP32[(firstElement >> 2) + i]);\n      }\n      return array;\n    }\n    function replacePublicSymbol(name, value, numArguments) {\n      if (!Module.hasOwnProperty(name)) {\n        throwInternalError(\"Replacing nonexistant public symbol\");\n      }\n      if (undefined !== Module[name].overloadTable && undefined !== numArguments) {\n        Module[name].overloadTable[numArguments] = value;\n      } else {\n        Module[name] = value;\n        Module[name].argCount = numArguments;\n      }\n    }\n    function dynCallLegacy(sig, ptr, args) {\n      var f = Module[\"dynCall_\" + sig];\n      return args && args.length ? f.apply(null, [ptr].concat(args)) : f.call(null, ptr);\n    }\n    function dynCall(sig, ptr, args) {\n      if (sig.includes(\"j\")) {\n        return dynCallLegacy(sig, ptr, args);\n      }\n      return getWasmTableEntry(ptr).apply(null, args);\n    }\n    function getDynCaller(sig, ptr) {\n      var argCache = [];\n      return function () {\n        argCache.length = arguments.length;\n        for (var i = 0; i < arguments.length; i++) {\n          argCache[i] = arguments[i];\n        }\n        return dynCall(sig, ptr, argCache);\n      };\n    }\n    function embind__requireFunction(signature, rawFunction) {\n      signature = readLatin1String(signature);\n      function makeDynCaller() {\n        if (signature.includes(\"j\")) {\n          return getDynCaller(signature, rawFunction);\n        }\n        return getWasmTableEntry(rawFunction);\n      }\n      var fp = makeDynCaller();\n      if (typeof fp !== \"function\") {\n        throwBindingError(\"unknown function pointer with signature \" + signature + \": \" + rawFunction);\n      }\n      return fp;\n    }\n    var UnboundTypeError = undefined;\n    function throwUnboundTypeError(message, types) {\n      var unboundTypes = [];\n      var seen = {};\n      function visit(type) {\n        if (seen[type]) {\n          return;\n        }\n        if (registeredTypes[type]) {\n          return;\n        }\n        if (typeDependencies[type]) {\n          typeDependencies[type].forEach(visit);\n          return;\n        }\n        unboundTypes.push(type);\n        seen[type] = true;\n      }\n      types.forEach(visit);\n      throw new UnboundTypeError(message + \": \" + unboundTypes.map(getTypeName).join([\", \"]));\n    }\n    function __embind_register_function(name, argCount, rawArgTypesAddr, signature, rawInvoker, fn) {\n      var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n      name = readLatin1String(name);\n      rawInvoker = embind__requireFunction(signature, rawInvoker);\n      exposePublicSymbol(name, function () {\n        throwUnboundTypeError(\"Cannot call \" + name + \" due to unbound types\", argTypes);\n      }, argCount - 1);\n      whenDependentTypesAreResolved([], argTypes, function (argTypes) {\n        var invokerArgsArray = [argTypes[0], null].concat(argTypes.slice(1));\n        replacePublicSymbol(name, craftInvokerFunction(name, invokerArgsArray, null, rawInvoker, fn), argCount - 1);\n        return [];\n      });\n    }\n    function integerReadValueFromPointer(name, shift, signed) {\n      switch (shift) {\n        case 0:\n          return signed ? function readS8FromPointer(pointer) {\n            return HEAP8[pointer];\n          } : function readU8FromPointer(pointer) {\n            return HEAPU8[pointer];\n          };\n        case 1:\n          return signed ? function readS16FromPointer(pointer) {\n            return HEAP16[pointer >> 1];\n          } : function readU16FromPointer(pointer) {\n            return HEAPU16[pointer >> 1];\n          };\n        case 2:\n          return signed ? function readS32FromPointer(pointer) {\n            return HEAP32[pointer >> 2];\n          } : function readU32FromPointer(pointer) {\n            return HEAPU32[pointer >> 2];\n          };\n        default:\n          throw new TypeError(\"Unknown integer type: \" + name);\n      }\n    }\n    function __embind_register_integer(primitiveType, name, size, minRange, maxRange) {\n      name = readLatin1String(name);\n      if (maxRange === -1) {\n        maxRange = 4294967295;\n      }\n      var shift = getShiftFromSize(size);\n      var fromWireType = function fromWireType(value) {\n        return value;\n      };\n      if (minRange === 0) {\n        var bitshift = 32 - 8 * size;\n        fromWireType = function fromWireType(value) {\n          return value << bitshift >>> bitshift;\n        };\n      }\n      var isUnsignedType = name.includes(\"unsigned\");\n      registerType(primitiveType, {\n        name: name,\n        \"fromWireType\": fromWireType,\n        \"toWireType\": function toWireType(destructors, value) {\n          if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n            throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n          }\n          if (value < minRange || value > maxRange) {\n            throw new TypeError('Passing a number \"' + _embind_repr(value) + '\" from JS side to C/C++ side to an argument of type \"' + name + '\", which is outside the valid range [' + minRange + \", \" + maxRange + \"]!\");\n          }\n          return isUnsignedType ? value >>> 0 : value | 0;\n        },\n        \"argPackAdvance\": 8,\n        \"readValueFromPointer\": integerReadValueFromPointer(name, shift, minRange !== 0),\n        destructorFunction: null\n      });\n    }\n    function __embind_register_memory_view(rawType, dataTypeIndex, name) {\n      var typeMapping = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array];\n      var TA = typeMapping[dataTypeIndex];\n      function decodeMemoryView(handle) {\n        handle = handle >> 2;\n        var heap = HEAPU32;\n        var size = heap[handle];\n        var data = heap[handle + 1];\n        return new TA(buffer, data, size);\n      }\n      name = readLatin1String(name);\n      registerType(rawType, {\n        name: name,\n        \"fromWireType\": decodeMemoryView,\n        \"argPackAdvance\": 8,\n        \"readValueFromPointer\": decodeMemoryView\n      }, {\n        ignoreDuplicateRegistrations: true\n      });\n    }\n    function __embind_register_std_string(rawType, name) {\n      name = readLatin1String(name);\n      var stdStringIsUTF8 = name === \"std::string\";\n      registerType(rawType, {\n        name: name,\n        \"fromWireType\": function fromWireType(value) {\n          var length = HEAPU32[value >> 2];\n          var str;\n          if (stdStringIsUTF8) {\n            var decodeStartPtr = value + 4;\n            for (var i = 0; i <= length; ++i) {\n              var currentBytePtr = value + 4 + i;\n              if (i == length || HEAPU8[currentBytePtr] == 0) {\n                var maxRead = currentBytePtr - decodeStartPtr;\n                var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n                if (str === undefined) {\n                  str = stringSegment;\n                } else {\n                  str += String.fromCharCode(0);\n                  str += stringSegment;\n                }\n                decodeStartPtr = currentBytePtr + 1;\n              }\n            }\n          } else {\n            var a = new Array(length);\n            for (var i = 0; i < length; ++i) {\n              a[i] = String.fromCharCode(HEAPU8[value + 4 + i]);\n            }\n            str = a.join(\"\");\n          }\n          _free(value);\n          return str;\n        },\n        \"toWireType\": function toWireType(destructors, value) {\n          if (value instanceof ArrayBuffer) {\n            value = new Uint8Array(value);\n          }\n          var getLength;\n          var valueIsOfTypeString = typeof value === \"string\";\n          if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\n            throwBindingError(\"Cannot pass non-string to std::string\");\n          }\n          if (stdStringIsUTF8 && valueIsOfTypeString) {\n            getLength = function getLength() {\n              return lengthBytesUTF8(value);\n            };\n          } else {\n            getLength = function getLength() {\n              return value.length;\n            };\n          }\n          var length = getLength();\n          var ptr = _malloc(4 + length + 1);\n          HEAPU32[ptr >> 2] = length;\n          if (stdStringIsUTF8 && valueIsOfTypeString) {\n            stringToUTF8(value, ptr + 4, length + 1);\n          } else {\n            if (valueIsOfTypeString) {\n              for (var i = 0; i < length; ++i) {\n                var charCode = value.charCodeAt(i);\n                if (charCode > 255) {\n                  _free(ptr);\n                  throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\");\n                }\n                HEAPU8[ptr + 4 + i] = charCode;\n              }\n            } else {\n              for (var i = 0; i < length; ++i) {\n                HEAPU8[ptr + 4 + i] = value[i];\n              }\n            }\n          }\n          if (destructors !== null) {\n            destructors.push(_free, ptr);\n          }\n          return ptr;\n        },\n        \"argPackAdvance\": 8,\n        \"readValueFromPointer\": simpleReadValueFromPointer,\n        destructorFunction: function destructorFunction(ptr) {\n          _free(ptr);\n        }\n      });\n    }\n    function __embind_register_std_wstring(rawType, charSize, name) {\n      name = readLatin1String(name);\n      var decodeString, encodeString, getHeap, lengthBytesUTF, shift;\n      if (charSize === 2) {\n        decodeString = UTF16ToString;\n        encodeString = stringToUTF16;\n        lengthBytesUTF = lengthBytesUTF16;\n        getHeap = function getHeap() {\n          return HEAPU16;\n        };\n        shift = 1;\n      } else if (charSize === 4) {\n        decodeString = UTF32ToString;\n        encodeString = stringToUTF32;\n        lengthBytesUTF = lengthBytesUTF32;\n        getHeap = function getHeap() {\n          return HEAPU32;\n        };\n        shift = 2;\n      }\n      registerType(rawType, {\n        name: name,\n        \"fromWireType\": function fromWireType(value) {\n          var length = HEAPU32[value >> 2];\n          var HEAP = getHeap();\n          var str;\n          var decodeStartPtr = value + 4;\n          for (var i = 0; i <= length; ++i) {\n            var currentBytePtr = value + 4 + i * charSize;\n            if (i == length || HEAP[currentBytePtr >> shift] == 0) {\n              var maxReadBytes = currentBytePtr - decodeStartPtr;\n              var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n              if (str === undefined) {\n                str = stringSegment;\n              } else {\n                str += String.fromCharCode(0);\n                str += stringSegment;\n              }\n              decodeStartPtr = currentBytePtr + charSize;\n            }\n          }\n          _free(value);\n          return str;\n        },\n        \"toWireType\": function toWireType(destructors, value) {\n          if (!(typeof value === \"string\")) {\n            throwBindingError(\"Cannot pass non-string to C++ string type \" + name);\n          }\n          var length = lengthBytesUTF(value);\n          var ptr = _malloc(4 + length + charSize);\n          HEAPU32[ptr >> 2] = length >> shift;\n          encodeString(value, ptr + 4, length + charSize);\n          if (destructors !== null) {\n            destructors.push(_free, ptr);\n          }\n          return ptr;\n        },\n        \"argPackAdvance\": 8,\n        \"readValueFromPointer\": simpleReadValueFromPointer,\n        destructorFunction: function destructorFunction(ptr) {\n          _free(ptr);\n        }\n      });\n    }\n    function __embind_register_value_array(rawType, name, constructorSignature, rawConstructor, destructorSignature, rawDestructor) {\n      tupleRegistrations[rawType] = {\n        name: readLatin1String(name),\n        rawConstructor: embind__requireFunction(constructorSignature, rawConstructor),\n        rawDestructor: embind__requireFunction(destructorSignature, rawDestructor),\n        elements: []\n      };\n    }\n    function __embind_register_value_array_element(rawTupleType, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {\n      tupleRegistrations[rawTupleType].elements.push({\n        getterReturnType: getterReturnType,\n        getter: embind__requireFunction(getterSignature, getter),\n        getterContext: getterContext,\n        setterArgumentType: setterArgumentType,\n        setter: embind__requireFunction(setterSignature, setter),\n        setterContext: setterContext\n      });\n    }\n    function __embind_register_void(rawType, name) {\n      name = readLatin1String(name);\n      registerType(rawType, {\n        isVoid: true,\n        name: name,\n        \"argPackAdvance\": 0,\n        \"fromWireType\": function fromWireType() {\n          return undefined;\n        },\n        \"toWireType\": function toWireType(destructors, o) {\n          return undefined;\n        }\n      });\n    }\n    function _abort() {\n      abort(\"\");\n    }\n    function _emscripten_memcpy_big(dest, src, num) {\n      HEAPU8.copyWithin(dest, src, src + num);\n    }\n    function emscripten_realloc_buffer(size) {\n      try {\n        wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);\n        updateGlobalBufferAndViews(wasmMemory.buffer);\n        return 1;\n      } catch (e) {}\n    }\n    function _emscripten_resize_heap(requestedSize) {\n      var oldSize = HEAPU8.length;\n      requestedSize = requestedSize >>> 0;\n      var maxHeapSize = 2147483648;\n      if (requestedSize > maxHeapSize) {\n        return false;\n      }\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n        var overGrownHeapSize = oldSize * (1 + .2 / cutDown);\n        overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n        var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n        var replacement = emscripten_realloc_buffer(newSize);\n        if (replacement) {\n          return true;\n        }\n      }\n      return false;\n    }\n    var ENV = {};\n    function getExecutableName() {\n      return thisProgram || \"./this.program\";\n    }\n    function getEnvStrings() {\n      if (!getEnvStrings.strings) {\n        var lang = (typeof navigator === \"object\" && navigator.languages && navigator.languages[0] || \"C\").replace(\"-\", \"_\") + \".UTF-8\";\n        var env = {\n          \"USER\": \"web_user\",\n          \"LOGNAME\": \"web_user\",\n          \"PATH\": \"/\",\n          \"PWD\": \"/\",\n          \"HOME\": \"/home/web_user\",\n          \"LANG\": lang,\n          \"_\": getExecutableName()\n        };\n        for (var x in ENV) {\n          if (ENV[x] === undefined) delete env[x];else env[x] = ENV[x];\n        }\n        var strings = [];\n        for (var x in env) {\n          strings.push(x + \"=\" + env[x]);\n        }\n        getEnvStrings.strings = strings;\n      }\n      return getEnvStrings.strings;\n    }\n    var PATH = {\n      splitPath: function splitPath(filename) {\n        var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n        return splitPathRe.exec(filename).slice(1);\n      },\n      normalizeArray: function normalizeArray(parts, allowAboveRoot) {\n        var up = 0;\n        for (var i = parts.length - 1; i >= 0; i--) {\n          var last = parts[i];\n          if (last === \".\") {\n            parts.splice(i, 1);\n          } else if (last === \"..\") {\n            parts.splice(i, 1);\n            up++;\n          } else if (up) {\n            parts.splice(i, 1);\n            up--;\n          }\n        }\n        if (allowAboveRoot) {\n          for (; up; up--) {\n            parts.unshift(\"..\");\n          }\n        }\n        return parts;\n      },\n      normalize: function normalize(path) {\n        var isAbsolute = path.charAt(0) === \"/\",\n          trailingSlash = path.substr(-1) === \"/\";\n        path = PATH.normalizeArray(path.split(\"/\").filter(function (p) {\n          return !!p;\n        }), !isAbsolute).join(\"/\");\n        if (!path && !isAbsolute) {\n          path = \".\";\n        }\n        if (path && trailingSlash) {\n          path += \"/\";\n        }\n        return (isAbsolute ? \"/\" : \"\") + path;\n      },\n      dirname: function dirname(path) {\n        var result = PATH.splitPath(path),\n          root = result[0],\n          dir = result[1];\n        if (!root && !dir) {\n          return \".\";\n        }\n        if (dir) {\n          dir = dir.substr(0, dir.length - 1);\n        }\n        return root + dir;\n      },\n      basename: function basename(path) {\n        if (path === \"/\") return \"/\";\n        path = PATH.normalize(path);\n        path = path.replace(/\\/$/, \"\");\n        var lastSlash = path.lastIndexOf(\"/\");\n        if (lastSlash === -1) return path;\n        return path.substr(lastSlash + 1);\n      },\n      extname: function extname(path) {\n        return PATH.splitPath(path)[3];\n      },\n      join: function join() {\n        var paths = Array.prototype.slice.call(arguments, 0);\n        return PATH.normalize(paths.join(\"/\"));\n      },\n      join2: function join2(l, r) {\n        return PATH.normalize(l + \"/\" + r);\n      }\n    };\n    function getRandomDevice() {\n      if (typeof crypto === \"object\" && typeof crypto[\"getRandomValues\"] === \"function\") {\n        var randomBuffer = new Uint8Array(1);\n        return function () {\n          crypto.getRandomValues(randomBuffer);\n          return randomBuffer[0];\n        };\n      } else return function () {\n        abort(\"randomDevice\");\n      };\n    }\n    var PATH_FS = {\n      resolve: function resolve() {\n        var resolvedPath = \"\",\n          resolvedAbsolute = false;\n        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n          var path = i >= 0 ? arguments[i] : FS.cwd();\n          if (typeof path !== \"string\") {\n            throw new TypeError(\"Arguments to path.resolve must be strings\");\n          } else if (!path) {\n            return \"\";\n          }\n          resolvedPath = path + \"/\" + resolvedPath;\n          resolvedAbsolute = path.charAt(0) === \"/\";\n        }\n        resolvedPath = PATH.normalizeArray(resolvedPath.split(\"/\").filter(function (p) {\n          return !!p;\n        }), !resolvedAbsolute).join(\"/\");\n        return (resolvedAbsolute ? \"/\" : \"\") + resolvedPath || \".\";\n      },\n      relative: function relative(from, to) {\n        from = PATH_FS.resolve(from).substr(1);\n        to = PATH_FS.resolve(to).substr(1);\n        function trim(arr) {\n          var start = 0;\n          for (; start < arr.length; start++) {\n            if (arr[start] !== \"\") break;\n          }\n          var end = arr.length - 1;\n          for (; end >= 0; end--) {\n            if (arr[end] !== \"\") break;\n          }\n          if (start > end) return [];\n          return arr.slice(start, end - start + 1);\n        }\n        var fromParts = trim(from.split(\"/\"));\n        var toParts = trim(to.split(\"/\"));\n        var length = Math.min(fromParts.length, toParts.length);\n        var samePartsLength = length;\n        for (var i = 0; i < length; i++) {\n          if (fromParts[i] !== toParts[i]) {\n            samePartsLength = i;\n            break;\n          }\n        }\n        var outputParts = [];\n        for (var i = samePartsLength; i < fromParts.length; i++) {\n          outputParts.push(\"..\");\n        }\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\n        return outputParts.join(\"/\");\n      }\n    };\n    var TTY = {\n      ttys: [],\n      init: function init() {},\n      shutdown: function shutdown() {},\n      register: function register(dev, ops) {\n        TTY.ttys[dev] = {\n          input: [],\n          output: [],\n          ops: ops\n        };\n        FS.registerDevice(dev, TTY.stream_ops);\n      },\n      stream_ops: {\n        open: function open(stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n          if (!tty) {\n            throw new FS.ErrnoError(43);\n          }\n          stream.tty = tty;\n          stream.seekable = false;\n        },\n        close: function close(stream) {\n          stream.tty.ops.flush(stream.tty);\n        },\n        flush: function flush(stream) {\n          stream.tty.ops.flush(stream.tty);\n        },\n        read: function read(stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(60);\n          }\n          var bytesRead = 0;\n          for (var i = 0; i < length; i++) {\n            var result;\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n            if (result === undefined && bytesRead === 0) {\n              throw new FS.ErrnoError(6);\n            }\n            if (result === null || result === undefined) break;\n            bytesRead++;\n            buffer[offset + i] = result;\n          }\n          if (bytesRead) {\n            stream.node.timestamp = Date.now();\n          }\n          return bytesRead;\n        },\n        write: function write(stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(60);\n          }\n          try {\n            for (var i = 0; i < length; i++) {\n              stream.tty.ops.put_char(stream.tty, buffer[offset + i]);\n            }\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n          if (length) {\n            stream.node.timestamp = Date.now();\n          }\n          return i;\n        }\n      },\n      default_tty_ops: {\n        get_char: function get_char(tty) {\n          if (!tty.input.length) {\n            var result = null;\n            if (typeof window != \"undefined\" && typeof window.prompt == \"function\") {\n              result = window.prompt(\"Input: \");\n              if (result !== null) {\n                result += \"\\n\";\n              }\n            } else if (typeof readline == \"function\") {\n              result = readline();\n              if (result !== null) {\n                result += \"\\n\";\n              }\n            }\n            if (!result) {\n              return null;\n            }\n            tty.input = intArrayFromString(result, true);\n          }\n          return tty.input.shift();\n        },\n        put_char: function put_char(tty, val) {\n          if (val === null || val === 10) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n        flush: function flush(tty) {\n          if (tty.output && tty.output.length > 0) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        }\n      },\n      default_tty1_ops: {\n        put_char: function put_char(tty, val) {\n          if (val === null || val === 10) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n        flush: function flush(tty) {\n          if (tty.output && tty.output.length > 0) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        }\n      }\n    };\n    function mmapAlloc(size) {\n      abort();\n    }\n    var MEMFS = {\n      ops_table: null,\n      mount: function mount(_mount) {\n        return MEMFS.createNode(null, \"/\", 16384 | 511, 0);\n      },\n      createNode: function createNode(parent, name, mode, dev) {\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n          throw new FS.ErrnoError(63);\n        }\n        if (!MEMFS.ops_table) {\n          MEMFS.ops_table = {\n            dir: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n                lookup: MEMFS.node_ops.lookup,\n                mknod: MEMFS.node_ops.mknod,\n                rename: MEMFS.node_ops.rename,\n                unlink: MEMFS.node_ops.unlink,\n                rmdir: MEMFS.node_ops.rmdir,\n                readdir: MEMFS.node_ops.readdir,\n                symlink: MEMFS.node_ops.symlink\n              },\n              stream: {\n                llseek: MEMFS.stream_ops.llseek\n              }\n            },\n            file: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr\n              },\n              stream: {\n                llseek: MEMFS.stream_ops.llseek,\n                read: MEMFS.stream_ops.read,\n                write: MEMFS.stream_ops.write,\n                allocate: MEMFS.stream_ops.allocate,\n                mmap: MEMFS.stream_ops.mmap,\n                msync: MEMFS.stream_ops.msync\n              }\n            },\n            link: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n                readlink: MEMFS.node_ops.readlink\n              },\n              stream: {}\n            },\n            chrdev: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr\n              },\n              stream: FS.chrdev_stream_ops\n            }\n          };\n        }\n        var node = FS.createNode(parent, name, mode, dev);\n        if (FS.isDir(node.mode)) {\n          node.node_ops = MEMFS.ops_table.dir.node;\n          node.stream_ops = MEMFS.ops_table.dir.stream;\n          node.contents = {};\n        } else if (FS.isFile(node.mode)) {\n          node.node_ops = MEMFS.ops_table.file.node;\n          node.stream_ops = MEMFS.ops_table.file.stream;\n          node.usedBytes = 0;\n          node.contents = null;\n        } else if (FS.isLink(node.mode)) {\n          node.node_ops = MEMFS.ops_table.link.node;\n          node.stream_ops = MEMFS.ops_table.link.stream;\n        } else if (FS.isChrdev(node.mode)) {\n          node.node_ops = MEMFS.ops_table.chrdev.node;\n          node.stream_ops = MEMFS.ops_table.chrdev.stream;\n        }\n        node.timestamp = Date.now();\n        if (parent) {\n          parent.contents[name] = node;\n          parent.timestamp = node.timestamp;\n        }\n        return node;\n      },\n      getFileDataAsTypedArray: function getFileDataAsTypedArray(node) {\n        if (!node.contents) return new Uint8Array(0);\n        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes);\n        return new Uint8Array(node.contents);\n      },\n      expandFileStorage: function expandFileStorage(node, newCapacity) {\n        var prevCapacity = node.contents ? node.contents.length : 0;\n        if (prevCapacity >= newCapacity) return;\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n        newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) >>> 0);\n        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);\n        var oldContents = node.contents;\n        node.contents = new Uint8Array(newCapacity);\n        if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\n      },\n      resizeFileStorage: function resizeFileStorage(node, newSize) {\n        if (node.usedBytes == newSize) return;\n        if (newSize == 0) {\n          node.contents = null;\n          node.usedBytes = 0;\n        } else {\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(newSize);\n          if (oldContents) {\n            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));\n          }\n          node.usedBytes = newSize;\n        }\n      },\n      node_ops: {\n        getattr: function getattr(node) {\n          var attr = {};\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n          attr.atime = new Date(node.timestamp);\n          attr.mtime = new Date(node.timestamp);\n          attr.ctime = new Date(node.timestamp);\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        },\n        setattr: function setattr(node, attr) {\n          if (attr.mode !== undefined) {\n            node.mode = attr.mode;\n          }\n          if (attr.timestamp !== undefined) {\n            node.timestamp = attr.timestamp;\n          }\n          if (attr.size !== undefined) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        },\n        lookup: function lookup(parent, name) {\n          throw FS.genericErrors[44];\n        },\n        mknod: function mknod(parent, name, mode, dev) {\n          return MEMFS.createNode(parent, name, mode, dev);\n        },\n        rename: function rename(old_node, new_dir, new_name) {\n          if (FS.isDir(old_node.mode)) {\n            var new_node;\n            try {\n              new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {}\n            if (new_node) {\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n            }\n          }\n          delete old_node.parent.contents[old_node.name];\n          old_node.parent.timestamp = Date.now();\n          old_node.name = new_name;\n          new_dir.contents[new_name] = old_node;\n          new_dir.timestamp = old_node.parent.timestamp;\n          old_node.parent = new_dir;\n        },\n        unlink: function unlink(parent, name) {\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n        rmdir: function rmdir(parent, name) {\n          var node = FS.lookupNode(parent, name);\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(55);\n          }\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n        readdir: function readdir(node) {\n          var entries = [\".\", \"..\"];\n          for (var key in node.contents) {\n            if (!node.contents.hasOwnProperty(key)) {\n              continue;\n            }\n            entries.push(key);\n          }\n          return entries;\n        },\n        symlink: function symlink(parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\n          node.link = oldpath;\n          return node;\n        },\n        readlink: function readlink(node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          return node.link;\n        }\n      },\n      stream_ops: {\n        read: function read(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes) return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n          if (size > 8 && contents.subarray) {\n            buffer.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents[position + i];\n            }\n          }\n          return size;\n        },\n        write: function write(stream, buffer, offset, length, position, canOwn) {\n          if (buffer.buffer === HEAP8.buffer) {\n            canOwn = false;\n          }\n          if (!length) return 0;\n          var node = stream.node;\n          node.timestamp = Date.now();\n          if (buffer.subarray && (!node.contents || node.contents.subarray)) {\n            if (canOwn) {\n              node.contents = buffer.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) {\n              node.contents = buffer.slice(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) {\n              node.contents.set(buffer.subarray(offset, offset + length), position);\n              return length;\n            }\n          }\n          MEMFS.expandFileStorage(node, position + length);\n          if (node.contents.subarray && buffer.subarray) {\n            node.contents.set(buffer.subarray(offset, offset + length), position);\n          } else {\n            for (var i = 0; i < length; i++) {\n              node.contents[position + i] = buffer[offset + i];\n            }\n          }\n          node.usedBytes = Math.max(node.usedBytes, position + length);\n          return length;\n        },\n        llseek: function llseek(stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        },\n        allocate: function allocate(stream, offset, length) {\n          MEMFS.expandFileStorage(stream.node, offset + length);\n          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\n        },\n        mmap: function mmap(stream, address, length, position, prot, flags) {\n          if (address !== 0) {\n            throw new FS.ErrnoError(28);\n          }\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n          if (!(flags & 2) && contents.buffer === buffer) {\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            if (position > 0 || position + length < contents.length) {\n              if (contents.subarray) {\n                contents = contents.subarray(position, position + length);\n              } else {\n                contents = Array.prototype.slice.call(contents, position, position + length);\n              }\n            }\n            allocated = true;\n            ptr = mmapAlloc(length);\n            if (!ptr) {\n              throw new FS.ErrnoError(48);\n            }\n            HEAP8.set(contents, ptr);\n          }\n          return {\n            ptr: ptr,\n            allocated: allocated\n          };\n        },\n        msync: function msync(stream, buffer, offset, length, mmapFlags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          if (mmapFlags & 2) {\n            return 0;\n          }\n          var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n          return 0;\n        }\n      }\n    };\n    function asyncLoad(url, onload, onerror, noRunDep) {\n      var dep = !noRunDep ? getUniqueRunDependency(\"al \" + url) : \"\";\n      readAsync(url, function (arrayBuffer) {\n        assert(arrayBuffer, 'Loading data file \"' + url + '\" failed (no arrayBuffer).');\n        onload(new Uint8Array(arrayBuffer));\n        if (dep) removeRunDependency(dep);\n      }, function (event) {\n        if (onerror) {\n          onerror();\n        } else {\n          throw 'Loading data file \"' + url + '\" failed.';\n        }\n      });\n      if (dep) addRunDependency(dep);\n    }\n    var FS = {\n      root: null,\n      mounts: [],\n      devices: {},\n      streams: [],\n      nextInode: 1,\n      nameTable: null,\n      currentPath: \"/\",\n      initialized: false,\n      ignorePermissions: true,\n      ErrnoError: null,\n      genericErrors: {},\n      filesystems: null,\n      syncFSRequests: 0,\n      lookupPath: function lookupPath(path, opts) {\n        path = PATH_FS.resolve(FS.cwd(), path);\n        opts = opts || {};\n        if (!path) return {\n          path: \"\",\n          node: null\n        };\n        var defaults = {\n          follow_mount: true,\n          recurse_count: 0\n        };\n        for (var key in defaults) {\n          if (opts[key] === undefined) {\n            opts[key] = defaults[key];\n          }\n        }\n        if (opts.recurse_count > 8) {\n          throw new FS.ErrnoError(32);\n        }\n        var parts = PATH.normalizeArray(path.split(\"/\").filter(function (p) {\n          return !!p;\n        }), false);\n        var current = FS.root;\n        var current_path = \"/\";\n        for (var i = 0; i < parts.length; i++) {\n          var islast = i === parts.length - 1;\n          if (islast && opts.parent) {\n            break;\n          }\n          current = FS.lookupNode(current, parts[i]);\n          current_path = PATH.join2(current_path, parts[i]);\n          if (FS.isMountpoint(current)) {\n            if (!islast || islast && opts.follow_mount) {\n              current = current.mounted.root;\n            }\n          }\n          if (!islast || opts.follow) {\n            var count = 0;\n            while (FS.isLink(current.mode)) {\n              var link = FS.readlink(current_path);\n              current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n              var lookup = FS.lookupPath(current_path, {\n                recurse_count: opts.recurse_count\n              });\n              current = lookup.node;\n              if (count++ > 40) {\n                throw new FS.ErrnoError(32);\n              }\n            }\n          }\n        }\n        return {\n          path: current_path,\n          node: current\n        };\n      },\n      getPath: function getPath(node) {\n        var path;\n        while (true) {\n          if (FS.isRoot(node)) {\n            var mount = node.mount.mountpoint;\n            if (!path) return mount;\n            return mount[mount.length - 1] !== \"/\" ? mount + \"/\" + path : mount + path;\n          }\n          path = path ? node.name + \"/\" + path : node.name;\n          node = node.parent;\n        }\n      },\n      hashName: function hashName(parentid, name) {\n        var hash = 0;\n        for (var i = 0; i < name.length; i++) {\n          hash = (hash << 5) - hash + name.charCodeAt(i) | 0;\n        }\n        return (parentid + hash >>> 0) % FS.nameTable.length;\n      },\n      hashAddNode: function hashAddNode(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        node.name_next = FS.nameTable[hash];\n        FS.nameTable[hash] = node;\n      },\n      hashRemoveNode: function hashRemoveNode(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        if (FS.nameTable[hash] === node) {\n          FS.nameTable[hash] = node.name_next;\n        } else {\n          var current = FS.nameTable[hash];\n          while (current) {\n            if (current.name_next === node) {\n              current.name_next = node.name_next;\n              break;\n            }\n            current = current.name_next;\n          }\n        }\n      },\n      lookupNode: function lookupNode(parent, name) {\n        var errCode = FS.mayLookup(parent);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode, parent);\n        }\n        var hash = FS.hashName(parent.id, name);\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n          var nodeName = node.name;\n          if (node.parent.id === parent.id && nodeName === name) {\n            return node;\n          }\n        }\n        return FS.lookup(parent, name);\n      },\n      createNode: function createNode(parent, name, mode, rdev) {\n        var node = new FS.FSNode(parent, name, mode, rdev);\n        FS.hashAddNode(node);\n        return node;\n      },\n      destroyNode: function destroyNode(node) {\n        FS.hashRemoveNode(node);\n      },\n      isRoot: function isRoot(node) {\n        return node === node.parent;\n      },\n      isMountpoint: function isMountpoint(node) {\n        return !!node.mounted;\n      },\n      isFile: function isFile(mode) {\n        return (mode & 61440) === 32768;\n      },\n      isDir: function isDir(mode) {\n        return (mode & 61440) === 16384;\n      },\n      isLink: function isLink(mode) {\n        return (mode & 61440) === 40960;\n      },\n      isChrdev: function isChrdev(mode) {\n        return (mode & 61440) === 8192;\n      },\n      isBlkdev: function isBlkdev(mode) {\n        return (mode & 61440) === 24576;\n      },\n      isFIFO: function isFIFO(mode) {\n        return (mode & 61440) === 4096;\n      },\n      isSocket: function isSocket(mode) {\n        return (mode & 49152) === 49152;\n      },\n      flagModes: {\n        \"r\": 0,\n        \"r+\": 2,\n        \"w\": 577,\n        \"w+\": 578,\n        \"a\": 1089,\n        \"a+\": 1090\n      },\n      modeStringToFlags: function modeStringToFlags(str) {\n        var flags = FS.flagModes[str];\n        if (typeof flags === \"undefined\") {\n          throw new Error(\"Unknown file open mode: \" + str);\n        }\n        return flags;\n      },\n      flagsToPermissionString: function flagsToPermissionString(flag) {\n        var perms = [\"r\", \"w\", \"rw\"][flag & 3];\n        if (flag & 512) {\n          perms += \"w\";\n        }\n        return perms;\n      },\n      nodePermissions: function nodePermissions(node, perms) {\n        if (FS.ignorePermissions) {\n          return 0;\n        }\n        if (perms.includes(\"r\") && !(node.mode & 292)) {\n          return 2;\n        } else if (perms.includes(\"w\") && !(node.mode & 146)) {\n          return 2;\n        } else if (perms.includes(\"x\") && !(node.mode & 73)) {\n          return 2;\n        }\n        return 0;\n      },\n      mayLookup: function mayLookup(dir) {\n        var errCode = FS.nodePermissions(dir, \"x\");\n        if (errCode) return errCode;\n        if (!dir.node_ops.lookup) return 2;\n        return 0;\n      },\n      mayCreate: function mayCreate(dir, name) {\n        try {\n          var node = FS.lookupNode(dir, name);\n          return 20;\n        } catch (e) {}\n        return FS.nodePermissions(dir, \"wx\");\n      },\n      mayDelete: function mayDelete(dir, name, isdir) {\n        var node;\n        try {\n          node = FS.lookupNode(dir, name);\n        } catch (e) {\n          return e.errno;\n        }\n        var errCode = FS.nodePermissions(dir, \"wx\");\n        if (errCode) {\n          return errCode;\n        }\n        if (isdir) {\n          if (!FS.isDir(node.mode)) {\n            return 54;\n          }\n          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n            return 10;\n          }\n        } else {\n          if (FS.isDir(node.mode)) {\n            return 31;\n          }\n        }\n        return 0;\n      },\n      mayOpen: function mayOpen(node, flags) {\n        if (!node) {\n          return 44;\n        }\n        if (FS.isLink(node.mode)) {\n          return 32;\n        } else if (FS.isDir(node.mode)) {\n          if (FS.flagsToPermissionString(flags) !== \"r\" || flags & 512) {\n            return 31;\n          }\n        }\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n      },\n      MAX_OPEN_FDS: 4096,\n      nextfd: function nextfd(fd_start, fd_end) {\n        fd_start = fd_start || 0;\n        fd_end = fd_end || FS.MAX_OPEN_FDS;\n        for (var fd = fd_start; fd <= fd_end; fd++) {\n          if (!FS.streams[fd]) {\n            return fd;\n          }\n        }\n        throw new FS.ErrnoError(33);\n      },\n      getStream: function getStream(fd) {\n        return FS.streams[fd];\n      },\n      createStream: function createStream(stream, fd_start, fd_end) {\n        if (!FS.FSStream) {\n          FS.FSStream = function () {};\n          FS.FSStream.prototype = {\n            object: {\n              get: function get() {\n                return this.node;\n              },\n              set: function set(val) {\n                this.node = val;\n              }\n            },\n            isRead: {\n              get: function get() {\n                return (this.flags & 2097155) !== 1;\n              }\n            },\n            isWrite: {\n              get: function get() {\n                return (this.flags & 2097155) !== 0;\n              }\n            },\n            isAppend: {\n              get: function get() {\n                return this.flags & 1024;\n              }\n            }\n          };\n        }\n        var newStream = new FS.FSStream();\n        for (var p in stream) {\n          newStream[p] = stream[p];\n        }\n        stream = newStream;\n        var fd = FS.nextfd(fd_start, fd_end);\n        stream.fd = fd;\n        FS.streams[fd] = stream;\n        return stream;\n      },\n      closeStream: function closeStream(fd) {\n        FS.streams[fd] = null;\n      },\n      chrdev_stream_ops: {\n        open: function open(stream) {\n          var device = FS.getDevice(stream.node.rdev);\n          stream.stream_ops = device.stream_ops;\n          if (stream.stream_ops.open) {\n            stream.stream_ops.open(stream);\n          }\n        },\n        llseek: function llseek() {\n          throw new FS.ErrnoError(70);\n        }\n      },\n      major: function major(dev) {\n        return dev >> 8;\n      },\n      minor: function minor(dev) {\n        return dev & 255;\n      },\n      makedev: function makedev(ma, mi) {\n        return ma << 8 | mi;\n      },\n      registerDevice: function registerDevice(dev, ops) {\n        FS.devices[dev] = {\n          stream_ops: ops\n        };\n      },\n      getDevice: function getDevice(dev) {\n        return FS.devices[dev];\n      },\n      getMounts: function getMounts(mount) {\n        var mounts = [];\n        var check = [mount];\n        while (check.length) {\n          var m = check.pop();\n          mounts.push(m);\n          check.push.apply(check, m.mounts);\n        }\n        return mounts;\n      },\n      syncfs: function syncfs(populate, callback) {\n        if (typeof populate === \"function\") {\n          callback = populate;\n          populate = false;\n        }\n        FS.syncFSRequests++;\n        if (FS.syncFSRequests > 1) {\n          err(\"warning: \" + FS.syncFSRequests + \" FS.syncfs operations in flight at once, probably just doing extra work\");\n        }\n        var mounts = FS.getMounts(FS.root.mount);\n        var completed = 0;\n        function doCallback(errCode) {\n          FS.syncFSRequests--;\n          return callback(errCode);\n        }\n        function done(errCode) {\n          if (errCode) {\n            if (!done.errored) {\n              done.errored = true;\n              return doCallback(errCode);\n            }\n            return;\n          }\n          if (++completed >= mounts.length) {\n            doCallback(null);\n          }\n        }\n        mounts.forEach(function (mount) {\n          if (!mount.type.syncfs) {\n            return done(null);\n          }\n          mount.type.syncfs(mount, populate, done);\n        });\n      },\n      mount: function mount(type, opts, mountpoint) {\n        var root = mountpoint === \"/\";\n        var pseudo = !mountpoint;\n        var node;\n        if (root && FS.root) {\n          throw new FS.ErrnoError(10);\n        } else if (!root && !pseudo) {\n          var lookup = FS.lookupPath(mountpoint, {\n            follow_mount: false\n          });\n          mountpoint = lookup.path;\n          node = lookup.node;\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n          if (!FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n        }\n        var mount = {\n          type: type,\n          opts: opts,\n          mountpoint: mountpoint,\n          mounts: []\n        };\n        var mountRoot = type.mount(mount);\n        mountRoot.mount = mount;\n        mount.root = mountRoot;\n        if (root) {\n          FS.root = mountRoot;\n        } else if (node) {\n          node.mounted = mount;\n          if (node.mount) {\n            node.mount.mounts.push(mount);\n          }\n        }\n        return mountRoot;\n      },\n      unmount: function unmount(mountpoint) {\n        var lookup = FS.lookupPath(mountpoint, {\n          follow_mount: false\n        });\n        if (!FS.isMountpoint(lookup.node)) {\n          throw new FS.ErrnoError(28);\n        }\n        var node = lookup.node;\n        var mount = node.mounted;\n        var mounts = FS.getMounts(mount);\n        Object.keys(FS.nameTable).forEach(function (hash) {\n          var current = FS.nameTable[hash];\n          while (current) {\n            var next = current.name_next;\n            if (mounts.includes(current.mount)) {\n              FS.destroyNode(current);\n            }\n            current = next;\n          }\n        });\n        node.mounted = null;\n        var idx = node.mount.mounts.indexOf(mount);\n        node.mount.mounts.splice(idx, 1);\n      },\n      lookup: function lookup(parent, name) {\n        return parent.node_ops.lookup(parent, name);\n      },\n      mknod: function mknod(path, mode, dev) {\n        var lookup = FS.lookupPath(path, {\n          parent: true\n        });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        if (!name || name === \".\" || name === \"..\") {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.mayCreate(parent, name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.mknod) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.mknod(parent, name, mode, dev);\n      },\n      create: function create(path, mode) {\n        mode = mode !== undefined ? mode : 438;\n        mode &= 4095;\n        mode |= 32768;\n        return FS.mknod(path, mode, 0);\n      },\n      mkdir: function mkdir(path, mode) {\n        mode = mode !== undefined ? mode : 511;\n        mode &= 511 | 512;\n        mode |= 16384;\n        return FS.mknod(path, mode, 0);\n      },\n      mkdirTree: function mkdirTree(path, mode) {\n        var dirs = path.split(\"/\");\n        var d = \"\";\n        for (var i = 0; i < dirs.length; ++i) {\n          if (!dirs[i]) continue;\n          d += \"/\" + dirs[i];\n          try {\n            FS.mkdir(d, mode);\n          } catch (e) {\n            if (e.errno != 20) throw e;\n          }\n        }\n      },\n      mkdev: function mkdev(path, mode, dev) {\n        if (typeof dev === \"undefined\") {\n          dev = mode;\n          mode = 438;\n        }\n        mode |= 8192;\n        return FS.mknod(path, mode, dev);\n      },\n      symlink: function symlink(oldpath, newpath) {\n        if (!PATH_FS.resolve(oldpath)) {\n          throw new FS.ErrnoError(44);\n        }\n        var lookup = FS.lookupPath(newpath, {\n          parent: true\n        });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var newname = PATH.basename(newpath);\n        var errCode = FS.mayCreate(parent, newname);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.symlink) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.symlink(parent, newname, oldpath);\n      },\n      rename: function rename(old_path, new_path) {\n        var old_dirname = PATH.dirname(old_path);\n        var new_dirname = PATH.dirname(new_path);\n        var old_name = PATH.basename(old_path);\n        var new_name = PATH.basename(new_path);\n        var lookup, old_dir, new_dir;\n        lookup = FS.lookupPath(old_path, {\n          parent: true\n        });\n        old_dir = lookup.node;\n        lookup = FS.lookupPath(new_path, {\n          parent: true\n        });\n        new_dir = lookup.node;\n        if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\n        if (old_dir.mount !== new_dir.mount) {\n          throw new FS.ErrnoError(75);\n        }\n        var old_node = FS.lookupNode(old_dir, old_name);\n        var relative = PATH_FS.relative(old_path, new_dirname);\n        if (relative.charAt(0) !== \".\") {\n          throw new FS.ErrnoError(28);\n        }\n        relative = PATH_FS.relative(new_path, old_dirname);\n        if (relative.charAt(0) !== \".\") {\n          throw new FS.ErrnoError(55);\n        }\n        var new_node;\n        try {\n          new_node = FS.lookupNode(new_dir, new_name);\n        } catch (e) {}\n        if (old_node === new_node) {\n          return;\n        }\n        var isdir = FS.isDir(old_node.mode);\n        var errCode = FS.mayDelete(old_dir, old_name, isdir);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!old_dir.node_ops.rename) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {\n          throw new FS.ErrnoError(10);\n        }\n        if (new_dir !== old_dir) {\n          errCode = FS.nodePermissions(old_dir, \"w\");\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n        FS.hashRemoveNode(old_node);\n        try {\n          old_dir.node_ops.rename(old_node, new_dir, new_name);\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.hashAddNode(old_node);\n        }\n      },\n      rmdir: function rmdir(path) {\n        var lookup = FS.lookupPath(path, {\n          parent: true\n        });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, true);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.rmdir) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.rmdir(parent, name);\n        FS.destroyNode(node);\n      },\n      readdir: function readdir(path) {\n        var lookup = FS.lookupPath(path, {\n          follow: true\n        });\n        var node = lookup.node;\n        if (!node.node_ops.readdir) {\n          throw new FS.ErrnoError(54);\n        }\n        return node.node_ops.readdir(node);\n      },\n      unlink: function unlink(path) {\n        var lookup = FS.lookupPath(path, {\n          parent: true\n        });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, false);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.unlink) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.unlink(parent, name);\n        FS.destroyNode(node);\n      },\n      readlink: function readlink(path) {\n        var lookup = FS.lookupPath(path);\n        var link = lookup.node;\n        if (!link) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!link.node_ops.readlink) {\n          throw new FS.ErrnoError(28);\n        }\n        return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\n      },\n      stat: function stat(path, dontFollow) {\n        var lookup = FS.lookupPath(path, {\n          follow: !dontFollow\n        });\n        var node = lookup.node;\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!node.node_ops.getattr) {\n          throw new FS.ErrnoError(63);\n        }\n        return node.node_ops.getattr(node);\n      },\n      lstat: function lstat(path) {\n        return FS.stat(path, true);\n      },\n      chmod: function chmod(path, mode, dontFollow) {\n        var node;\n        if (typeof path === \"string\") {\n          var lookup = FS.lookupPath(path, {\n            follow: !dontFollow\n          });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          mode: mode & 4095 | node.mode & ~4095,\n          timestamp: Date.now()\n        });\n      },\n      lchmod: function lchmod(path, mode) {\n        FS.chmod(path, mode, true);\n      },\n      fchmod: function fchmod(fd, mode) {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        FS.chmod(stream.node, mode);\n      },\n      chown: function chown(path, uid, gid, dontFollow) {\n        var node;\n        if (typeof path === \"string\") {\n          var lookup = FS.lookupPath(path, {\n            follow: !dontFollow\n          });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          timestamp: Date.now()\n        });\n      },\n      lchown: function lchown(path, uid, gid) {\n        FS.chown(path, uid, gid, true);\n      },\n      fchown: function fchown(fd, uid, gid) {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        FS.chown(stream.node, uid, gid);\n      },\n      truncate: function truncate(path, len) {\n        if (len < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        var node;\n        if (typeof path === \"string\") {\n          var lookup = FS.lookupPath(path, {\n            follow: true\n          });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!FS.isFile(node.mode)) {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.nodePermissions(node, \"w\");\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        node.node_ops.setattr(node, {\n          size: len,\n          timestamp: Date.now()\n        });\n      },\n      ftruncate: function ftruncate(fd, len) {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(28);\n        }\n        FS.truncate(stream.node, len);\n      },\n      utime: function utime(path, atime, mtime) {\n        var lookup = FS.lookupPath(path, {\n          follow: true\n        });\n        var node = lookup.node;\n        node.node_ops.setattr(node, {\n          timestamp: Math.max(atime, mtime)\n        });\n      },\n      open: function open(path, flags, mode, fd_start, fd_end) {\n        if (path === \"\") {\n          throw new FS.ErrnoError(44);\n        }\n        flags = typeof flags === \"string\" ? FS.modeStringToFlags(flags) : flags;\n        mode = typeof mode === \"undefined\" ? 438 : mode;\n        if (flags & 64) {\n          mode = mode & 4095 | 32768;\n        } else {\n          mode = 0;\n        }\n        var node;\n        if (typeof path === \"object\") {\n          node = path;\n        } else {\n          path = PATH.normalize(path);\n          try {\n            var lookup = FS.lookupPath(path, {\n              follow: !(flags & 131072)\n            });\n            node = lookup.node;\n          } catch (e) {}\n        }\n        var created = false;\n        if (flags & 64) {\n          if (node) {\n            if (flags & 128) {\n              throw new FS.ErrnoError(20);\n            }\n          } else {\n            node = FS.mknod(path, mode, 0);\n            created = true;\n          }\n        }\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n        if (FS.isChrdev(node.mode)) {\n          flags &= ~512;\n        }\n        if (flags & 65536 && !FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n        if (!created) {\n          var errCode = FS.mayOpen(node, flags);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n        if (flags & 512) {\n          FS.truncate(node, 0);\n        }\n        flags &= ~(128 | 512 | 131072);\n        var stream = FS.createStream({\n          node: node,\n          path: FS.getPath(node),\n          id: node.id,\n          flags: flags,\n          mode: node.mode,\n          seekable: true,\n          position: 0,\n          stream_ops: node.stream_ops,\n          node_ops: node.node_ops,\n          ungotten: [],\n          error: false\n        }, fd_start, fd_end);\n        if (stream.stream_ops.open) {\n          stream.stream_ops.open(stream);\n        }\n        if (Module[\"logReadFiles\"] && !(flags & 1)) {\n          if (!FS.readFiles) FS.readFiles = {};\n          if (!(path in FS.readFiles)) {\n            FS.readFiles[path] = 1;\n          }\n        }\n        return stream;\n      },\n      close: function close(stream) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (stream.getdents) stream.getdents = null;\n        try {\n          if (stream.stream_ops.close) {\n            stream.stream_ops.close(stream);\n          }\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.closeStream(stream.fd);\n        }\n        stream.fd = null;\n      },\n      isClosed: function isClosed(stream) {\n        return stream.fd === null;\n      },\n      llseek: function llseek(stream, offset, whence) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!stream.seekable || !stream.stream_ops.llseek) {\n          throw new FS.ErrnoError(70);\n        }\n        if (whence != 0 && whence != 1 && whence != 2) {\n          throw new FS.ErrnoError(28);\n        }\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\n        stream.ungotten = [];\n        return stream.position;\n      },\n      read: function read(stream, buffer, offset, length, position) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.read) {\n          throw new FS.ErrnoError(28);\n        }\n        var seeking = typeof position !== \"undefined\";\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\n        if (!seeking) stream.position += bytesRead;\n        return bytesRead;\n      },\n      write: function write(stream, buffer, offset, length, position, canOwn) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.write) {\n          throw new FS.ErrnoError(28);\n        }\n        if (stream.seekable && stream.flags & 1024) {\n          FS.llseek(stream, 0, 2);\n        }\n        var seeking = typeof position !== \"undefined\";\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\n        if (!seeking) stream.position += bytesWritten;\n        return bytesWritten;\n      },\n      allocate: function allocate(stream, offset, length) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (offset < 0 || length <= 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (!stream.stream_ops.allocate) {\n          throw new FS.ErrnoError(138);\n        }\n        stream.stream_ops.allocate(stream, offset, length);\n      },\n      mmap: function mmap(stream, address, length, position, prot, flags) {\n        if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {\n          throw new FS.ErrnoError(2);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(2);\n        }\n        if (!stream.stream_ops.mmap) {\n          throw new FS.ErrnoError(43);\n        }\n        return stream.stream_ops.mmap(stream, address, length, position, prot, flags);\n      },\n      msync: function msync(stream, buffer, offset, length, mmapFlags) {\n        if (!stream || !stream.stream_ops.msync) {\n          return 0;\n        }\n        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);\n      },\n      munmap: function munmap(stream) {\n        return 0;\n      },\n      ioctl: function ioctl(stream, cmd, arg) {\n        if (!stream.stream_ops.ioctl) {\n          throw new FS.ErrnoError(59);\n        }\n        return stream.stream_ops.ioctl(stream, cmd, arg);\n      },\n      readFile: function readFile(path, opts) {\n        opts = opts || {};\n        opts.flags = opts.flags || 0;\n        opts.encoding = opts.encoding || \"binary\";\n        if (opts.encoding !== \"utf8\" && opts.encoding !== \"binary\") {\n          throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\n        }\n        var ret;\n        var stream = FS.open(path, opts.flags);\n        var stat = FS.stat(path);\n        var length = stat.size;\n        var buf = new Uint8Array(length);\n        FS.read(stream, buf, 0, length, 0);\n        if (opts.encoding === \"utf8\") {\n          ret = UTF8ArrayToString(buf, 0);\n        } else if (opts.encoding === \"binary\") {\n          ret = buf;\n        }\n        FS.close(stream);\n        return ret;\n      },\n      writeFile: function writeFile(path, data, opts) {\n        opts = opts || {};\n        opts.flags = opts.flags || 577;\n        var stream = FS.open(path, opts.flags, opts.mode);\n        if (typeof data === \"string\") {\n          var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\n          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\n        } else if (ArrayBuffer.isView(data)) {\n          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\n        } else {\n          throw new Error(\"Unsupported data type\");\n        }\n        FS.close(stream);\n      },\n      cwd: function cwd() {\n        return FS.currentPath;\n      },\n      chdir: function chdir(path) {\n        var lookup = FS.lookupPath(path, {\n          follow: true\n        });\n        if (lookup.node === null) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!FS.isDir(lookup.node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n        var errCode = FS.nodePermissions(lookup.node, \"x\");\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        FS.currentPath = lookup.path;\n      },\n      createDefaultDirectories: function createDefaultDirectories() {\n        FS.mkdir(\"/tmp\");\n        FS.mkdir(\"/home\");\n        FS.mkdir(\"/home/web_user\");\n      },\n      createDefaultDevices: function createDefaultDevices() {\n        FS.mkdir(\"/dev\");\n        FS.registerDevice(FS.makedev(1, 3), {\n          read: function read() {\n            return 0;\n          },\n          write: function write(stream, buffer, offset, length, pos) {\n            return length;\n          }\n        });\n        FS.mkdev(\"/dev/null\", FS.makedev(1, 3));\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n        FS.mkdev(\"/dev/tty\", FS.makedev(5, 0));\n        FS.mkdev(\"/dev/tty1\", FS.makedev(6, 0));\n        var random_device = getRandomDevice();\n        FS.createDevice(\"/dev\", \"random\", random_device);\n        FS.createDevice(\"/dev\", \"urandom\", random_device);\n        FS.mkdir(\"/dev/shm\");\n        FS.mkdir(\"/dev/shm/tmp\");\n      },\n      createSpecialDirectories: function createSpecialDirectories() {\n        FS.mkdir(\"/proc\");\n        var proc_self = FS.mkdir(\"/proc/self\");\n        FS.mkdir(\"/proc/self/fd\");\n        FS.mount({\n          mount: function mount() {\n            var node = FS.createNode(proc_self, \"fd\", 16384 | 511, 73);\n            node.node_ops = {\n              lookup: function lookup(parent, name) {\n                var fd = +name;\n                var stream = FS.getStream(fd);\n                if (!stream) throw new FS.ErrnoError(8);\n                var ret = {\n                  parent: null,\n                  mount: {\n                    mountpoint: \"fake\"\n                  },\n                  node_ops: {\n                    readlink: function readlink() {\n                      return stream.path;\n                    }\n                  }\n                };\n                ret.parent = ret;\n                return ret;\n              }\n            };\n            return node;\n          }\n        }, {}, \"/proc/self/fd\");\n      },\n      createStandardStreams: function createStandardStreams() {\n        if (Module[\"stdin\"]) {\n          FS.createDevice(\"/dev\", \"stdin\", Module[\"stdin\"]);\n        } else {\n          FS.symlink(\"/dev/tty\", \"/dev/stdin\");\n        }\n        if (Module[\"stdout\"]) {\n          FS.createDevice(\"/dev\", \"stdout\", null, Module[\"stdout\"]);\n        } else {\n          FS.symlink(\"/dev/tty\", \"/dev/stdout\");\n        }\n        if (Module[\"stderr\"]) {\n          FS.createDevice(\"/dev\", \"stderr\", null, Module[\"stderr\"]);\n        } else {\n          FS.symlink(\"/dev/tty1\", \"/dev/stderr\");\n        }\n        var stdin = FS.open(\"/dev/stdin\", 0);\n        var stdout = FS.open(\"/dev/stdout\", 1);\n        var stderr = FS.open(\"/dev/stderr\", 1);\n      },\n      ensureErrnoError: function ensureErrnoError() {\n        if (FS.ErrnoError) return;\n        FS.ErrnoError = function ErrnoError(errno, node) {\n          this.node = node;\n          this.setErrno = function (errno) {\n            this.errno = errno;\n          };\n          this.setErrno(errno);\n          this.message = \"FS error\";\n        };\n        FS.ErrnoError.prototype = new Error();\n        FS.ErrnoError.prototype.constructor = FS.ErrnoError;\n        [44].forEach(function (code) {\n          FS.genericErrors[code] = new FS.ErrnoError(code);\n          FS.genericErrors[code].stack = \"<generic error, no stack>\";\n        });\n      },\n      staticInit: function staticInit() {\n        FS.ensureErrnoError();\n        FS.nameTable = new Array(4096);\n        FS.mount(MEMFS, {}, \"/\");\n        FS.createDefaultDirectories();\n        FS.createDefaultDevices();\n        FS.createSpecialDirectories();\n        FS.filesystems = {\n          \"MEMFS\": MEMFS\n        };\n      },\n      init: function init(input, output, error) {\n        FS.init.initialized = true;\n        FS.ensureErrnoError();\n        Module[\"stdin\"] = input || Module[\"stdin\"];\n        Module[\"stdout\"] = output || Module[\"stdout\"];\n        Module[\"stderr\"] = error || Module[\"stderr\"];\n        FS.createStandardStreams();\n      },\n      quit: function quit() {\n        FS.init.initialized = false;\n        var fflush = Module[\"_fflush\"];\n        if (fflush) fflush(0);\n        for (var i = 0; i < FS.streams.length; i++) {\n          var stream = FS.streams[i];\n          if (!stream) {\n            continue;\n          }\n          FS.close(stream);\n        }\n      },\n      getMode: function getMode(canRead, canWrite) {\n        var mode = 0;\n        if (canRead) mode |= 292 | 73;\n        if (canWrite) mode |= 146;\n        return mode;\n      },\n      findObject: function findObject(path, dontResolveLastLink) {\n        var ret = FS.analyzePath(path, dontResolveLastLink);\n        if (ret.exists) {\n          return ret.object;\n        } else {\n          return null;\n        }\n      },\n      analyzePath: function analyzePath(path, dontResolveLastLink) {\n        try {\n          var lookup = FS.lookupPath(path, {\n            follow: !dontResolveLastLink\n          });\n          path = lookup.path;\n        } catch (e) {}\n        var ret = {\n          isRoot: false,\n          exists: false,\n          error: 0,\n          name: null,\n          path: null,\n          object: null,\n          parentExists: false,\n          parentPath: null,\n          parentObject: null\n        };\n        try {\n          var lookup = FS.lookupPath(path, {\n            parent: true\n          });\n          ret.parentExists = true;\n          ret.parentPath = lookup.path;\n          ret.parentObject = lookup.node;\n          ret.name = PATH.basename(path);\n          lookup = FS.lookupPath(path, {\n            follow: !dontResolveLastLink\n          });\n          ret.exists = true;\n          ret.path = lookup.path;\n          ret.object = lookup.node;\n          ret.name = lookup.node.name;\n          ret.isRoot = lookup.path === \"/\";\n        } catch (e) {\n          ret.error = e.errno;\n        }\n        return ret;\n      },\n      createPath: function createPath(parent, path, canRead, canWrite) {\n        parent = typeof parent === \"string\" ? parent : FS.getPath(parent);\n        var parts = path.split(\"/\").reverse();\n        while (parts.length) {\n          var part = parts.pop();\n          if (!part) continue;\n          var current = PATH.join2(parent, part);\n          try {\n            FS.mkdir(current);\n          } catch (e) {}\n          parent = current;\n        }\n        return current;\n      },\n      createFile: function createFile(parent, name, properties, canRead, canWrite) {\n        var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name);\n        var mode = FS.getMode(canRead, canWrite);\n        return FS.create(path, mode);\n      },\n      createDataFile: function createDataFile(parent, name, data, canRead, canWrite, canOwn) {\n        var path = name ? PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name) : parent;\n        var mode = FS.getMode(canRead, canWrite);\n        var node = FS.create(path, mode);\n        if (data) {\n          if (typeof data === \"string\") {\n            var arr = new Array(data.length);\n            for (var i = 0, len = data.length; i < len; ++i) {\n              arr[i] = data.charCodeAt(i);\n            }\n            data = arr;\n          }\n          FS.chmod(node, mode | 146);\n          var stream = FS.open(node, 577);\n          FS.write(stream, data, 0, data.length, 0, canOwn);\n          FS.close(stream);\n          FS.chmod(node, mode);\n        }\n        return node;\n      },\n      createDevice: function createDevice(parent, name, input, output) {\n        var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name);\n        var mode = FS.getMode(!!input, !!output);\n        if (!FS.createDevice.major) FS.createDevice.major = 64;\n        var dev = FS.makedev(FS.createDevice.major++, 0);\n        FS.registerDevice(dev, {\n          open: function open(stream) {\n            stream.seekable = false;\n          },\n          close: function close(stream) {\n            if (output && output.buffer && output.buffer.length) {\n              output(10);\n            }\n          },\n          read: function read(stream, buffer, offset, length, pos) {\n            var bytesRead = 0;\n            for (var i = 0; i < length; i++) {\n              var result;\n              try {\n                result = input();\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n              if (result === undefined && bytesRead === 0) {\n                throw new FS.ErrnoError(6);\n              }\n              if (result === null || result === undefined) break;\n              bytesRead++;\n              buffer[offset + i] = result;\n            }\n            if (bytesRead) {\n              stream.node.timestamp = Date.now();\n            }\n            return bytesRead;\n          },\n          write: function write(stream, buffer, offset, length, pos) {\n            for (var i = 0; i < length; i++) {\n              try {\n                output(buffer[offset + i]);\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n            }\n            if (length) {\n              stream.node.timestamp = Date.now();\n            }\n            return i;\n          }\n        });\n        return FS.mkdev(path, mode, dev);\n      },\n      forceLoadFile: function forceLoadFile(obj) {\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;\n        if (typeof XMLHttpRequest !== \"undefined\") {\n          throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\n        } else if (read_) {\n          try {\n            obj.contents = intArrayFromString(read_(obj.url), true);\n            obj.usedBytes = obj.contents.length;\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n        } else {\n          throw new Error(\"Cannot load without read() or XMLHttpRequest.\");\n        }\n      },\n      createLazyFile: function createLazyFile(parent, name, url, canRead, canWrite) {\n        function LazyUint8Array() {\n          this.lengthKnown = false;\n          this.chunks = [];\n        }\n        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {\n          if (idx > this.length - 1 || idx < 0) {\n            return undefined;\n          }\n          var chunkOffset = idx % this.chunkSize;\n          var chunkNum = idx / this.chunkSize | 0;\n          return this.getter(chunkNum)[chunkOffset];\n        };\n        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\n          this.getter = getter;\n        };\n        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\n          var xhr = new XMLHttpRequest();\n          xhr.open(\"HEAD\", url, false);\n          xhr.send(null);\n          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n          var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\n          var header;\n          var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\n          var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\n          var chunkSize = 1024 * 1024;\n          if (!hasByteServing) chunkSize = datalength;\n          var doXHR = function doXHR(from, to) {\n            if (from > to) throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\n            if (to > datalength - 1) throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"GET\", url, false);\n            if (datalength !== chunkSize) xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\n            if (typeof Uint8Array != \"undefined\") xhr.responseType = \"arraybuffer\";\n            if (xhr.overrideMimeType) {\n              xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\n            }\n            xhr.send(null);\n            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n            if (xhr.response !== undefined) {\n              return new Uint8Array(xhr.response || []);\n            } else {\n              return intArrayFromString(xhr.responseText || \"\", true);\n            }\n          };\n          var lazyArray = this;\n          lazyArray.setDataGetter(function (chunkNum) {\n            var start = chunkNum * chunkSize;\n            var end = (chunkNum + 1) * chunkSize - 1;\n            end = Math.min(end, datalength - 1);\n            if (typeof lazyArray.chunks[chunkNum] === \"undefined\") {\n              lazyArray.chunks[chunkNum] = doXHR(start, end);\n            }\n            if (typeof lazyArray.chunks[chunkNum] === \"undefined\") throw new Error(\"doXHR failed!\");\n            return lazyArray.chunks[chunkNum];\n          });\n          if (usesGzip || !datalength) {\n            chunkSize = datalength = 1;\n            datalength = this.getter(0).length;\n            chunkSize = datalength;\n            out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\n          }\n          this._length = datalength;\n          this._chunkSize = chunkSize;\n          this.lengthKnown = true;\n        };\n        if (typeof XMLHttpRequest !== \"undefined\") {\n          if (!ENVIRONMENT_IS_WORKER) throw \"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";\n          var lazyArray = new LazyUint8Array();\n          Object.defineProperties(lazyArray, {\n            length: {\n              get: function get() {\n                if (!this.lengthKnown) {\n                  this.cacheLength();\n                }\n                return this._length;\n              }\n            },\n            chunkSize: {\n              get: function get() {\n                if (!this.lengthKnown) {\n                  this.cacheLength();\n                }\n                return this._chunkSize;\n              }\n            }\n          });\n          var properties = {\n            isDevice: false,\n            contents: lazyArray\n          };\n        } else {\n          var properties = {\n            isDevice: false,\n            url: url\n          };\n        }\n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\n        if (properties.contents) {\n          node.contents = properties.contents;\n        } else if (properties.url) {\n          node.contents = null;\n          node.url = properties.url;\n        }\n        Object.defineProperties(node, {\n          usedBytes: {\n            get: function get() {\n              return this.contents.length;\n            }\n          }\n        });\n        var stream_ops = {};\n        var keys = Object.keys(node.stream_ops);\n        keys.forEach(function (key) {\n          var fn = node.stream_ops[key];\n          stream_ops[key] = function forceLoadLazyFile() {\n            FS.forceLoadFile(node);\n            return fn.apply(null, arguments);\n          };\n        });\n        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {\n          FS.forceLoadFile(node);\n          var contents = stream.node.contents;\n          if (position >= contents.length) return 0;\n          var size = Math.min(contents.length - position, length);\n          if (contents.slice) {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents[position + i];\n            }\n          } else {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents.get(position + i);\n            }\n          }\n          return size;\n        };\n        node.stream_ops = stream_ops;\n        return node;\n      },\n      createPreloadedFile: function createPreloadedFile(parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {\n        Browser.init();\n        var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\n        var dep = getUniqueRunDependency(\"cp \" + fullname);\n        function processData(byteArray) {\n          function finish(byteArray) {\n            if (preFinish) preFinish();\n            if (!dontCreateFile) {\n              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);\n            }\n            if (onload) onload();\n            removeRunDependency(dep);\n          }\n          var handled = false;\n          Module[\"preloadPlugins\"].forEach(function (plugin) {\n            if (handled) return;\n            if (plugin[\"canHandle\"](fullname)) {\n              plugin[\"handle\"](byteArray, fullname, finish, function () {\n                if (onerror) onerror();\n                removeRunDependency(dep);\n              });\n              handled = true;\n            }\n          });\n          if (!handled) finish(byteArray);\n        }\n        addRunDependency(dep);\n        if (typeof url == \"string\") {\n          asyncLoad(url, function (byteArray) {\n            processData(byteArray);\n          }, onerror);\n        } else {\n          processData(url);\n        }\n      },\n      indexedDB: function indexedDB() {\n        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n      },\n      DB_NAME: function DB_NAME() {\n        return \"EM_FS_\" + window.location.pathname;\n      },\n      DB_VERSION: 20,\n      DB_STORE_NAME: \"FILE_DATA\",\n      saveFilesToDB: function saveFilesToDB(paths, onload, onerror) {\n        onload = onload || function () {};\n        onerror = onerror || function () {};\n        var indexedDB = FS.indexedDB();\n        try {\n          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n        } catch (e) {\n          return onerror(e);\n        }\n        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {\n          out(\"creating db\");\n          var db = openRequest.result;\n          db.createObjectStore(FS.DB_STORE_NAME);\n        };\n        openRequest.onsuccess = function openRequest_onsuccess() {\n          var db = openRequest.result;\n          var transaction = db.transaction([FS.DB_STORE_NAME], \"readwrite\");\n          var files = transaction.objectStore(FS.DB_STORE_NAME);\n          var ok = 0,\n            fail = 0,\n            total = paths.length;\n          function finish() {\n            if (fail == 0) onload();else onerror();\n          }\n          paths.forEach(function (path) {\n            var putRequest = files.put(FS.analyzePath(path).object.contents, path);\n            putRequest.onsuccess = function putRequest_onsuccess() {\n              ok++;\n              if (ok + fail == total) finish();\n            };\n            putRequest.onerror = function putRequest_onerror() {\n              fail++;\n              if (ok + fail == total) finish();\n            };\n          });\n          transaction.onerror = onerror;\n        };\n        openRequest.onerror = onerror;\n      },\n      loadFilesFromDB: function loadFilesFromDB(paths, onload, onerror) {\n        onload = onload || function () {};\n        onerror = onerror || function () {};\n        var indexedDB = FS.indexedDB();\n        try {\n          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n        } catch (e) {\n          return onerror(e);\n        }\n        openRequest.onupgradeneeded = onerror;\n        openRequest.onsuccess = function openRequest_onsuccess() {\n          var db = openRequest.result;\n          try {\n            var transaction = db.transaction([FS.DB_STORE_NAME], \"readonly\");\n          } catch (e) {\n            onerror(e);\n            return;\n          }\n          var files = transaction.objectStore(FS.DB_STORE_NAME);\n          var ok = 0,\n            fail = 0,\n            total = paths.length;\n          function finish() {\n            if (fail == 0) onload();else onerror();\n          }\n          paths.forEach(function (path) {\n            var getRequest = files.get(path);\n            getRequest.onsuccess = function getRequest_onsuccess() {\n              if (FS.analyzePath(path).exists) {\n                FS.unlink(path);\n              }\n              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);\n              ok++;\n              if (ok + fail == total) finish();\n            };\n            getRequest.onerror = function getRequest_onerror() {\n              fail++;\n              if (ok + fail == total) finish();\n            };\n          });\n          transaction.onerror = onerror;\n        };\n        openRequest.onerror = onerror;\n      }\n    };\n    var SYSCALLS = {\n      mappings: {},\n      DEFAULT_POLLMASK: 5,\n      calculateAt: function calculateAt(dirfd, path, allowEmpty) {\n        if (path[0] === \"/\") {\n          return path;\n        }\n        var dir;\n        if (dirfd === -100) {\n          dir = FS.cwd();\n        } else {\n          var dirstream = FS.getStream(dirfd);\n          if (!dirstream) throw new FS.ErrnoError(8);\n          dir = dirstream.path;\n        }\n        if (path.length == 0) {\n          if (!allowEmpty) {\n            throw new FS.ErrnoError(44);\n          }\n          return dir;\n        }\n        return PATH.join2(dir, path);\n      },\n      doStat: function doStat(func, path, buf) {\n        try {\n          var stat = func(path);\n        } catch (e) {\n          if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\n            return -54;\n          }\n          throw e;\n        }\n        HEAP32[buf >> 2] = stat.dev;\n        HEAP32[buf + 4 >> 2] = 0;\n        HEAP32[buf + 8 >> 2] = stat.ino;\n        HEAP32[buf + 12 >> 2] = stat.mode;\n        HEAP32[buf + 16 >> 2] = stat.nlink;\n        HEAP32[buf + 20 >> 2] = stat.uid;\n        HEAP32[buf + 24 >> 2] = stat.gid;\n        HEAP32[buf + 28 >> 2] = stat.rdev;\n        HEAP32[buf + 32 >> 2] = 0;\n        tempI64 = [stat.size >>> 0, (tempDouble = stat.size, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 40 >> 2] = tempI64[0], HEAP32[buf + 44 >> 2] = tempI64[1];\n        HEAP32[buf + 48 >> 2] = 4096;\n        HEAP32[buf + 52 >> 2] = stat.blocks;\n        HEAP32[buf + 56 >> 2] = stat.atime.getTime() / 1e3 | 0;\n        HEAP32[buf + 60 >> 2] = 0;\n        HEAP32[buf + 64 >> 2] = stat.mtime.getTime() / 1e3 | 0;\n        HEAP32[buf + 68 >> 2] = 0;\n        HEAP32[buf + 72 >> 2] = stat.ctime.getTime() / 1e3 | 0;\n        HEAP32[buf + 76 >> 2] = 0;\n        tempI64 = [stat.ino >>> 0, (tempDouble = stat.ino, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 80 >> 2] = tempI64[0], HEAP32[buf + 84 >> 2] = tempI64[1];\n        return 0;\n      },\n      doMsync: function doMsync(addr, stream, len, flags, offset) {\n        var buffer = HEAPU8.slice(addr, addr + len);\n        FS.msync(stream, buffer, offset, len, flags);\n      },\n      doMkdir: function doMkdir(path, mode) {\n        path = PATH.normalize(path);\n        if (path[path.length - 1] === \"/\") path = path.substr(0, path.length - 1);\n        FS.mkdir(path, mode, 0);\n        return 0;\n      },\n      doMknod: function doMknod(path, mode, dev) {\n        switch (mode & 61440) {\n          case 32768:\n          case 8192:\n          case 24576:\n          case 4096:\n          case 49152:\n            break;\n          default:\n            return -28;\n        }\n        FS.mknod(path, mode, dev);\n        return 0;\n      },\n      doReadlink: function doReadlink(path, buf, bufsize) {\n        if (bufsize <= 0) return -28;\n        var ret = FS.readlink(path);\n        var len = Math.min(bufsize, lengthBytesUTF8(ret));\n        var endChar = HEAP8[buf + len];\n        stringToUTF8(ret, buf, bufsize + 1);\n        HEAP8[buf + len] = endChar;\n        return len;\n      },\n      doAccess: function doAccess(path, amode) {\n        if (amode & ~7) {\n          return -28;\n        }\n        var node;\n        var lookup = FS.lookupPath(path, {\n          follow: true\n        });\n        node = lookup.node;\n        if (!node) {\n          return -44;\n        }\n        var perms = \"\";\n        if (amode & 4) perms += \"r\";\n        if (amode & 2) perms += \"w\";\n        if (amode & 1) perms += \"x\";\n        if (perms && FS.nodePermissions(node, perms)) {\n          return -2;\n        }\n        return 0;\n      },\n      doDup: function doDup(path, flags, suggestFD) {\n        var suggest = FS.getStream(suggestFD);\n        if (suggest) FS.close(suggest);\n        return FS.open(path, flags, 0, suggestFD, suggestFD).fd;\n      },\n      doReadv: function doReadv(stream, iov, iovcnt, offset) {\n        var ret = 0;\n        for (var i = 0; i < iovcnt; i++) {\n          var ptr = HEAP32[iov + i * 8 >> 2];\n          var len = HEAP32[iov + (i * 8 + 4) >> 2];\n          var curr = FS.read(stream, HEAP8, ptr, len, offset);\n          if (curr < 0) return -1;\n          ret += curr;\n          if (curr < len) break;\n        }\n        return ret;\n      },\n      doWritev: function doWritev(stream, iov, iovcnt, offset) {\n        var ret = 0;\n        for (var i = 0; i < iovcnt; i++) {\n          var ptr = HEAP32[iov + i * 8 >> 2];\n          var len = HEAP32[iov + (i * 8 + 4) >> 2];\n          var curr = FS.write(stream, HEAP8, ptr, len, offset);\n          if (curr < 0) return -1;\n          ret += curr;\n        }\n        return ret;\n      },\n      varargs: undefined,\n      get: function get() {\n        SYSCALLS.varargs += 4;\n        var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];\n        return ret;\n      },\n      getStr: function getStr(ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n      },\n      getStreamFromFD: function getStreamFromFD(fd) {\n        var stream = FS.getStream(fd);\n        if (!stream) throw new FS.ErrnoError(8);\n        return stream;\n      },\n      get64: function get64(low, high) {\n        return low;\n      }\n    };\n    function _environ_get(__environ, environ_buf) {\n      var bufSize = 0;\n      getEnvStrings().forEach(function (string, i) {\n        var ptr = environ_buf + bufSize;\n        HEAP32[__environ + i * 4 >> 2] = ptr;\n        writeAsciiToMemory(string, ptr);\n        bufSize += string.length + 1;\n      });\n      return 0;\n    }\n    function _environ_sizes_get(penviron_count, penviron_buf_size) {\n      var strings = getEnvStrings();\n      HEAP32[penviron_count >> 2] = strings.length;\n      var bufSize = 0;\n      strings.forEach(function (string) {\n        bufSize += string.length + 1;\n      });\n      HEAP32[penviron_buf_size >> 2] = bufSize;\n      return 0;\n    }\n    function _fd_close(fd) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        FS.close(stream);\n        return 0;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return e.errno;\n      }\n    }\n    function _fd_read(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = SYSCALLS.doReadv(stream, iov, iovcnt);\n        HEAP32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return e.errno;\n      }\n    }\n    function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var HIGH_OFFSET = 4294967296;\n        var offset = offset_high * HIGH_OFFSET + (offset_low >>> 0);\n        var DOUBLE_LIMIT = 9007199254740992;\n        if (offset <= -DOUBLE_LIMIT || offset >= DOUBLE_LIMIT) {\n          return -61;\n        }\n        FS.llseek(stream, offset, whence);\n        tempI64 = [stream.position >>> 0, (tempDouble = stream.position, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[newOffset >> 2] = tempI64[0], HEAP32[newOffset + 4 >> 2] = tempI64[1];\n        if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null;\n        return 0;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return e.errno;\n      }\n    }\n    function _fd_write(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = SYSCALLS.doWritev(stream, iov, iovcnt);\n        HEAP32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return e.errno;\n      }\n    }\n    function _setTempRet0(val) {\n      setTempRet0(val);\n    }\n    function __isLeapYear(year) {\n      return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n    }\n    function __arraySum(array, index) {\n      var sum = 0;\n      for (var i = 0; i <= index; sum += array[i++]) {}\n      return sum;\n    }\n    var __MONTH_DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    var __MONTH_DAYS_REGULAR = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    function __addDays(date, days) {\n      var newDate = new Date(date.getTime());\n      while (days > 0) {\n        var leap = __isLeapYear(newDate.getFullYear());\n        var currentMonth = newDate.getMonth();\n        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];\n        if (days > daysInCurrentMonth - newDate.getDate()) {\n          days -= daysInCurrentMonth - newDate.getDate() + 1;\n          newDate.setDate(1);\n          if (currentMonth < 11) {\n            newDate.setMonth(currentMonth + 1);\n          } else {\n            newDate.setMonth(0);\n            newDate.setFullYear(newDate.getFullYear() + 1);\n          }\n        } else {\n          newDate.setDate(newDate.getDate() + days);\n          return newDate;\n        }\n      }\n      return newDate;\n    }\n    function _strftime(s, maxsize, format, tm) {\n      var tm_zone = HEAP32[tm + 40 >> 2];\n      var date = {\n        tm_sec: HEAP32[tm >> 2],\n        tm_min: HEAP32[tm + 4 >> 2],\n        tm_hour: HEAP32[tm + 8 >> 2],\n        tm_mday: HEAP32[tm + 12 >> 2],\n        tm_mon: HEAP32[tm + 16 >> 2],\n        tm_year: HEAP32[tm + 20 >> 2],\n        tm_wday: HEAP32[tm + 24 >> 2],\n        tm_yday: HEAP32[tm + 28 >> 2],\n        tm_isdst: HEAP32[tm + 32 >> 2],\n        tm_gmtoff: HEAP32[tm + 36 >> 2],\n        tm_zone: tm_zone ? UTF8ToString(tm_zone) : \"\"\n      };\n      var pattern = UTF8ToString(format);\n      var EXPANSION_RULES_1 = {\n        \"%c\": \"%a %b %d %H:%M:%S %Y\",\n        \"%D\": \"%m/%d/%y\",\n        \"%F\": \"%Y-%m-%d\",\n        \"%h\": \"%b\",\n        \"%r\": \"%I:%M:%S %p\",\n        \"%R\": \"%H:%M\",\n        \"%T\": \"%H:%M:%S\",\n        \"%x\": \"%m/%d/%y\",\n        \"%X\": \"%H:%M:%S\",\n        \"%Ec\": \"%c\",\n        \"%EC\": \"%C\",\n        \"%Ex\": \"%m/%d/%y\",\n        \"%EX\": \"%H:%M:%S\",\n        \"%Ey\": \"%y\",\n        \"%EY\": \"%Y\",\n        \"%Od\": \"%d\",\n        \"%Oe\": \"%e\",\n        \"%OH\": \"%H\",\n        \"%OI\": \"%I\",\n        \"%Om\": \"%m\",\n        \"%OM\": \"%M\",\n        \"%OS\": \"%S\",\n        \"%Ou\": \"%u\",\n        \"%OU\": \"%U\",\n        \"%OV\": \"%V\",\n        \"%Ow\": \"%w\",\n        \"%OW\": \"%W\",\n        \"%Oy\": \"%y\"\n      };\n      for (var rule in EXPANSION_RULES_1) {\n        pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_1[rule]);\n      }\n      var WEEKDAYS = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n      var MONTHS = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      function leadingSomething(value, digits, character) {\n        var str = typeof value === \"number\" ? value.toString() : value || \"\";\n        while (str.length < digits) {\n          str = character[0] + str;\n        }\n        return str;\n      }\n      function leadingNulls(value, digits) {\n        return leadingSomething(value, digits, \"0\");\n      }\n      function compareByDay(date1, date2) {\n        function sgn(value) {\n          return value < 0 ? -1 : value > 0 ? 1 : 0;\n        }\n        var compare;\n        if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {\n          if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {\n            compare = sgn(date1.getDate() - date2.getDate());\n          }\n        }\n        return compare;\n      }\n      function getFirstWeekStartDate(janFourth) {\n        switch (janFourth.getDay()) {\n          case 0:\n            return new Date(janFourth.getFullYear() - 1, 11, 29);\n          case 1:\n            return janFourth;\n          case 2:\n            return new Date(janFourth.getFullYear(), 0, 3);\n          case 3:\n            return new Date(janFourth.getFullYear(), 0, 2);\n          case 4:\n            return new Date(janFourth.getFullYear(), 0, 1);\n          case 5:\n            return new Date(janFourth.getFullYear() - 1, 11, 31);\n          case 6:\n            return new Date(janFourth.getFullYear() - 1, 11, 30);\n        }\n      }\n      function getWeekBasedYear(date) {\n        var thisDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);\n        var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\n        var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);\n        var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n        var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n        if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\n          if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\n            return thisDate.getFullYear() + 1;\n          } else {\n            return thisDate.getFullYear();\n          }\n        } else {\n          return thisDate.getFullYear() - 1;\n        }\n      }\n      var EXPANSION_RULES_2 = {\n        \"%a\": function a(date) {\n          return WEEKDAYS[date.tm_wday].substring(0, 3);\n        },\n        \"%A\": function A(date) {\n          return WEEKDAYS[date.tm_wday];\n        },\n        \"%b\": function b(date) {\n          return MONTHS[date.tm_mon].substring(0, 3);\n        },\n        \"%B\": function B(date) {\n          return MONTHS[date.tm_mon];\n        },\n        \"%C\": function C(date) {\n          var year = date.tm_year + 1900;\n          return leadingNulls(year / 100 | 0, 2);\n        },\n        \"%d\": function d(date) {\n          return leadingNulls(date.tm_mday, 2);\n        },\n        \"%e\": function e(date) {\n          return leadingSomething(date.tm_mday, 2, \" \");\n        },\n        \"%g\": function g(date) {\n          return getWeekBasedYear(date).toString().substring(2);\n        },\n        \"%G\": function G(date) {\n          return getWeekBasedYear(date);\n        },\n        \"%H\": function H(date) {\n          return leadingNulls(date.tm_hour, 2);\n        },\n        \"%I\": function I(date) {\n          var twelveHour = date.tm_hour;\n          if (twelveHour == 0) twelveHour = 12;else if (twelveHour > 12) twelveHour -= 12;\n          return leadingNulls(twelveHour, 2);\n        },\n        \"%j\": function j(date) {\n          return leadingNulls(date.tm_mday + __arraySum(__isLeapYear(date.tm_year + 1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon - 1), 3);\n        },\n        \"%m\": function m(date) {\n          return leadingNulls(date.tm_mon + 1, 2);\n        },\n        \"%M\": function M(date) {\n          return leadingNulls(date.tm_min, 2);\n        },\n        \"%n\": function n() {\n          return \"\\n\";\n        },\n        \"%p\": function p(date) {\n          if (date.tm_hour >= 0 && date.tm_hour < 12) {\n            return \"AM\";\n          } else {\n            return \"PM\";\n          }\n        },\n        \"%S\": function S(date) {\n          return leadingNulls(date.tm_sec, 2);\n        },\n        \"%t\": function t() {\n          return \"\\t\";\n        },\n        \"%u\": function u(date) {\n          return date.tm_wday || 7;\n        },\n        \"%U\": function U(date) {\n          var janFirst = new Date(date.tm_year + 1900, 0, 1);\n          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7 - janFirst.getDay());\n          var endDate = new Date(date.tm_year + 1900, date.tm_mon, date.tm_mday);\n          if (compareByDay(firstSunday, endDate) < 0) {\n            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;\n            var firstSundayUntilEndJanuary = 31 - firstSunday.getDate();\n            var days = firstSundayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();\n            return leadingNulls(Math.ceil(days / 7), 2);\n          }\n          return compareByDay(firstSunday, janFirst) === 0 ? \"01\" : \"00\";\n        },\n        \"%V\": function V(date) {\n          var janFourthThisYear = new Date(date.tm_year + 1900, 0, 4);\n          var janFourthNextYear = new Date(date.tm_year + 1901, 0, 4);\n          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n          var endDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);\n          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {\n            return \"53\";\n          }\n          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {\n            return \"01\";\n          }\n          var daysDifference;\n          if (firstWeekStartThisYear.getFullYear() < date.tm_year + 1900) {\n            daysDifference = date.tm_yday + 32 - firstWeekStartThisYear.getDate();\n          } else {\n            daysDifference = date.tm_yday + 1 - firstWeekStartThisYear.getDate();\n          }\n          return leadingNulls(Math.ceil(daysDifference / 7), 2);\n        },\n        \"%w\": function w(date) {\n          return date.tm_wday;\n        },\n        \"%W\": function W(date) {\n          var janFirst = new Date(date.tm_year, 0, 1);\n          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7 - janFirst.getDay() + 1);\n          var endDate = new Date(date.tm_year + 1900, date.tm_mon, date.tm_mday);\n          if (compareByDay(firstMonday, endDate) < 0) {\n            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;\n            var firstMondayUntilEndJanuary = 31 - firstMonday.getDate();\n            var days = firstMondayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();\n            return leadingNulls(Math.ceil(days / 7), 2);\n          }\n          return compareByDay(firstMonday, janFirst) === 0 ? \"01\" : \"00\";\n        },\n        \"%y\": function y(date) {\n          return (date.tm_year + 1900).toString().substring(2);\n        },\n        \"%Y\": function Y(date) {\n          return date.tm_year + 1900;\n        },\n        \"%z\": function z(date) {\n          var off = date.tm_gmtoff;\n          var ahead = off >= 0;\n          off = Math.abs(off) / 60;\n          off = off / 60 * 100 + off % 60;\n          return (ahead ? \"+\" : \"-\") + String(\"0000\" + off).slice(-4);\n        },\n        \"%Z\": function Z(date) {\n          return date.tm_zone;\n        },\n        \"%%\": function _() {\n          return \"%\";\n        }\n      };\n      for (var rule in EXPANSION_RULES_2) {\n        if (pattern.includes(rule)) {\n          pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_2[rule](date));\n        }\n      }\n      var bytes = intArrayFromString(pattern, false);\n      if (bytes.length > maxsize) {\n        return 0;\n      }\n      writeArrayToMemory(bytes, s);\n      return bytes.length - 1;\n    }\n    function _strftime_l(s, maxsize, format, tm) {\n      return _strftime(s, maxsize, format, tm);\n    }\n    InternalError = Module[\"InternalError\"] = extendError(Error, \"InternalError\");\n    embind_init_charCodes();\n    BindingError = Module[\"BindingError\"] = extendError(Error, \"BindingError\");\n    init_emval();\n    UnboundTypeError = Module[\"UnboundTypeError\"] = extendError(Error, \"UnboundTypeError\");\n    var FSNode = function FSNode(parent, name, mode, rdev) {\n      if (!parent) {\n        parent = this;\n      }\n      this.parent = parent;\n      this.mount = parent.mount;\n      this.mounted = null;\n      this.id = FS.nextInode++;\n      this.name = name;\n      this.mode = mode;\n      this.node_ops = {};\n      this.stream_ops = {};\n      this.rdev = rdev;\n    };\n    var readMode = 292 | 73;\n    var writeMode = 146;\n    Object.defineProperties(FSNode.prototype, {\n      read: {\n        get: function get() {\n          return (this.mode & readMode) === readMode;\n        },\n        set: function set(val) {\n          val ? this.mode |= readMode : this.mode &= ~readMode;\n        }\n      },\n      write: {\n        get: function get() {\n          return (this.mode & writeMode) === writeMode;\n        },\n        set: function set(val) {\n          val ? this.mode |= writeMode : this.mode &= ~writeMode;\n        }\n      },\n      isFolder: {\n        get: function get() {\n          return FS.isDir(this.mode);\n        }\n      },\n      isDevice: {\n        get: function get() {\n          return FS.isChrdev(this.mode);\n        }\n      }\n    });\n    FS.FSNode = FSNode;\n    FS.staticInit();\n    function intArrayFromString(stringy, dontAddNull, length) {\n      var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n      var u8array = new Array(len);\n      var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n      if (dontAddNull) u8array.length = numBytesWritten;\n      return u8array;\n    }\n    var asmLibraryArg = {\n      \"a\": ___cxa_allocate_exception,\n      \"b\": ___cxa_throw,\n      \"o\": __embind_finalize_value_array,\n      \"r\": __embind_register_bigint,\n      \"m\": __embind_register_bool,\n      \"B\": __embind_register_emval,\n      \"w\": __embind_register_enum,\n      \"g\": __embind_register_enum_value,\n      \"k\": __embind_register_float,\n      \"f\": __embind_register_function,\n      \"e\": __embind_register_integer,\n      \"d\": __embind_register_memory_view,\n      \"l\": __embind_register_std_string,\n      \"i\": __embind_register_std_wstring,\n      \"p\": __embind_register_value_array,\n      \"c\": __embind_register_value_array_element,\n      \"n\": __embind_register_void,\n      \"j\": _abort,\n      \"t\": _emscripten_memcpy_big,\n      \"h\": _emscripten_resize_heap,\n      \"x\": _environ_get,\n      \"y\": _environ_sizes_get,\n      \"A\": _fd_close,\n      \"u\": _fd_read,\n      \"q\": _fd_seek,\n      \"z\": _fd_write,\n      \"s\": _setTempRet0,\n      \"v\": _strftime_l\n    };\n    var asm = createWasm();\n    var ___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = function () {\n      return (___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = Module[\"asm\"][\"D\"]).apply(null, arguments);\n    };\n    var ___getTypeName = Module[\"___getTypeName\"] = function () {\n      return (___getTypeName = Module[\"___getTypeName\"] = Module[\"asm\"][\"F\"]).apply(null, arguments);\n    };\n    var ___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = function () {\n      return (___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = Module[\"asm\"][\"G\"]).apply(null, arguments);\n    };\n    var _malloc = Module[\"_malloc\"] = function () {\n      return (_malloc = Module[\"_malloc\"] = Module[\"asm\"][\"H\"]).apply(null, arguments);\n    };\n    var stackSave = Module[\"stackSave\"] = function () {\n      return (stackSave = Module[\"stackSave\"] = Module[\"asm\"][\"I\"]).apply(null, arguments);\n    };\n    var stackRestore = Module[\"stackRestore\"] = function () {\n      return (stackRestore = Module[\"stackRestore\"] = Module[\"asm\"][\"J\"]).apply(null, arguments);\n    };\n    var stackAlloc = Module[\"stackAlloc\"] = function () {\n      return (stackAlloc = Module[\"stackAlloc\"] = Module[\"asm\"][\"K\"]).apply(null, arguments);\n    };\n    var _free = Module[\"_free\"] = function () {\n      return (_free = Module[\"_free\"] = Module[\"asm\"][\"L\"]).apply(null, arguments);\n    };\n    var dynCall_jiji = Module[\"dynCall_jiji\"] = function () {\n      return (dynCall_jiji = Module[\"dynCall_jiji\"] = Module[\"asm\"][\"M\"]).apply(null, arguments);\n    };\n    var dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = function () {\n      return (dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = Module[\"asm\"][\"N\"]).apply(null, arguments);\n    };\n    var dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = function () {\n      return (dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = Module[\"asm\"][\"O\"]).apply(null, arguments);\n    };\n    var dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = function () {\n      return (dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = Module[\"asm\"][\"P\"]).apply(null, arguments);\n    };\n    var dynCall_viijii = Module[\"dynCall_viijii\"] = function () {\n      return (dynCall_viijii = Module[\"dynCall_viijii\"] = Module[\"asm\"][\"Q\"]).apply(null, arguments);\n    };\n    Module[\"ccall\"] = ccall;\n    var calledRun;\n    dependenciesFulfilled = function runCaller() {\n      if (!calledRun) run();\n      if (!calledRun) dependenciesFulfilled = runCaller;\n    };\n    function run(args) {\n      args = args || arguments_;\n      if (runDependencies > 0) {\n        return;\n      }\n      preRun();\n      if (runDependencies > 0) {\n        return;\n      }\n      function doRun() {\n        if (calledRun) return;\n        calledRun = true;\n        Module[\"calledRun\"] = true;\n        if (ABORT) return;\n        initRuntime();\n        readyPromiseResolve(Module);\n        if (Module[\"onRuntimeInitialized\"]) Module[\"onRuntimeInitialized\"]();\n        postRun();\n      }\n      if (Module[\"setStatus\"]) {\n        Module[\"setStatus\"](\"Running...\");\n        setTimeout(function () {\n          setTimeout(function () {\n            Module[\"setStatus\"](\"\");\n          }, 1);\n          doRun();\n        }, 1);\n      } else {\n        doRun();\n      }\n    }\n    Module[\"run\"] = run;\n    if (Module[\"preInit\"]) {\n      if (typeof Module[\"preInit\"] == \"function\") Module[\"preInit\"] = [Module[\"preInit\"]];\n      while (Module[\"preInit\"].length > 0) {\n        Module[\"preInit\"].pop()();\n      }\n    }\n    run();\n    return Module.ready;\n  };\n}();\nexport default Module;"]}}